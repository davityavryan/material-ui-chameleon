{"version":3,"sources":["webpack://material-ui-chameleon-docs/./src/Components/ErrorBoundaryFallback/ErrorBoundaryFallback.style.ts","webpack://material-ui-chameleon-docs/./src/Components/ErrorBoundaryFallback/ErrorBoundaryFallback.tsx"],"names":[],"mappings":"+NAWA,QATkB,QACd,QAAa,CACT,IAAK,CACD,WAAY,WACZ,MAAO,UCMnB,WAA+B,CAAE,UAAS,QAAO,QAAgB,CAC7D,KAAM,GAAU,IAEhB,MAAI,KAAY,QACZ,GAAU,wDAIV,gBAAC,WAAD,KACI,gBAAC,IAAD,CAAY,QAAQ,KAAK,aAAY,IAAC,wBAItC,gBAAC,IAAD,CAAY,QAAQ,QAAQ,aAAY,IACnC,GAGJ,IAUb,QAAe,WAAK","file":"js/component/error-boundary-fallback.4d4d55dbe0aeb87bd653.js","sourcesContent":["import { makeStyles, createStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(\n    createStyles({\n        pre: {\n            whiteSpace: 'pre-wrap',\n            color: 'red',\n        },\n    })\n);\n\nexport default useStyles;\n","import React, { Fragment, memo } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport useStyles from './ErrorBoundaryFallback.style';\n\ninterface IProps {\n    message?: string;\n    error?: Error;\n    info?: React.ErrorInfo;\n}\n\nfunction ErrorBoundaryFallback({ message, error, info }: IProps) {\n    const classes = useStyles();\n\n    if (message === undefined) {\n        message = 'Sorry, something went wrong. Please try again later.';\n    }\n\n    return (\n        <Fragment>\n            <Typography variant=\"h4\" gutterBottom>\n                Something went wrong\n            </Typography>\n\n            <Typography variant=\"body1\" gutterBottom>\n                {message}\n            </Typography>\n\n            {process.env.NODE_ENV !== 'production' && (\n                <h4>\n                    {error && <pre className={classes.pre}>{error.stack}</pre>}\n                    {info && <pre className={classes.pre}>{info.componentStack}</pre>}\n                </h4>\n            )}\n        </Fragment>\n    );\n}\n\nexport default memo(ErrorBoundaryFallback);\n"],"sourceRoot":""}