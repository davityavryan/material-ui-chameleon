{"version":3,"sources":["webpack://material-ui-chameleon-docs/./src/Pages/TablesPage/Components/Tables/Tables.tsx"],"names":[],"mappings":"0SAaA,WAAoB,EAAc,EAAkB,EAAa,EAAe,EAAiB,CAC7F,MAAO,CAAE,OAAM,WAAU,MAAK,QAAO,WAGzC,KAAM,GAAO,CACT,EAAW,iBAAkB,IAAK,EAAK,GAAI,GAC3C,EAAW,qBAAsB,IAAK,EAAK,GAAI,KAC/C,EAAW,SAAU,IAAK,GAAM,GAAI,GACpC,EAAW,UAAW,IAAK,IAAK,GAAI,KACpC,EAAW,cAAe,IAAK,GAAM,GAAI,MAG7C,YAAkB,CACd,KAAM,CAAC,EAAO,GAAY,WAAe,IAEnC,EAAqB,GAA+C,CACtE,EAAS,EAAM,OAAO,UAG1B,MACI,iBAAC,WAAD,KACI,gBAAC,IAAD,CAAK,MAAO,EAAG,QAAQ,OAAO,eAAe,WAAW,GAAI,GACxD,gBAAC,IAAD,CACI,QAAS,gBAAC,IAAD,CAAQ,QAAS,EAAO,SAAU,IAC3C,MAAM,mBAId,gBAAC,IAAD,CAAgB,UAAW,KACvB,gBAAC,IAAD,CAAO,KAAM,EAAQ,QAAU,SAAU,aAAW,gBAChD,gBAAC,IAAD,KACI,gBAAC,IAAD,KACI,gBAAC,IAAD,KAAW,0BACX,gBAAC,IAAD,CAAW,MAAM,SAAQ,YACzB,gBAAC,IAAD,CAAW,MAAM,SAAQ,cACzB,gBAAC,IAAD,CAAW,MAAM,SAAQ,gBACzB,gBAAC,IAAD,CAAW,MAAM,SAAQ,oBAGjC,gBAAC,IAAD,KACK,EAAK,IAAK,GACP,gBAAC,IAAD,CAAU,IAAK,EAAI,MACf,gBAAC,IAAD,CAAW,UAAU,KAAK,MAAM,OAC3B,EAAI,MAET,gBAAC,IAAD,CAAW,MAAM,SAAS,EAAI,UAC9B,gBAAC,IAAD,CAAW,MAAM,SAAS,EAAI,KAC9B,gBAAC,IAAD,CAAW,MAAM,SAAS,EAAI,OAC9B,gBAAC,IAAD,CAAW,MAAM,SAAS,EAAI,eAU9D,QAAe","file":"js/component/tables/basic.0527eb2c0ca32f88cf38.js","sourcesContent":["import React, { Fragment } from 'react';\n\nimport Box from '@material-ui/core/Box';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Switch from '@material-ui/core/Switch';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nfunction createData(name: string, calories: number, fat: number, carbs: number, protein: number) {\n    return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nfunction Tables() {\n    const [dense, setDense] = React.useState(false);\n\n    const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setDense(event.target.checked);\n    };\n\n    return (\n        <Fragment>\n            <Box width={1} display=\"flex\" justifyContent=\"flex-end\" mb={2}>\n                <FormControlLabel\n                    control={<Switch checked={dense} onChange={handleChangeDense} />}\n                    label=\"Dense padding\"\n                />\n            </Box>\n\n            <TableContainer component={Paper}>\n                <Table size={dense ? 'small' : 'medium'} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Dessert (100g serving)</TableCell>\n                            <TableCell align=\"right\">Calories</TableCell>\n                            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n                            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n                            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.map((row) => (\n                            <TableRow key={row.name}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.name}\n                                </TableCell>\n                                <TableCell align=\"right\">{row.calories}</TableCell>\n                                <TableCell align=\"right\">{row.fat}</TableCell>\n                                <TableCell align=\"right\">{row.carbs}</TableCell>\n                                <TableCell align=\"right\">{row.protein}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </Fragment>\n    );\n}\n\nexport default Tables;\n"],"sourceRoot":""}