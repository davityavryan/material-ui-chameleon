{"version":3,"sources":["webpack://material-ui-chameleon-docs/./src/Pages/ProgressPage/Components/ProgressLinear/ProgressLinear.style.ts","webpack://material-ui-chameleon-docs/./src/Pages/ProgressPage/Components/ProgressLinear/ProgressLinear.tsx"],"names":[],"mappings":"qPAcA,QAZkB,QAAW,CAAC,CAAE,aAC5B,QAAa,CACT,KAAM,CACF,MAAO,OAEP,YAAa,CACT,UAAW,EAAQ,Q,6UCAnC,WAAiC,EAAgD,CAC7E,MACI,iBAAC,IAAD,CAAK,QAAQ,OAAO,WAAW,UAC3B,gBAAC,IAAD,CAAK,MAAM,OAAO,GAAI,GAClB,gBAAC,IAAD,GAAgB,QAAQ,eAAkB,KAE9C,gBAAC,IAAD,CAAK,SAAU,IACX,gBAAC,IAAD,CAAY,QAAQ,QAAQ,MAAM,iBAC7B,GAAG,KAAK,MAAM,EAAM,aAOzC,YAA0B,CACtB,KAAM,GAAU,IAEV,CAAC,EAAU,GAAe,WAAe,GACzC,CAAC,EAAQ,GAAa,WAAe,IAErC,EAAc,SAAa,MAEjC,mBAAgB,IAAM,CAClB,EAAY,QAAU,IAAM,CACxB,GAAI,EAAW,IACX,EAAY,GACZ,EAAU,QACP,CACH,KAAM,GAAO,KAAK,SAAW,GACvB,EAAQ,KAAK,SAAW,GAC9B,EAAY,EAAW,GACvB,EAAU,EAAW,EAAO,OAKxC,YAAgB,IAAM,CAClB,KAAM,GAAQ,YAAY,IAAM,CAC5B,EAAY,WACb,KAEH,MAAO,IAAM,CACT,cAAc,KAEnB,IAGC,gBAAC,WAAD,KACI,gBAAC,MAAD,CAAK,UAAW,EAAQ,MACpB,gBAAC,IAAD,MACA,gBAAC,IAAD,CAAgB,MAAM,cACtB,gBAAC,IAAD,CAAgB,QAAQ,SAAS,MAAO,EAAU,YAAa,IAC/D,gBAAC,EAAD,CAAyB,MAAO,MAMhD,QAAe","file":"js/component/progress/linear.375a91ddef37b3619d7a.js","sourcesContent":["import { makeStyles, createStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(({ spacing }) =>\n    createStyles({\n        root: {\n            width: '100%',\n\n            '& > * + *': {\n                marginTop: spacing(2),\n            },\n        },\n    })\n);\n\nexport default useStyles;\n","import React, { Fragment } from 'react';\n\nimport Box from '@material-ui/core/Box';\nimport LinearProgress, { LinearProgressProps } from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\n\nimport useStyles from './ProgressLinear.style';\n\nfunction LinearProgressWithLabel(props: LinearProgressProps & { value: number }) {\n    return (\n        <Box display=\"flex\" alignItems=\"center\">\n            <Box width=\"100%\" mr={1}>\n                <LinearProgress variant=\"determinate\" {...props} />\n            </Box>\n            <Box minWidth={35}>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                    {`${Math.round(props.value)}%`}\n                </Typography>\n            </Box>\n        </Box>\n    );\n}\n\nfunction ProgressLinear() {\n    const classes = useStyles();\n\n    const [progress, setProgress] = React.useState(0);\n    const [buffer, setBuffer] = React.useState(10);\n\n    const progressRef = React.useRef(null);\n\n    React.useEffect(() => {\n        progressRef.current = () => {\n            if (progress > 100) {\n                setProgress(0);\n                setBuffer(10);\n            } else {\n                const diff = Math.random() * 10;\n                const diff2 = Math.random() * 10;\n                setProgress(progress + diff);\n                setBuffer(progress + diff + diff2);\n            }\n        };\n    });\n\n    React.useEffect(() => {\n        const timer = setInterval(() => {\n            progressRef.current();\n        }, 500);\n\n        return () => {\n            clearInterval(timer);\n        };\n    }, []);\n\n    return (\n        <Fragment>\n            <div className={classes.root}>\n                <LinearProgress />\n                <LinearProgress color=\"secondary\" />\n                <LinearProgress variant=\"buffer\" value={progress} valueBuffer={buffer} />\n                <LinearProgressWithLabel value={progress} />\n            </div>\n        </Fragment>\n    );\n}\n\nexport default ProgressLinear;\n"],"sourceRoot":""}