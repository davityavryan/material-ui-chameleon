{"version":3,"sources":["webpack://material-ui-chameleon-docs/./src/Components/Frame/Frame.style.ts","webpack://material-ui-chameleon-docs/./src/Components/Frame/Frame.tsx"],"names":[],"mappings":"qPA0BA,QAxBkB,QAAW,CAAC,CAAE,QAAO,UAAS,UAAS,aACrD,QAAa,CACT,KAAM,CACF,YAAa,CACT,UAAW,EAAQ,KAG3B,MAAO,CACH,aAAc,EAAM,aACpB,UAAW,EAAQ,GACnB,gBAAiB,EAAQ,WAAW,QACpC,MAAO,EAAQ,KAAK,SAExB,OAAQ,CACJ,QAAS,EAAQ,EAAG,GACpB,gBAAiB,EAAQ,OAAO,MAEhC,kBAAmB,EACnB,kBAAmB,QACnB,kBAAmB,EAAQ,OAAO,UCN9C,WAAe,CAAE,QAAO,QAAQ,SAAU,YAAoB,CAC1D,KAAM,GAAU,IAEhB,MACI,iBAAC,MAAD,CAAK,UAAW,EAAQ,MACnB,GACG,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAY,QAAQ,KAAK,UAAS,IAC7B,IAKb,gBAAC,MAAD,CAAK,UAAW,EAAQ,OACpB,gBAAC,MAAD,CAAK,UAAW,EAAQ,QACpB,gBAAC,IAAD,CAAK,QAAQ,eAAe,QAAQ,aAAa,aAAa,MAAM,EAAG,GAAK,GAAI,KAChF,gBAAC,IAAD,CAAK,QAAQ,eAAe,QAAQ,eAAe,aAAa,MAAM,EAAG,GAAK,GAAI,KAClF,gBAAC,IAAD,CAAK,QAAQ,eAAe,QAAQ,eAAe,aAAa,MAAM,EAAG,GAAK,GAAI,MAGtF,gBAAC,IAAD,CAAK,QAAQ,OAAO,cAAc,SAAS,WAAY,EAAO,EAAG,GAC7D,gBAAC,KAAD,KAAgB,MAOpC,QAAe,WAAK","file":"js/component/frame.ad0aeab4668789df5975.js","sourcesContent":["import { makeStyles, createStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(({ shape, spacing, palette, shadows }) =>\n    createStyles({\n        root: {\n            '& + $root': {\n                marginTop: spacing(4),\n            },\n        },\n        frame: {\n            borderRadius: shape.borderRadius,\n            boxShadow: shadows[2],\n            backgroundColor: palette.background.default,\n            color: palette.text.primary,\n        },\n        topBar: {\n            padding: spacing(1, 2),\n            backgroundColor: palette.action.hover,\n\n            borderBottomWidth: 1,\n            borderBottomStyle: 'solid',\n            borderBottomColor: palette.action.hover,\n        },\n    })\n);\n\nexport default useStyles;\n","import React, { memo } from 'react';\n\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\nimport { ErrorBoundary, Theme } from 'Components';\n\nimport useStyles from './Frame.style';\n\ninterface IProps {\n    title?: string;\n    align?: 'flex-start' | 'center' | 'flex-end';\n    children: JSX.Element | JSX.Element[];\n}\n\nfunction Frame({ title, align = 'center', children }: IProps) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            {title && (\n                <Theme>\n                    <Typography variant=\"h5\" paragraph>\n                        {title}\n                    </Typography>\n                </Theme>\n            )}\n\n            <div className={classes.frame}>\n                <div className={classes.topBar}>\n                    <Box display=\"inline-block\" bgcolor=\"error.main\" borderRadius=\"50%\" p={0.5} mr={0.5} />\n                    <Box display=\"inline-block\" bgcolor=\"warning.main\" borderRadius=\"50%\" p={0.5} mr={0.5} />\n                    <Box display=\"inline-block\" bgcolor=\"success.main\" borderRadius=\"50%\" p={0.5} mr={0.5} />\n                </div>\n\n                <Box display=\"flex\" flexDirection=\"column\" alignItems={align} p={3}>\n                    <ErrorBoundary>{children}</ErrorBoundary>\n                </Box>\n            </div>\n        </div>\n    );\n}\n\nexport default memo(Frame);\n"],"sourceRoot":""}