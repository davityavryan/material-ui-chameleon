{"version":3,"sources":["webpack://material-ui-chameleon-docs/./src/Pages/DrawerPage/Components/MiniVariantDrawer/MiniVariantDrawer.style.ts","webpack://material-ui-chameleon-docs/./src/Pages/DrawerPage/Components/MiniVariantDrawer/MiniVariantDrawer.tsx"],"names":[],"mappings":"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","file":"js/component/drawers/mini-variant.95d33cae05cc6c64b08d.js","sourcesContent":["import { makeStyles, createStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(({ zIndex, transitions, spacing, breakpoints, mixins }) => {\n    const drawerWidth = 240;\n\n    return createStyles({\n        root: {\n            display: 'flex',\n        },\n        appBar: {\n            zIndex: zIndex.drawer + 1,\n            transition: transitions.create(['width', 'margin'], {\n                easing: transitions.easing.sharp,\n                duration: transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: transitions.create(['width', 'margin'], {\n                easing: transitions.easing.sharp,\n                duration: transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        hide: {\n            display: 'none',\n        },\n        staticDrawer: {\n            position: 'static',\n        },\n        drawer: {\n            width: drawerWidth,\n            flexShrink: 0,\n            whiteSpace: 'nowrap',\n        },\n        drawerOpen: {\n            width: drawerWidth,\n            transition: transitions.create('width', {\n                easing: transitions.easing.sharp,\n                duration: transitions.duration.enteringScreen,\n            }),\n        },\n        drawerClose: {\n            transition: transitions.create('width', {\n                easing: transitions.easing.sharp,\n                duration: transitions.duration.leavingScreen,\n            }),\n            overflowX: 'hidden',\n            width: spacing(7) + 1,\n            [breakpoints.up('sm')]: {\n                width: spacing(9) + 1,\n            },\n        },\n        toolbar: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            padding: spacing(0, 1),\n            // necessary for content to be below app bar\n            ...mixins.toolbar,\n        },\n        content: {\n            flexGrow: 1,\n            padding: spacing(3),\n        },\n    });\n});\n\nexport default useStyles;\n","import React from 'react';\n\nimport clsx from 'clsx';\n\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport useStyles from './MiniVariantDrawer.style';\n\nfunction MiniVariantDrawer() {\n    const classes = useStyles();\n\n    const theme = useTheme();\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar\n                position=\"absolute\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: open,\n                        })}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        Mini variant drawer\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                })}\n                classes={{\n                    paper: clsx(classes.staticDrawer, {\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    }),\n                }}\n            >\n                <div className={classes.toolbar}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                        <ListItem button key={text}>\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                            <ListItemText primary={text} />\n                        </ListItem>\n                    ))}\n                </List>\n                <Divider />\n                <List>\n                    {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                        <ListItem button key={text}>\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                            <ListItemText primary={text} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Drawer>\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n                <Typography paragraph>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore\n                    et dolore magna aliqua. Rhoncus dolor purus non enim praesent elementum facilisis leo vel. Risus at\n                    ultrices mi tempus imperdiet. Semper risus in hendrerit gravida rutrum quisque non tellus. Convallis\n                    convallis tellus id interdum velit laoreet id donec ultrices. Odio morbi quis commodo odio aenean\n                    sed adipiscing. Amet nisl suscipit adipiscing bibendum est ultricies integer quis. Cursus euismod\n                    quis viverra nibh cras. Metus vulputate eu scelerisque felis imperdiet proin fermentum leo. Mauris\n                    commodo quis imperdiet massa tincidunt. Cras tincidunt lobortis feugiat vivamus at augue. At augue\n                    eget arcu dictum varius duis at consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem\n                    donec massa sapien faucibus et molestie ac.\n                </Typography>\n                <Typography paragraph>\n                    Consequat mauris nunc congue nisi vitae suscipit. Fringilla est ullamcorper eget nulla facilisi\n                    etiam dignissim diam. Pulvinar elementum integer enim neque volutpat ac tincidunt. Ornare\n                    suspendisse sed nisi lacus sed viverra tellus. Purus sit amet volutpat consequat mauris. Elementum\n                    eu facilisis sed odio morbi. Euismod lacinia at quis risus sed vulputate odio. Morbi tincidunt\n                    ornare massa eget egestas purus viverra accumsan in. In hendrerit gravida rutrum quisque non tellus\n                    orci ac. Pellentesque nec nam aliquam sem et tortor. Habitant morbi tristique senectus et.\n                    Adipiscing elit duis tristique sollicitudin nibh sit. Ornare aenean euismod elementum nisi quis\n                    eleifend. Commodo viverra maecenas accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam\n                    ultrices sagittis orci a.\n                </Typography>\n            </main>\n        </div>\n    );\n}\n\nexport default MiniVariantDrawer;\n"],"sourceRoot":""}