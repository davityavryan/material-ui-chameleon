{"version":3,"sources":["webpack://material-ui-chameleon-docs/./src/Components/ErrorBoundary/ErrorBoundary.tsx"],"names":[],"mappings":"+LAcA,eAA4B,YAAgC,CACxD,YAAY,EAAe,CACvB,MAAM,GAEN,KAAK,MAAQ,CACT,MAAO,cAIR,0BAAyB,EAAc,CAC1C,MAAO,CAAE,SAGb,kBAAkB,EAAc,EAA4B,CACxD,QAAQ,MAAM,EAAO,GAGzB,QAAS,CACL,KAAM,CAAE,SAAU,KAAK,MACjB,CAAE,WAAW,KAAM,qBAAsB,KAAK,MAEpD,MAAI,GACI,IAAsB,OACf,gBAAC,KAAD,CAAuB,UAG3B,gBAAC,EAAD,CAAmB,UAGvB,GAIf,QAAe","file":"js/component/error-boundary.2dd459171af8fe4c3c43.js","sourcesContent":["import React from 'react';\n\nimport { ErrorBoundaryFallback } from 'Components';\n\ninterface IProps {\n    FallbackComponent?: React.ElementType;\n    children?: JSX.Element | JSX.Element[];\n}\n\ninterface IState {\n    error?: Error;\n}\n\n// TODO: Sentry\nclass ErrorBoundary extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            error: undefined,\n        };\n    }\n\n    static getDerivedStateFromError(error: Error) {\n        return { error };\n    }\n\n    componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n        console.error(error, errorInfo);\n    }\n\n    render() {\n        const { error } = this.state;\n        const { children = null, FallbackComponent } = this.props;\n\n        if (error) {\n            if (FallbackComponent === undefined) {\n                return <ErrorBoundaryFallback error={error} />;\n            }\n\n            return <FallbackComponent error={error} />;\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorBoundary;\n"],"sourceRoot":""}