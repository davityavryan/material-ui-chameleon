{"version":3,"sources":["webpack://material-ui-chameleon-docs/./src/Pages/CheckboxPage/Components/CheckboxLabels/CheckboxLabels.tsx"],"names":[],"mappings":"uRAaA,KAAM,GAAgB,QAAW,CAC7B,KAAM,CACF,MAAO,SACP,YAAa,CACT,MAAO,WAGf,QAAS,KACT,GAAyB,gBAAC,IAAD,CAAU,MAAM,aAAc,KAE3D,YAA0B,CACtB,KAAM,CAAC,EAAO,GAAY,WAAe,CACrC,SAAU,GACV,SAAU,GACV,SAAU,GACV,SAAU,KAGR,EAAgB,GAA+C,CACjE,EAAS,IAAK,GAAQ,EAAM,OAAO,MAAO,EAAM,OAAO,WAG3D,MACI,iBAAC,IAAD,CAAW,IAAG,IACV,gBAAC,IAAD,CACI,QAAS,gBAAC,IAAD,CAAU,QAAS,EAAM,SAAU,SAAU,EAAc,KAAK,aACzE,MAAM,cAEV,gBAAC,IAAD,CACI,QAAS,gBAAC,IAAD,CAAU,QAAS,EAAM,SAAU,SAAU,EAAc,KAAK,WAAW,MAAM,YAC1F,MAAM,YAEV,gBAAC,IAAD,CAAkB,QAAS,gBAAC,IAAD,CAAU,KAAK,aAAe,MAAM,iBAC/D,gBAAC,IAAD,CAAkB,SAAQ,GAAC,QAAS,gBAAC,IAAD,CAAU,KAAK,aAAe,MAAM,aACxE,gBAAC,IAAD,CAAkB,SAAQ,GAAC,QAAS,gBAAC,IAAD,CAAU,QAAO,GAAC,KAAK,aAAe,MAAM,aAChF,gBAAC,IAAD,CACI,QAAS,gBAAC,IAAD,CAAU,QAAS,EAAM,SAAU,SAAU,EAAc,KAAK,WAAW,cAAa,KACjG,MAAM,kBAEV,gBAAC,IAAD,CACI,QAAS,gBAAC,EAAD,CAAe,QAAS,EAAM,SAAU,SAAU,EAAc,KAAK,aAC9E,MAAM,iBAEV,gBAAC,IAAD,CACI,QAAS,gBAAC,IAAD,CAAU,KAAM,gBAAC,IAAD,MAAoB,YAAa,gBAAC,IAAD,MAAc,KAAK,aAC7E,MAAM,gBAEV,gBAAC,IAAD,CACI,QACI,gBAAC,IAAD,CACI,KAAM,gBAAC,IAAD,CAA0B,SAAS,UACzC,YAAa,gBAAC,IAAD,CAAc,SAAS,UACpC,KAAK,aAGb,MAAM,iBAMtB,QAAe","file":"js/component/checkbox/with-labels.cc5d356ed449f418e305.js","sourcesContent":["import React from 'react';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox, { CheckboxProps } from '@material-ui/core/Checkbox';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\n\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\nconst GreenCheckbox = withStyles({\n    root: {\n        color: green[400],\n        '&$checked': {\n            color: green[600],\n        },\n    },\n    checked: {},\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\n\nfunction CheckboxLabels() {\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedF: true,\n        checkedG: true,\n    });\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n    };\n\n    return (\n        <FormGroup row>\n            <FormControlLabel\n                control={<Checkbox checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\n                label=\"Secondary\"\n            />\n            <FormControlLabel\n                control={<Checkbox checked={state.checkedB} onChange={handleChange} name=\"checkedB\" color=\"primary\" />}\n                label=\"Primary\"\n            />\n            <FormControlLabel control={<Checkbox name=\"checkedC\" />} label=\"Uncontrolled\" />\n            <FormControlLabel disabled control={<Checkbox name=\"checkedD\" />} label=\"Disabled\" />\n            <FormControlLabel disabled control={<Checkbox checked name=\"checkedE\" />} label=\"Disabled\" />\n            <FormControlLabel\n                control={<Checkbox checked={state.checkedF} onChange={handleChange} name=\"checkedF\" indeterminate />}\n                label=\"Indeterminate\"\n            />\n            <FormControlLabel\n                control={<GreenCheckbox checked={state.checkedG} onChange={handleChange} name=\"checkedG\" />}\n                label=\"Custom color\"\n            />\n            <FormControlLabel\n                control={<Checkbox icon={<FavoriteBorder />} checkedIcon={<Favorite />} name=\"checkedH\" />}\n                label=\"Custom icon\"\n            />\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n                        checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n                        name=\"checkedI\"\n                    />\n                }\n                label=\"Custom size\"\n            />\n        </FormGroup>\n    );\n}\n\nexport default CheckboxLabels;\n"],"sourceRoot":""}