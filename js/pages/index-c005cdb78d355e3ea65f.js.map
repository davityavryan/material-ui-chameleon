{"version":3,"sources":["webpack:///./gh-pages-src/Pages/Index/index.jsx"],"names":["initialTheme","useStyles","makeStyles","centralized","position","top","left","transform","textAlign","button","margin","spacing","clickMe","right","Index","classes","useState","updatedTheme","setUpdatedTheme","isExpanded","setIsExpanded","isDialogOpen","setIsDialogOpen","handleCloseDialog","theme","component","Paper","className","p","width","src","alt","variant","color","disabled","onSave","newTheme","onExpandToggle","open","onClose","maxWidth","aria-labelledby","aria-describedby","fullWidth","id","JSON","stringify","onClick","autoFocus","ReactDOM","render","fallback","document","getElementById"],"mappings":"uFAAA,wPAiBMA,EAAe,GAEfC,EAAYC,sBAAW,kBAAkB,CAC3CC,YAAa,CACTC,SAAU,QACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,UAAW,UAEfC,OAAQ,CACJC,QAAQC,EATa,EAAGA,SASR,IAEpBC,QAAS,CACLR,SAAU,QACVC,IAAK,GACLQ,MAAO,QAIf,SAASC,IACL,IAAMC,EAAUd,IADH,EAG2Be,mBAAShB,GAA1CiB,EAHM,KAGQC,EAHR,OAIuBF,oBAAS,GAAtCG,EAJM,KAIMC,EAJN,OAK2BJ,oBAAS,GAA1CK,EALM,KAKQC,EALR,KAgBPC,EAAoB,WACtBD,GAAgB,IAGpB,OACI,kBAAC,IAAD,CAAeE,MAAOxB,GAClB,kBAAC,IAAD,MAEA,kBAAC,IAAD,CAAKyB,UAAWC,IAAOC,UAAWZ,EAAQZ,YAAayB,EAAG,GACtD,yBAAKC,MAAM,MAAMC,IAAI,eAAeC,IAAI,0BAExC,6BACI,kBAAC,IAAD,CAAQC,QAAQ,YAAYL,UAAWZ,EAAQN,QAA/C,WAGA,kBAAC,IAAD,CAAQuB,QAAQ,YAAYC,MAAM,UAAUN,UAAWZ,EAAQN,QAA/D,WAGA,kBAAC,IAAD,CAAQuB,QAAQ,YAAYC,MAAM,YAAYN,UAAWZ,EAAQN,QAAjE,aAGA,kBAAC,IAAD,CAAQuB,QAAQ,YAAYC,MAAM,YAAYC,UAAQ,EAACP,UAAWZ,EAAQN,QAA1E,eAMNU,GACE,yBAAKQ,UAAWZ,EAAQH,QAASkB,IAAI,mBAAmBC,IAAI,aAGhE,kBAAC,IAAD,CAAeI,OAxCC,SAACC,GACrBlB,EAAgBkB,GAChBd,GAAgB,IAsC4Be,eAnCrB,WACvBjB,GAAc,MAoCV,kBAAC,IAAD,CACIkB,KAAMjB,EACNkB,QAAShB,EACTiB,SAAS,KACTC,kBAAgB,qBAChBC,mBAAiB,2BACjBC,WAAS,GAET,kBAAC,IAAD,CAAaC,GAAG,sBAAhB,aACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAmBA,GAAG,4BAClB,6BAAMC,KAAKC,UAAU7B,EAAc,KAAM,MAGjD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ8B,QAASxB,GAAjB,SAGA,kBAAC,IAAD,CAAQwB,QAASxB,EAAmBU,MAAM,UAAUD,QAAQ,YAAYgB,WAAS,GAAjF,eASL,qBACXC,IAASC,OAED,kBAAC,WAAD,CAAUC,SAAU,MAChB,kBAACrC,EAAD,OAGRsC,SAASC,eAAe","file":"js/pages/index-c005cdb78d355e3ea65f.js","sourcesContent":["import React, { Suspense, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ThemeProvider from 'material-ui-chameleon/ThemeProvider';\nimport SideBarEditor from 'material-ui-chameleon/SideBarEditor';\n\nconst initialTheme = {};\n\nconst useStyles = makeStyles(({ spacing }) => ({\n    centralized: {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        textAlign: 'center',\n    },\n    button: {\n        margin: spacing(1),\n    },\n    clickMe: {\n        position: 'fixed',\n        top: 25,\n        right: 75,\n    },\n}));\n\nfunction Index() {\n    const classes = useStyles();\n\n    const [updatedTheme, setUpdatedTheme] = useState(initialTheme);\n    const [isExpanded, setIsExpanded] = useState(false);\n    const [isDialogOpen, setIsDialogOpen] = useState(false);\n\n    const handleThemeSave = (newTheme) => {\n        setUpdatedTheme(newTheme);\n        setIsDialogOpen(true);\n    };\n\n    const handleExpandToggle = () => {\n        setIsExpanded(true);\n    };\n\n    const handleCloseDialog = () => {\n        setIsDialogOpen(false);\n    };\n\n    return (\n        <ThemeProvider theme={initialTheme}>\n            <CssBaseline />\n\n            <Box component={Paper} className={classes.centralized} p={2}>\n                <img width=\"150\" src=\"img/logo.svg\" alt=\"Material-UI Chameleon\" />\n\n                <div>\n                    <Button variant=\"contained\" className={classes.button}>\n                        Default\n                    </Button>\n                    <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n                        Primary\n                    </Button>\n                    <Button variant=\"contained\" color=\"secondary\" className={classes.button}>\n                        Secondary\n                    </Button>\n                    <Button variant=\"contained\" color=\"secondary\" disabled className={classes.button}>\n                        Disabled\n                    </Button>\n                </div>\n            </Box>\n\n            {!isExpanded && (\n                <img className={classes.clickMe} src=\"img/click-me.svg\" alt=\"Click me\" />\n            )}\n\n            <SideBarEditor onSave={handleThemeSave} onExpandToggle={handleExpandToggle} />\n\n            <Dialog\n                open={isDialogOpen}\n                onClose={handleCloseDialog}\n                maxWidth=\"md\"\n                aria-labelledby=\"theme-dialog-title\"\n                aria-describedby=\"theme-dialog-description\"\n                fullWidth\n            >\n                <DialogTitle id=\"theme-dialog-title\">New theme</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"theme-dialog-description\">\n                        <pre>{JSON.stringify(updatedTheme, null, 4)}</pre>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCloseDialog}>\n                        Close\n                    </Button>\n                    <Button onClick={handleCloseDialog} color=\"primary\" variant=\"contained\" autoFocus>\n                        Download\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </ThemeProvider>\n    );\n}\n\nexport default () => {\n    ReactDOM.render(\n        (\n            <Suspense fallback={null}>\n                <Index />\n            </Suspense>\n        ),\n        document.getElementById('root')\n    );\n};\n"],"sourceRoot":""}