{"version":3,"sources":["webpack:///./src/Pages/IndexPage/IndexPage.style.js","webpack:///./src/Pages/IndexPage/IndexPage.jsx","webpack:///./src/Pages/index.js","webpack:///./src/helpers/routes.js","webpack:///./src/Layouts/index.js","webpack:///./src/Components/Spinner/Spinner.style.js","webpack:///./src/Components/Spinner/Spinner.jsx"],"names":["useStyles","makeStyles","zIndex","display","minHeight","clickMe","position","top","right","tooltip","initialTheme","IndexPage","classes","updatedTheme","setUpdatedTheme","useState","isExpanded","setIsExpanded","isDialogOpen","setIsDialogOpen","handleCloseDialog","basename","ThemeProvider","theme","CssBaseline","fallback","Spinner","Object","entries","ROUTES","map","routeKey","path","exact","component","key","className","src","alt","SideBarEditor","onSave","newTheme","onExpandToggle","Dialog","open","onClose","maxWidth","aria-labelledby","fullWidth","DialogTitle","id","DialogContent","JSON","stringify","DialogActions","Button","onClick","color","variant","autoFocus","ReactDOM","render","document","getElementById","ButtonsPage","lazy","NotFoundPage","buttons","navName","typography","notFound","MainLayout","SideBar","spinner","justifyContent","alignItems","flexGrow","backdrop","modal","withBackDrop","other","Backdrop","CircularProgress","propTypes","PropTypes","bool","func","defaultProps","memo"],"mappings":"gQAiBeA,MAfGC,YAAW,EAAGC,aAAH,CACzB,UAAW,CACP,QAAS,CACLC,QAAS,OACTC,UAAW,UAGnBC,QAAS,CACLC,SAAU,QACVC,IAAK,GACLC,MAAO,GACPN,OAAQA,EAAOO,YCUvB,MAAMC,EAAe,GAErB,SAASC,IACL,MAAMC,EAAUZ,KAETa,EAAcC,GAAmBC,mBAASL,IAC1CM,EAAYC,GAAiBF,oBAAS,IACtCG,EAAcC,GAAmBJ,oBAAS,GAW3CK,EAAoB,KACtBD,GAAgB,IAGpB,OACI,kBAAC,IAAD,CAAeE,SAAkD,0BAC7D,kBAAC,IAAD,KACI,kBAACC,EAAA,EAAD,CAAeC,MAAOb,GAClB,kBAACc,EAAA,EAAD,MAEA,kBAAC,WAAD,CAAUC,SAAU,kBAACC,EAAA,EAAD,OAChB,kBAAC,IAAD,KACKC,OAAOC,QAAQC,KAAQC,IAAI,EAAEC,GAAYC,OAAMC,QAAOC,gBACnD,kBAAC,IAAD,CAAOC,IAAKJ,EAAUC,KAAMA,EAAMC,MAAOA,EAAOC,UAAWA,QAKrElB,GACE,yBAAKoB,UAAWxB,EAAQP,QAASgC,IAAI,mBAAmBC,IAAI,aAGhE,kBAACC,EAAA,EAAD,CAAeC,OA/BNC,IACrB3B,EAAgB2B,GAChBtB,GAAgB,IA6BoCuB,eA1B7B,KACvBzB,GAAc,MA2BF,kBAAC0B,EAAA,EAAD,CACIC,KAAM1B,EACN2B,QAASzB,EACT0B,SAAS,KACTC,kBAAgB,qBAChBC,WAAS,GAET,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAhB,aACA,kBAACC,EAAA,EAAD,KACI,6BAAMC,KAAKC,UAAUxC,EAAc,KAAM,KAE7C,kBAACyC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,QAASpC,GAAjB,SAGA,kBAACmC,EAAA,EAAD,CAAQC,QAASpC,EAAmBqC,MAAM,UAAUC,QAAQ,YAAYC,WAAS,GAAjF,iBAWb,eACXC,IAASC,OACL,kBAAC,WAAD,CAAUpC,SAAU,kBAACC,EAAA,EAAD,OAChB,kBAACf,EAAD,OAEJmD,SAASC,eAAe,W,4CC9FhC,MAAMC,EAAcC,eAAK,IAAM,+BAEzBC,EAAeD,eAAK,IAAM,+BCF1BpC,EAAS,CAMXsC,QAAS,CACLnC,KAAM,WACNE,UAAW8B,EACX/B,OAAO,EACPmC,QAAS,WAEbC,WAAY,CACRrC,KAAM,cACNE,UDXe+B,eAAK,IAAM,+BCY1BhC,OAAO,EACPmC,QAAS,cAEbE,SAAU,CACNtC,KAAM,KACNE,UAAWgC,EACXjC,OAAO,IAIAJ,O,iCC3Bf,+EAEA,MAAM0C,EAAaN,eAAK,IAAM,sDACxBO,EAAUP,eAAK,IAAM,uE,gGCWZjE,MAZGC,YAAW,EAAGC,aAAH,CACzBuE,QAAS,CACLtE,QAAS,cACTuE,eAAgB,SAChBC,WAAY,SACZC,SAAU,GAEdC,SAAU,CACN3E,OAAQA,EAAO4E,U,+MCFvB,SAASpD,GAAQ,aAAEqD,EAAF,QAAgBlC,KAAYmC,IACzC,MAAMpE,EAAUZ,IAEhB,OAAI+E,EAEI,kBAACE,EAAA,EAAD,CAAU7C,UAAWxB,EAAQiE,SAAUrB,QAASX,EAASD,MAAI,GACzD,kBAACsC,EAAA,EAAD,OAMR,2BAAK9C,UAAWxB,EAAQ6D,SAAaO,GACjC,kBAACE,EAAA,EAAD,OAKZxD,EAAQyD,UAAY,CAChBJ,aAAcK,IAAUC,KACxBxC,QAASuC,IAAUE,MAGvB5D,EAAQ6D,aAAe,CACnBR,cAAc,EACdlC,QAAS,QAGE2C,mBAAK9D","file":"js/pages/index.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(({ zIndex }) => ({\n    '@global': {\n        '#root': {\n            display: 'flex',\n            minHeight: '100vh',\n        },\n    },\n    clickMe: {\n        position: 'fixed',\n        top: 25,\n        right: 75,\n        zIndex: zIndex.tooltip,\n    },\n}));\n\nexport default useStyles;\n","import React, { Suspense, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport ThemeProvider from 'material-ui-chameleon/ThemeProvider';\nimport SideBarEditor from 'material-ui-chameleon/SideBarEditor';\n\nimport { MainLayout } from 'Layouts';\n\nimport { Spinner } from 'Components';\n\nimport ROUTES from 'helpers/routes';\n\nimport useStyles from './IndexPage.style';\n\nconst initialTheme = {};\n\nfunction IndexPage() {\n    const classes = useStyles();\n\n    const [updatedTheme, setUpdatedTheme] = useState(initialTheme);\n    const [isExpanded, setIsExpanded] = useState(false);\n    const [isDialogOpen, setIsDialogOpen] = useState(false);\n\n    const handleThemeSave = (newTheme) => {\n        setUpdatedTheme(newTheme);\n        setIsDialogOpen(true);\n    };\n\n    const handleExpandToggle = () => {\n        setIsExpanded(true);\n    };\n\n    const handleCloseDialog = () => {\n        setIsDialogOpen(false);\n    };\n\n    return (\n        <BrowserRouter basename={process.env.NODE_ENV === 'production' ? '/material-ui-chameleon' : '/'}>\n            <MainLayout>\n                <ThemeProvider theme={initialTheme}>\n                    <CssBaseline />\n\n                    <Suspense fallback={<Spinner />}>\n                        <Switch>\n                            {Object.entries(ROUTES).map(([routeKey, { path, exact, component }]) => (\n                                <Route key={routeKey} path={path} exact={exact} component={component} />\n                            ))}\n                        </Switch>\n                    </Suspense>\n\n                    {!isExpanded && (\n                        <img className={classes.clickMe} src=\"img/click-me.svg\" alt=\"Click me\" />\n                    )}\n\n                    <SideBarEditor onSave={handleThemeSave} onExpandToggle={handleExpandToggle} />\n\n                    <Dialog\n                        open={isDialogOpen}\n                        onClose={handleCloseDialog}\n                        maxWidth=\"md\"\n                        aria-labelledby=\"theme-dialog-title\"\n                        fullWidth\n                    >\n                        <DialogTitle id=\"theme-dialog-title\">New theme</DialogTitle>\n                        <DialogContent>\n                            <pre>{JSON.stringify(updatedTheme, null, 4)}</pre>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseDialog}>\n                                Close\n                            </Button>\n                            <Button onClick={handleCloseDialog} color=\"primary\" variant=\"contained\" autoFocus>\n                                Download\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </ThemeProvider>\n            </MainLayout>\n        </BrowserRouter>\n    );\n}\n\nexport default () => {\n    ReactDOM.render(\n        <Suspense fallback={<Spinner />}>\n            <IndexPage />\n        </Suspense>,\n        document.getElementById('root'),\n    );\n};\n","import { lazy } from 'react';\n\nconst ButtonsPage = lazy(() => import(/* webpackChunkName: \"pages/buttons\" */'./ButtonsPage/ButtonsPage'));\n// const HomePage = lazy(() => import(/* webpackChunkName: \"pages/home\" */'./HomePage.ignore/HomePage'));\nconst NotFoundPage = lazy(() => import(/* webpackChunkName: \"pages/not-found\" */'./NotFoundPage/NotFoundPage'));\nconst TypographyPage = lazy(() => import(/* webpackChunkName: \"pages/typography\" */'./TypographyPage/TypographyPage'));\n\nexport {\n    ButtonsPage,\n    // HomePage,\n    NotFoundPage,\n    TypographyPage,\n};\n","import { ButtonsPage, NotFoundPage, TypographyPage } from 'Pages';\n\nconst ROUTES = {\n    // home: {\n    //     path: '/',\n    //     component: HomePage,\n    //     exact: true,\n    // },\n    buttons: {\n        path: '/buttons',\n        component: ButtonsPage,\n        exact: true,\n        navName: 'Buttons',\n    },\n    typography: {\n        path: '/typography',\n        component: TypographyPage,\n        exact: true,\n        navName: 'Typography',\n    },\n    notFound: {\n        path: '/*',\n        component: NotFoundPage,\n        exact: true,\n    },\n};\n\nexport default ROUTES;\n","import { lazy } from 'react';\n\nconst MainLayout = lazy(() => import(/* webpackChunkName: \"layouts/main-layout\" */'./MainLayout/MainLayout'));\nconst SideBar = lazy(() => import(/* webpackChunkName: \"layouts/side-bar\" */'./SideBar/SideBar'));\n\nexport {\n    MainLayout,\n    SideBar,\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(({ zIndex }) => ({\n    spinner: {\n        display: 'inline-flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexGrow: 1,\n    },\n    backdrop: {\n        zIndex: zIndex.modal,\n    },\n}));\n\nexport default useStyles;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport useStyles from './Spinner.style';\n\nfunction Spinner({ withBackDrop, onClose, ...other }) {\n    const classes = useStyles();\n\n    if (withBackDrop) {\n        return (\n            <Backdrop className={classes.backdrop} onClick={onClose} open>\n                <CircularProgress />\n            </Backdrop>\n        );\n    }\n\n    return (\n        <div className={classes.spinner} {...other}>\n            <CircularProgress />\n        </div>\n    );\n}\n\nSpinner.propTypes = {\n    withBackDrop: PropTypes.bool,\n    onClose: PropTypes.func,\n};\n\nSpinner.defaultProps = {\n    withBackDrop: false,\n    onClose: () => undefined,\n};\n\nexport default memo(Spinner);\n"],"sourceRoot":""}