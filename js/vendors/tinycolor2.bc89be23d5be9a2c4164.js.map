{"version":3,"sources":["webpack://material-ui-chameleon-docs/./node_modules/tinycolor2/tinycolor.js"],"names":[],"mappings":"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","file":"js/vendors/tinycolor2.bc89be23d5be9a2c4164.js","sourcesContent":["// TinyColor v1.4.2\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (typeof define === 'function' && define.amd) {\n    define(function () {return tinycolor;});\n}\n// Browser: Expose to window\nelse {\n    window.tinycolor = tinycolor;\n}\n\n})(Math);\n"],"sourceRoot":""}