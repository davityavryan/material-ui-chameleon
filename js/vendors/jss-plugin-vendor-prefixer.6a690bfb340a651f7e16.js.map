{"version":3,"sources":["webpack://material-ui-chameleon-docs/./node_modules/jss-plugin-vendor-prefixer/dist/jss-plugin-vendor-prefixer.esm.js"],"names":[],"mappings":"oLASA,YAA6B,CAC3B,WAAuB,EAAM,CAC3B,GAAI,EAAK,OAAS,YAAa,CAC7B,GAAI,GAAS,EACb,EAAO,GAAK,SAAmB,EAAO,KAI1C,WAAqB,EAAO,CAC1B,OAAS,KAAQ,GAAO,CACtB,GAAI,GAAQ,EAAM,GAElB,GAAI,IAAS,aAAe,MAAM,QAAQ,GAAQ,CAChD,EAAM,GAAQ,EAAM,IAAI,GACxB,SAGF,GAAI,GAAa,GACb,EAAgB,SAAkB,GAClC,GAAiB,IAAkB,GAAM,GAAa,IAC1D,GAAI,GAAc,GACd,EAAmB,SAAe,EAAe,SAAW,IAC5D,GAAoB,IAAqB,GAAO,GAAc,IAE9D,IAAc,IACZ,IAAY,MAAO,GAAM,GAC7B,EAAM,GAAiB,GAAQ,GAAoB,GAIvD,MAAO,GAGT,WAAwB,EAAO,EAAM,CACnC,MAAI,GAAK,OAAS,QAAgB,EAC3B,EAAY,GAGrB,WAAuB,EAAO,EAAM,CAClC,MAAO,SAAe,EAAM,SAAW,KAAW,EAGpD,MAAO,CACL,gBACA,iBACA,iBAIJ,QAAe","file":"js/vendors/jss-plugin-vendor-prefixer.6a690bfb340a651f7e16.js","sourcesContent":["import { supportedKeyframes, supportedValue, supportedProperty } from 'css-vendor';\nimport { toCssValue } from 'jss';\n\n/**\n * Add vendor prefix to a property name when needed.\n *\n * @api public\n */\n\nfunction jssVendorPrefixer() {\n  function onProcessRule(rule) {\n    if (rule.type === 'keyframes') {\n      var atRule = rule;\n      atRule.at = supportedKeyframes(atRule.at);\n    }\n  }\n\n  function prefixStyle(style) {\n    for (var prop in style) {\n      var value = style[prop];\n\n      if (prop === 'fallbacks' && Array.isArray(value)) {\n        style[prop] = value.map(prefixStyle);\n        continue;\n      }\n\n      var changeProp = false;\n      var supportedProp = supportedProperty(prop);\n      if (supportedProp && supportedProp !== prop) changeProp = true;\n      var changeValue = false;\n      var supportedValue$1 = supportedValue(supportedProp, toCssValue(value));\n      if (supportedValue$1 && supportedValue$1 !== value) changeValue = true;\n\n      if (changeProp || changeValue) {\n        if (changeProp) delete style[prop];\n        style[supportedProp || prop] = supportedValue$1 || value;\n      }\n    }\n\n    return style;\n  }\n\n  function onProcessStyle(style, rule) {\n    if (rule.type !== 'style') return style;\n    return prefixStyle(style);\n  }\n\n  function onChangeValue(value, prop) {\n    return supportedValue(prop, toCssValue(value)) || value;\n  }\n\n  return {\n    onProcessRule: onProcessRule,\n    onProcessStyle: onProcessStyle,\n    onChangeValue: onChangeValue\n  };\n}\n\nexport default jssVendorPrefixer;\n"],"sourceRoot":""}