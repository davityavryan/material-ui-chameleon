{"version":3,"sources":["webpack://material-ui-chameleon-gh-pages/./node_modules/resolve-pathname/esm/resolve-pathname.js"],"names":[],"mappings":"iKAAA,WAAoB,EAAU,CAC5B,MAAO,GAAS,OAAO,KAAO,IAIhC,WAAmB,EAAM,EAAO,CAC9B,OAAS,GAAI,EAAO,EAAI,EAAI,EAAG,EAAI,EAAK,OAAQ,EAAI,EAAG,GAAK,EAAG,GAAK,EAClE,EAAK,GAAK,EAAK,GAGjB,EAAK,MAIP,WAAyB,EAAI,EAAM,CAC7B,IAAS,QAAW,GAAO,IAE/B,GAAI,GAAW,GAAM,EAAG,MAAM,MAAS,GACnC,EAAa,GAAQ,EAAK,MAAM,MAAS,GAEzC,EAAU,GAAM,EAAW,GAC3B,EAAY,GAAQ,EAAW,GAC/B,EAAa,GAAW,EAW5B,GATI,GAAM,EAAW,GAEnB,EAAY,EACH,EAAQ,QAEjB,GAAU,MACV,EAAY,EAAU,OAAO,IAG3B,CAAC,EAAU,OAAQ,MAAO,IAE9B,GAAI,GACJ,GAAI,EAAU,OAAQ,CACpB,GAAI,GAAO,EAAU,EAAU,OAAS,GACxC,EAAmB,IAAS,KAAO,IAAS,MAAQ,IAAS,OAE7D,GAAmB,GAIrB,OADI,GAAK,EACA,EAAI,EAAU,OAAQ,GAAK,EAAG,IAAK,CAC1C,GAAI,GAAO,EAAU,GAEjB,IAAS,IACX,EAAU,EAAW,GACZ,IAAS,KAClB,GAAU,EAAW,GACrB,KACS,GACT,GAAU,EAAW,GACrB,KAIJ,GAAI,CAAC,EAAY,KAAO,IAAM,EAAI,EAAU,QAAQ,MAGlD,GACA,EAAU,KAAO,IAChB,EAAC,EAAU,IAAM,CAAC,EAAW,EAAU,MAExC,EAAU,QAAQ,IAEpB,GAAI,GAAS,EAAU,KAAK,KAE5B,MAAI,IAAoB,EAAO,OAAO,MAAQ,KAAK,IAAU,KAEtD,EAGT,QAAe","file":"js/vendors/resolve-pathname.3e5a72a4212c14d24f7f.js","sourcesContent":["function isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n}\n\n// About 1.5x faster than the two-arg version of Array#splice()\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n}\n\n// This implementation is based heavily on node's url.parse\nfunction resolvePathname(to, from) {\n  if (from === undefined) from = '';\n\n  var toParts = (to && to.split('/')) || [];\n  var fromParts = (from && from.split('/')) || [];\n\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n\n  var hasTrailingSlash;\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) fromParts.unshift('..');\n\n  if (\n    mustEndAbs &&\n    fromParts[0] !== '' &&\n    (!fromParts[0] || !isAbsolute(fromParts[0]))\n  )\n    fromParts.unshift('');\n\n  var result = fromParts.join('/');\n\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n\n  return result;\n}\n\nexport default resolvePathname;\n"],"sourceRoot":""}