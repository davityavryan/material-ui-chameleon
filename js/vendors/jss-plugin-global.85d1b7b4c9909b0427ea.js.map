{"version":3,"sources":["webpack://material-ui-chameleon-gh-pages/./node_modules/jss-plugin-global/dist/jss-plugin-global.esm.js"],"names":[],"mappings":"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","file":"js/vendors/jss-plugin-global.85d1b7b4c9909b0427ea.js","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport { RuleList } from 'jss';\n\nvar at = '@global';\nvar atPrefix = '@global ';\n\nvar GlobalContainerRule =\n/*#__PURE__*/\nfunction () {\n  function GlobalContainerRule(key, styles, options) {\n    this.type = 'global';\n    this.at = at;\n    this.rules = void 0;\n    this.options = void 0;\n    this.key = void 0;\n    this.isProcessed = false;\n    this.key = key;\n    this.options = options;\n    this.rules = new RuleList(_extends({}, options, {\n      parent: this\n    }));\n\n    for (var selector in styles) {\n      this.rules.add(selector, styles[selector]);\n    }\n\n    this.rules.process();\n  }\n  /**\n   * Get a rule.\n   */\n\n\n  var _proto = GlobalContainerRule.prototype;\n\n  _proto.getRule = function getRule(name) {\n    return this.rules.get(name);\n  }\n  /**\n   * Create and register rule, run plugins.\n   */\n  ;\n\n  _proto.addRule = function addRule(name, style, options) {\n    var rule = this.rules.add(name, style, options);\n    if (rule) this.options.jss.plugins.onProcessRule(rule);\n    return rule;\n  }\n  /**\n   * Get index of a rule.\n   */\n  ;\n\n  _proto.indexOf = function indexOf(rule) {\n    return this.rules.indexOf(rule);\n  }\n  /**\n   * Generates a CSS string.\n   */\n  ;\n\n  _proto.toString = function toString() {\n    return this.rules.toString();\n  };\n\n  return GlobalContainerRule;\n}();\n\nvar GlobalPrefixedRule =\n/*#__PURE__*/\nfunction () {\n  function GlobalPrefixedRule(key, style, options) {\n    this.type = 'global';\n    this.at = at;\n    this.options = void 0;\n    this.rule = void 0;\n    this.isProcessed = false;\n    this.key = void 0;\n    this.key = key;\n    this.options = options;\n    var selector = key.substr(atPrefix.length);\n    this.rule = options.jss.createRule(selector, style, _extends({}, options, {\n      parent: this\n    }));\n  }\n\n  var _proto2 = GlobalPrefixedRule.prototype;\n\n  _proto2.toString = function toString(options) {\n    return this.rule ? this.rule.toString(options) : '';\n  };\n\n  return GlobalPrefixedRule;\n}();\n\nvar separatorRegExp = /\\s*,\\s*/g;\n\nfunction addScope(selector, scope) {\n  var parts = selector.split(separatorRegExp);\n  var scoped = '';\n\n  for (var i = 0; i < parts.length; i++) {\n    scoped += scope + \" \" + parts[i].trim();\n    if (parts[i + 1]) scoped += ', ';\n  }\n\n  return scoped;\n}\n\nfunction handleNestedGlobalContainerRule(rule, sheet) {\n  var options = rule.options,\n      style = rule.style;\n  var rules = style ? style[at] : null;\n  if (!rules) return;\n\n  for (var name in rules) {\n    sheet.addRule(name, rules[name], _extends({}, options, {\n      selector: addScope(name, rule.selector)\n    }));\n  }\n\n  delete style[at];\n}\n\nfunction handlePrefixedGlobalRule(rule, sheet) {\n  var options = rule.options,\n      style = rule.style;\n\n  for (var prop in style) {\n    if (prop[0] !== '@' || prop.substr(0, at.length) !== at) continue;\n    var selector = addScope(prop.substr(at.length), rule.selector);\n    sheet.addRule(selector, style[prop], _extends({}, options, {\n      selector: selector\n    }));\n    delete style[prop];\n  }\n}\n/**\n * Convert nested rules to separate, remove them from original styles.\n *\n * @param {Rule} rule\n * @api public\n */\n\n\nfunction jssGlobal() {\n  function onCreateRule(name, styles, options) {\n    if (!name) return null;\n\n    if (name === at) {\n      return new GlobalContainerRule(name, styles, options);\n    }\n\n    if (name[0] === '@' && name.substr(0, atPrefix.length) === atPrefix) {\n      return new GlobalPrefixedRule(name, styles, options);\n    }\n\n    var parent = options.parent;\n\n    if (parent) {\n      if (parent.type === 'global' || parent.options.parent && parent.options.parent.type === 'global') {\n        options.scoped = false;\n      }\n    }\n\n    if (options.scoped === false) {\n      options.selector = name;\n    }\n\n    return null;\n  }\n\n  function onProcessRule(rule, sheet) {\n    if (rule.type !== 'style' || !sheet) return;\n    handleNestedGlobalContainerRule(rule, sheet);\n    handlePrefixedGlobalRule(rule, sheet);\n  }\n\n  return {\n    onCreateRule: onCreateRule,\n    onProcessRule: onProcessRule\n  };\n}\n\nexport default jssGlobal;\n"],"sourceRoot":""}