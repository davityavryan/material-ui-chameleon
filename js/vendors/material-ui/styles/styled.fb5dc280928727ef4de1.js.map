{"version":3,"sources":["webpack://material-ui-chameleon-docs/./node_modules/@material-ui/styles/esm/styled/styled.js"],"names":[],"mappings":"uOASA,WAAc,EAAO,EAAQ,CAC3B,GAAI,GAAS,GACb,cAAO,KAAK,GAAO,QAAQ,SAAU,EAAM,CACrC,EAAO,QAAQ,KAAU,IAC3B,GAAO,GAAQ,EAAM,MAGlB,EAKM,WAAgB,EAAW,CACxC,GAAI,GAAmB,SAA0B,EAAO,CACtD,GAAI,GAAU,UAAU,OAAS,GAAK,UAAU,KAAO,OAAY,UAAU,GAAK,GAE9E,EAAO,EAAQ,KACf,EAAgB,QAAyB,EAAS,CAAC,SAMnD,EAAkB,EAEtB,GAAI,GAAuC,MAW3C,GAAI,GAAkB,MAAO,IAAU,WAAa,SAAU,EAAO,CACnE,MAAO,CACL,KAAM,SAAc,EAAO,CACzB,MAAO,GAAM,QAAS,CACpB,SACC,OAGL,CACF,KAAM,GAEJ,EAAY,QAAW,EAAiB,QAAS,CACnD,YACA,KAAM,GAAQ,EAAU,YACxB,mBACC,IACC,EACA,EAAY,GAEZ,EAAM,aACR,GAAc,EAAM,YACpB,MAAO,GAAM,aAKX,EAAM,WACR,GAAY,EAAM,UAClB,MAAO,GAAM,WAKf,GAAI,GAA+B,aAAiB,SAAyB,EAAO,EAAK,CACvF,GAAI,GAAW,EAAM,SACjB,EAAgB,EAAM,UACtB,EAAQ,EAAM,MACd,EAAgB,EAAM,UACtB,EAAQ,QAAyB,EAAO,CAAC,WAAY,YAAa,QAAS,cAE3E,EAAU,EAAU,GACpB,EAAY,cAAK,EAAQ,KAAM,GAC/B,EAAS,EAMb,GAJI,GACF,GAAS,EAAK,EAAQ,IAGpB,EACF,MAAoB,gBAAmB,EAAU,QAAS,CACxD,UAAW,cAAK,EAAS,MAAM,UAAW,IACzC,IAGL,GAAI,MAAO,IAAa,WACtB,MAAO,GAAS,QAAS,CACvB,aACC,IAGL,GAAI,GAAiB,GAAiB,EACtC,MAAoB,iBAAoB,EAAgB,QAAS,CAC/D,MACA,aACC,GAAS,KAwCd,WAAqB,EAAiB,GAC/B,GAGT,MAAO","file":"js/vendors/material-ui/styles/styled.fb5dc280928727ef4de1.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes, getDisplayName } from '@material-ui/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport makeStyles from '../makeStyles';\n\nfunction omit(input, fields) {\n  var output = {};\n  Object.keys(input).forEach(function (prop) {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n  return output;\n} // styled-components's API removes the mapping between components and styles.\n// Using components as a low-level styling construct can be simpler.\n\n\nexport default function styled(Component) {\n  var componentCreator = function componentCreator(style) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var name = options.name,\n        stylesOptions = _objectWithoutProperties(options, [\"name\"]);\n\n    if (process.env.NODE_ENV !== 'production' && Component === undefined) {\n      throw new Error(['You are calling styled(Component)(style) with an undefined component.', 'You may have forgotten to import it.'].join('\\n'));\n    }\n\n    var classNamePrefix = name;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!name) {\n        // Provide a better DX outside production.\n        var displayName = getDisplayName(Component);\n\n        if (displayName !== undefined) {\n          classNamePrefix = displayName;\n        }\n      }\n    }\n\n    var stylesOrCreator = typeof style === 'function' ? function (theme) {\n      return {\n        root: function root(props) {\n          return style(_extends({\n            theme: theme\n          }, props));\n        }\n      };\n    } : {\n      root: style\n    };\n    var useStyles = makeStyles(stylesOrCreator, _extends({\n      Component: Component,\n      name: name || Component.displayName,\n      classNamePrefix: classNamePrefix\n    }, stylesOptions));\n    var filterProps;\n    var propTypes = {};\n\n    if (style.filterProps) {\n      filterProps = style.filterProps;\n      delete style.filterProps;\n    }\n    /* eslint-disable react/forbid-foreign-prop-types */\n\n\n    if (style.propTypes) {\n      propTypes = style.propTypes;\n      delete style.propTypes;\n    }\n    /* eslint-enable react/forbid-foreign-prop-types */\n\n\n    var StyledComponent = /*#__PURE__*/React.forwardRef(function StyledComponent(props, ref) {\n      var children = props.children,\n          classNameProp = props.className,\n          clone = props.clone,\n          ComponentProp = props.component,\n          other = _objectWithoutProperties(props, [\"children\", \"className\", \"clone\", \"component\"]);\n\n      var classes = useStyles(props);\n      var className = clsx(classes.root, classNameProp);\n      var spread = other;\n\n      if (filterProps) {\n        spread = omit(spread, filterProps);\n      }\n\n      if (clone) {\n        return /*#__PURE__*/React.cloneElement(children, _extends({\n          className: clsx(children.props.className, className)\n        }, spread));\n      }\n\n      if (typeof children === 'function') {\n        return children(_extends({\n          className: className\n        }, spread));\n      }\n\n      var FinalComponent = ComponentProp || Component;\n      return /*#__PURE__*/React.createElement(FinalComponent, _extends({\n        ref: ref,\n        className: className\n      }, spread), children);\n    });\n    process.env.NODE_ENV !== \"production\" ? StyledComponent.propTypes = _extends({\n      /**\n       * A render function or node.\n       */\n      children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n\n      /**\n       * @ignore\n       */\n      className: PropTypes.string,\n\n      /**\n       * If `true`, the component will recycle it's children HTML element.\n       * It's using `React.cloneElement` internally.\n       *\n       * This prop will be deprecated and removed in v5\n       */\n      clone: chainPropTypes(PropTypes.bool, function (props) {\n        if (props.clone && props.component) {\n          return new Error('You can not use the clone and component prop at the same time.');\n        }\n\n        return null;\n      }),\n\n      /**\n       * The component used for the root node.\n       * Either a string to use a HTML element or a component.\n       */\n      component: PropTypes\n      /* @typescript-to-proptypes-ignore */\n      .elementType\n    }, propTypes) : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      StyledComponent.displayName = \"Styled(\".concat(classNamePrefix, \")\");\n    }\n\n    hoistNonReactStatics(StyledComponent, Component);\n    return StyledComponent;\n  };\n\n  return componentCreator;\n}"],"sourceRoot":""}