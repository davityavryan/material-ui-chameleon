{"version":3,"sources":["webpack:///./node_modules/@material-ui/styles/esm/styled/styled.js"],"names":["omit","input","fields","output","Object","keys","forEach","prop","indexOf","styled","Component","style","options","arguments","length","undefined","name","stylesOptions","_objectWithoutProperties","filterProps","classNamePrefix","stylesOrCreator","theme","root","props","_extends","useStyles","makeStyles","displayName","propTypes","StyledComponent","React","forwardRef","ref","children","classNameProp","className","clone","ComponentProp","component","other","classes","clsx","spread","cloneElement","FinalComponent","createElement","hoistNonReactStatics"],"mappings":"2FAAA,qGASA,SAASA,EAAKC,EAAOC,GACnB,IAAIC,EAAS,GAMb,OALAC,OAAOC,KAAKJ,GAAOK,SAAQ,SAAUC,IACL,IAA1BL,EAAOM,QAAQD,KACjBJ,EAAOI,GAAQN,EAAMM,OAGlBJ,EAKM,SAASM,EAAOC,GAkI7B,OAjIuB,SAA0BC,GAC/C,IAAIC,EAAUC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAE9EG,EAAOJ,EAAQI,KACfC,EAAgBC,YAAyBN,EAAS,CAAC,SAMvD,IA6BIO,EA7BAC,EAAkBJ,EAalBK,EAAmC,mBAAVV,EAAuB,SAAUW,GAC5D,MAAO,CACLC,KAAM,SAAcC,GAClB,OAAOb,EAAMc,YAAS,CACpBH,MAAOA,GACNE,OAGL,CACFD,KAAMZ,GAEJe,EAAYC,YAAWN,EAAiBI,YAAS,CACnDf,UAAWA,EACXM,KAAMA,GAAQN,EAAUkB,YACxBR,gBAAiBA,GAChBH,IAICN,EAAMQ,cACRA,EAAcR,EAAMQ,mBACbR,EAAMQ,aAKXR,EAAMkB,YACIlB,EAAMkB,iBACXlB,EAAMkB,WAKf,IAAIC,EAAkBC,IAAMC,YAAW,SAAyBR,EAAOS,GACrE,IAAIC,EAAWV,EAAMU,SACjBC,EAAgBX,EAAMY,UACtBC,EAAQb,EAAMa,MACdC,EAAgBd,EAAMe,UACtBC,EAAQtB,YAAyBM,EAAO,CAAC,WAAY,YAAa,QAAS,cAE3EiB,EAAUf,EAAUF,GACpBY,EAAYM,YAAKD,EAAQlB,KAAMY,GAC/BQ,EAASH,EAMb,GAJIrB,IACFwB,EAAS3C,EAAK2C,EAAQxB,IAGpBkB,EACF,OAAON,IAAMa,aAAaV,EAAUT,YAAS,CAC3CW,UAAWM,YAAKR,EAASV,MAAMY,UAAWA,IACzCO,IAGL,GAAwB,mBAAbT,EACT,OAAOA,EAAST,YAAS,CACvBW,UAAWA,GACVO,IAGL,IAAIE,EAAiBP,GAAiB5B,EACtC,OAAoBqB,IAAMe,cAAcD,EAAgBpB,YAAS,CAC/DQ,IAAKA,EACLG,UAAWA,GACVO,GAAST,MAuCd,OADAa,IAAqBjB,EAAiBpB,GAC/BoB","file":"js/vendors/material-ui/styles/styled.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes, getDisplayName } from '@material-ui/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport makeStyles from '../makeStyles';\n\nfunction omit(input, fields) {\n  var output = {};\n  Object.keys(input).forEach(function (prop) {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n  return output;\n} // styled-components's API removes the mapping between components and styles.\n// Using components as a low-level styling construct can be simpler.\n\n\nexport default function styled(Component) {\n  var componentCreator = function componentCreator(style) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var name = options.name,\n        stylesOptions = _objectWithoutProperties(options, [\"name\"]);\n\n    if (process.env.NODE_ENV !== 'production' && Component === undefined) {\n      throw new Error(['You are calling styled(Component)(style) with an undefined component.', 'You may have forgotten to import it.'].join('\\n'));\n    }\n\n    var classNamePrefix = name;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!name) {\n        // Provide a better DX outside production.\n        var displayName = getDisplayName(Component);\n\n        if (displayName !== undefined) {\n          classNamePrefix = displayName;\n        }\n      }\n    }\n\n    var stylesOrCreator = typeof style === 'function' ? function (theme) {\n      return {\n        root: function root(props) {\n          return style(_extends({\n            theme: theme\n          }, props));\n        }\n      };\n    } : {\n      root: style\n    };\n    var useStyles = makeStyles(stylesOrCreator, _extends({\n      Component: Component,\n      name: name || Component.displayName,\n      classNamePrefix: classNamePrefix\n    }, stylesOptions));\n    var filterProps;\n    var propTypes = {};\n\n    if (style.filterProps) {\n      filterProps = style.filterProps;\n      delete style.filterProps;\n    }\n    /* eslint-disable react/forbid-foreign-prop-types */\n\n\n    if (style.propTypes) {\n      propTypes = style.propTypes;\n      delete style.propTypes;\n    }\n    /* eslint-enable react/forbid-foreign-prop-types */\n\n\n    var StyledComponent = React.forwardRef(function StyledComponent(props, ref) {\n      var children = props.children,\n          classNameProp = props.className,\n          clone = props.clone,\n          ComponentProp = props.component,\n          other = _objectWithoutProperties(props, [\"children\", \"className\", \"clone\", \"component\"]);\n\n      var classes = useStyles(props);\n      var className = clsx(classes.root, classNameProp);\n      var spread = other;\n\n      if (filterProps) {\n        spread = omit(spread, filterProps);\n      }\n\n      if (clone) {\n        return React.cloneElement(children, _extends({\n          className: clsx(children.props.className, className)\n        }, spread));\n      }\n\n      if (typeof children === 'function') {\n        return children(_extends({\n          className: className\n        }, spread));\n      }\n\n      var FinalComponent = ComponentProp || Component;\n      return /*#__PURE__*/React.createElement(FinalComponent, _extends({\n        ref: ref,\n        className: className\n      }, spread), children);\n    });\n    process.env.NODE_ENV !== \"production\" ? StyledComponent.propTypes = _extends({\n      /**\n       * A render function or node.\n       */\n      children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n\n      /**\n       * @ignore\n       */\n      className: PropTypes.string,\n\n      /**\n       * If `true`, the component will recycle it's children HTML element.\n       * It's using `React.cloneElement` internally.\n       *\n       * This prop will be deprecated and removed in v5\n       */\n      clone: chainPropTypes(PropTypes.bool, function (props) {\n        if (props.clone && props.component) {\n          return new Error('You can not use the clone and component prop at the same time.');\n        }\n\n        return null;\n      }),\n\n      /**\n       * The component used for the root node.\n       * Either a string to use a HTML element or a component.\n       */\n      component: PropTypes.elementType\n    }, propTypes) : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      StyledComponent.displayName = \"Styled(\".concat(classNamePrefix, \")\");\n    }\n\n    hoistNonReactStatics(StyledComponent, Component);\n    return StyledComponent;\n  };\n\n  return componentCreator;\n}"],"sourceRoot":""}