{"version":3,"sources":["webpack://material-ui-chameleon-gh-pages/./node_modules/@material-ui/styles/esm/getStylesCreator/getStylesCreator.js","webpack://material-ui-chameleon-gh-pages/./node_modules/@material-ui/styles/esm/getStylesCreator/noopTheme.js"],"names":[],"mappings":"wLAIe,WAA0B,EAAiB,CACxD,GAAI,GAAiB,MAAO,IAAoB,WAQhD,MAAO,CACL,OAAQ,SAAgB,EAAO,EAAM,CACnC,GAAI,GAEJ,GAAI,CACF,EAAS,EAAiB,EAAgB,GAAS,QAC5C,EAD4C,CASnD,KAAM,GAGR,GAAI,CAAC,GAAQ,CAAC,EAAM,WAAa,CAAC,EAAM,UAAU,GAChD,MAAO,GAGT,GAAI,GAAY,EAAM,UAAU,GAE5B,EAAsB,QAAS,GAAI,GAEvC,cAAO,KAAK,GAAW,QAAQ,SAAU,EAAK,CAO5C,EAAoB,GAAO,QAAU,EAAoB,GAAM,EAAU,MAEpE,GAET,QAAS,M,6CChDb,GAAI,GAAY,GAChB,QAAe","file":"js/vendors/material-ui/styles/getstylescreator.f9d410cde1df8da9bc4c.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { deepmerge } from '@material-ui/utils';\nimport noopTheme from './noopTheme';\nexport default function getStylesCreator(stylesOrCreator) {\n  var themingEnabled = typeof stylesOrCreator === 'function';\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (_typeof(stylesOrCreator) !== 'object' && !themingEnabled) {\n      console.error(['Material-UI: The `styles` argument provided is invalid.', 'You need to provide a function generating the styles or a styles object.'].join('\\n'));\n    }\n  }\n\n  return {\n    create: function create(theme, name) {\n      var styles;\n\n      try {\n        styles = themingEnabled ? stylesOrCreator(theme) : stylesOrCreator;\n      } catch (err) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (themingEnabled === true && theme === noopTheme) {\n            // TODO: prepend error message/name instead\n            console.error(['Material-UI: The `styles` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n          }\n        }\n\n        throw err;\n      }\n\n      if (!name || !theme.overrides || !theme.overrides[name]) {\n        return styles;\n      }\n\n      var overrides = theme.overrides[name];\n\n      var stylesWithOverrides = _extends({}, styles);\n\n      Object.keys(overrides).forEach(function (key) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (!stylesWithOverrides[key]) {\n            console.warn(['Material-UI: You are trying to override a style that does not exist.', \"Fix the `\".concat(key, \"` key of `theme.overrides.\").concat(name, \"`.\")].join('\\n'));\n          }\n        }\n\n        stylesWithOverrides[key] = deepmerge(stylesWithOverrides[key], overrides[key]);\n      });\n      return stylesWithOverrides;\n    },\n    options: {}\n  };\n}","// We use the same empty object to ref count the styles that don't need a theme object.\nvar noopTheme = {};\nexport default noopTheme;"],"sourceRoot":""}