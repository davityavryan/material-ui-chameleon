{"version":3,"sources":["webpack://material-ui-chameleon-docs/./node_modules/@material-ui/core/esm/Modal/ModalManager.js","webpack://material-ui-chameleon-docs/./node_modules/@material-ui/core/esm/Modal/SimpleBackdrop.js","webpack://material-ui-chameleon-docs/./node_modules/@material-ui/core/esm/Modal/Modal.js"],"names":[],"mappings":"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","file":"js/vendors/material-ui/core/modal.6552351d8c920c2196ce.js","sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport getScrollbarSize from '../utils/getScrollbarSize';\nimport ownerDocument from '../utils/ownerDocument';\nimport ownerWindow from '../utils/ownerWindow'; // Is a vertical scrollbar displayed?\n\nfunction isOverflowing(container) {\n  var doc = ownerDocument(container);\n\n  if (doc.body === container) {\n    return ownerWindow(doc).innerWidth > doc.documentElement.clientWidth;\n  }\n\n  return container.scrollHeight > container.clientHeight;\n}\n\nexport function ariaHidden(node, show) {\n  if (show) {\n    node.setAttribute('aria-hidden', 'true');\n  } else {\n    node.removeAttribute('aria-hidden');\n  }\n}\n\nfunction getPaddingRight(node) {\n  return parseInt(window.getComputedStyle(node)['padding-right'], 10) || 0;\n}\n\nfunction ariaHiddenSiblings(container, mountNode, currentNode) {\n  var nodesToExclude = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var show = arguments.length > 4 ? arguments[4] : undefined;\n  var blacklist = [mountNode, currentNode].concat(_toConsumableArray(nodesToExclude));\n  var blacklistTagNames = ['TEMPLATE', 'SCRIPT', 'STYLE'];\n  [].forEach.call(container.children, function (node) {\n    if (node.nodeType === 1 && blacklist.indexOf(node) === -1 && blacklistTagNames.indexOf(node.tagName) === -1) {\n      ariaHidden(node, show);\n    }\n  });\n}\n\nfunction findIndexOf(containerInfo, callback) {\n  var idx = -1;\n  containerInfo.some(function (item, index) {\n    if (callback(item)) {\n      idx = index;\n      return true;\n    }\n\n    return false;\n  });\n  return idx;\n}\n\nfunction handleContainer(containerInfo, props) {\n  var restoreStyle = [];\n  var restorePaddings = [];\n  var container = containerInfo.container;\n  var fixedNodes;\n\n  if (!props.disableScrollLock) {\n    if (isOverflowing(container)) {\n      // Compute the size before applying overflow hidden to avoid any scroll jumps.\n      var scrollbarSize = getScrollbarSize();\n      restoreStyle.push({\n        value: container.style.paddingRight,\n        key: 'padding-right',\n        el: container\n      }); // Use computed style, here to get the real padding to add our scrollbar width.\n\n      container.style['padding-right'] = \"\".concat(getPaddingRight(container) + scrollbarSize, \"px\"); // .mui-fixed is a global helper.\n\n      fixedNodes = ownerDocument(container).querySelectorAll('.mui-fixed');\n      [].forEach.call(fixedNodes, function (node) {\n        restorePaddings.push(node.style.paddingRight);\n        node.style.paddingRight = \"\".concat(getPaddingRight(node) + scrollbarSize, \"px\");\n      });\n    } // Improve Gatsby support\n    // https://css-tricks.com/snippets/css/force-vertical-scrollbar/\n\n\n    var parent = container.parentElement;\n    var scrollContainer = parent.nodeName === 'HTML' && window.getComputedStyle(parent)['overflow-y'] === 'scroll' ? parent : container; // Block the scroll even if no scrollbar is visible to account for mobile keyboard\n    // screensize shrink.\n\n    restoreStyle.push({\n      value: scrollContainer.style.overflow,\n      key: 'overflow',\n      el: scrollContainer\n    });\n    scrollContainer.style.overflow = 'hidden';\n  }\n\n  var restore = function restore() {\n    if (fixedNodes) {\n      [].forEach.call(fixedNodes, function (node, i) {\n        if (restorePaddings[i]) {\n          node.style.paddingRight = restorePaddings[i];\n        } else {\n          node.style.removeProperty('padding-right');\n        }\n      });\n    }\n\n    restoreStyle.forEach(function (_ref) {\n      var value = _ref.value,\n          el = _ref.el,\n          key = _ref.key;\n\n      if (value) {\n        el.style.setProperty(key, value);\n      } else {\n        el.style.removeProperty(key);\n      }\n    });\n  };\n\n  return restore;\n}\n\nfunction getHiddenSiblings(container) {\n  var hiddenSiblings = [];\n  [].forEach.call(container.children, function (node) {\n    if (node.getAttribute && node.getAttribute('aria-hidden') === 'true') {\n      hiddenSiblings.push(node);\n    }\n  });\n  return hiddenSiblings;\n}\n/**\r\n * @ignore - do not document.\r\n *\r\n * Proper state management for containers and the modals in those containers.\r\n * Simplified, but inspired by react-overlay's ModalManager class.\r\n * Used by the Modal to ensure proper styling of containers.\r\n */\n\n\nvar ModalManager = /*#__PURE__*/function () {\n  function ModalManager() {\n    _classCallCheck(this, ModalManager);\n\n    // this.modals[modalIndex] = modal\n    this.modals = []; // this.containers[containerIndex] = {\n    //   modals: [],\n    //   container,\n    //   restore: null,\n    // }\n\n    this.containers = [];\n  }\n\n  _createClass(ModalManager, [{\n    key: \"add\",\n    value: function add(modal, container) {\n      var modalIndex = this.modals.indexOf(modal);\n\n      if (modalIndex !== -1) {\n        return modalIndex;\n      }\n\n      modalIndex = this.modals.length;\n      this.modals.push(modal); // If the modal we are adding is already in the DOM.\n\n      if (modal.modalRef) {\n        ariaHidden(modal.modalRef, false);\n      }\n\n      var hiddenSiblingNodes = getHiddenSiblings(container);\n      ariaHiddenSiblings(container, modal.mountNode, modal.modalRef, hiddenSiblingNodes, true);\n      var containerIndex = findIndexOf(this.containers, function (item) {\n        return item.container === container;\n      });\n\n      if (containerIndex !== -1) {\n        this.containers[containerIndex].modals.push(modal);\n        return modalIndex;\n      }\n\n      this.containers.push({\n        modals: [modal],\n        container: container,\n        restore: null,\n        hiddenSiblingNodes: hiddenSiblingNodes\n      });\n      return modalIndex;\n    }\n  }, {\n    key: \"mount\",\n    value: function mount(modal, props) {\n      var containerIndex = findIndexOf(this.containers, function (item) {\n        return item.modals.indexOf(modal) !== -1;\n      });\n      var containerInfo = this.containers[containerIndex];\n\n      if (!containerInfo.restore) {\n        containerInfo.restore = handleContainer(containerInfo, props);\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(modal) {\n      var modalIndex = this.modals.indexOf(modal);\n\n      if (modalIndex === -1) {\n        return modalIndex;\n      }\n\n      var containerIndex = findIndexOf(this.containers, function (item) {\n        return item.modals.indexOf(modal) !== -1;\n      });\n      var containerInfo = this.containers[containerIndex];\n      containerInfo.modals.splice(containerInfo.modals.indexOf(modal), 1);\n      this.modals.splice(modalIndex, 1); // If that was the last modal in a container, clean up the container.\n\n      if (containerInfo.modals.length === 0) {\n        // The modal might be closed before it had the chance to be mounted in the DOM.\n        if (containerInfo.restore) {\n          containerInfo.restore();\n        }\n\n        if (modal.modalRef) {\n          // In case the modal wasn't in the DOM yet.\n          ariaHidden(modal.modalRef, true);\n        }\n\n        ariaHiddenSiblings(containerInfo.container, modal.mountNode, modal.modalRef, containerInfo.hiddenSiblingNodes, false);\n        this.containers.splice(containerIndex, 1);\n      } else {\n        // Otherwise make sure the next top modal is visible to a screen reader.\n        var nextTop = containerInfo.modals[containerInfo.modals.length - 1]; // as soon as a modal is adding its modalRef is undefined. it can't set\n        // aria-hidden because the dom element doesn't exist either\n        // when modal was unmounted before modalRef gets null\n\n        if (nextTop.modalRef) {\n          ariaHidden(nextTop.modalRef, false);\n        }\n      }\n\n      return modalIndex;\n    }\n  }, {\n    key: \"isTopModal\",\n    value: function isTopModal(modal) {\n      return this.modals.length > 0 && this.modals[this.modals.length - 1] === modal;\n    }\n  }]);\n\n  return ModalManager;\n}();\n\nexport { ModalManager as default };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    zIndex: -1,\n    position: 'fixed',\n    right: 0,\n    bottom: 0,\n    top: 0,\n    left: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    WebkitTapHighlightColor: 'transparent'\n  },\n\n  /* Styles applied to the root element if `invisible={true}`. */\n  invisible: {\n    backgroundColor: 'transparent'\n  }\n};\n/**\r\n * @ignore - internal component.\r\n */\n\nvar SimpleBackdrop = /*#__PURE__*/React.forwardRef(function SimpleBackdrop(props, ref) {\n  var _props$invisible = props.invisible,\n      invisible = _props$invisible === void 0 ? false : _props$invisible,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"invisible\", \"open\"]);\n\n  return open ? /*#__PURE__*/React.createElement(\"div\", _extends({\n    \"aria-hidden\": true,\n    ref: ref\n  }, other, {\n    style: _extends({}, styles.root, invisible ? styles.invisible : {}, other.style)\n  })) : null;\n});\nprocess.env.NODE_ENV !== \"production\" ? SimpleBackdrop.propTypes = {\n  /**\r\n   * If `true`, the backdrop is invisible.\r\n   * It can be used when rendering a popover or a custom select component.\r\n   */\n  invisible: PropTypes.bool,\n\n  /**\r\n   * If `true`, the backdrop is open.\r\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default SimpleBackdrop;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { getThemeProps, useTheme } from '@material-ui/styles';\nimport { elementAcceptingRef, HTMLElementType } from '@material-ui/utils';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport ownerDocument from '../utils/ownerDocument';\nimport Portal from '../Portal';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport zIndex from '../styles/zIndex';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport TrapFocus from '../Unstable_TrapFocus';\nimport SimpleBackdrop from './SimpleBackdrop';\n\nfunction getContainer(container) {\n  container = typeof container === 'function' ? container() : container;\n  return ReactDOM.findDOMNode(container);\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\n\nvar defaultManager = new ModalManager();\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'fixed',\n      zIndex: theme.zIndex.modal,\n      right: 0,\n      bottom: 0,\n      top: 0,\n      left: 0\n    },\n\n    /* Styles applied to the root element if the `Modal` has exited. */\n    hidden: {\n      visibility: 'hidden'\n    }\n  };\n};\n/**\r\n * Modal is a lower-level construct that is leveraged by the following components:\r\n *\r\n * - [Dialog](/api/dialog/)\r\n * - [Drawer](/api/drawer/)\r\n * - [Menu](/api/menu/)\r\n * - [Popover](/api/popover/)\r\n *\r\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\r\n * rather than directly using Modal.\r\n *\r\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\r\n */\n\nvar Modal = /*#__PURE__*/React.forwardRef(function Modal(inProps, ref) {\n  var theme = useTheme();\n  var props = getThemeProps({\n    name: 'MuiModal',\n    props: _extends({}, inProps),\n    theme: theme\n  });\n\n  var _props$BackdropCompon = props.BackdropComponent,\n      BackdropComponent = _props$BackdropCompon === void 0 ? SimpleBackdrop : _props$BackdropCompon,\n      BackdropProps = props.BackdropProps,\n      children = props.children,\n      _props$closeAfterTran = props.closeAfterTransition,\n      closeAfterTransition = _props$closeAfterTran === void 0 ? false : _props$closeAfterTran,\n      container = props.container,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableBackdro = props.disableBackdropClick,\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      _props$disableScrollL = props.disableScrollLock,\n      disableScrollLock = _props$disableScrollL === void 0 ? false : _props$disableScrollL,\n      _props$hideBackdrop = props.hideBackdrop,\n      hideBackdrop = _props$hideBackdrop === void 0 ? false : _props$hideBackdrop,\n      _props$keepMounted = props.keepMounted,\n      keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted,\n      _props$manager = props.manager,\n      manager = _props$manager === void 0 ? defaultManager : _props$manager,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onEscapeKeyDown = props.onEscapeKeyDown,\n      onRendered = props.onRendered,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"BackdropComponent\", \"BackdropProps\", \"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableBackdropClick\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onEscapeKeyDown\", \"onRendered\", \"open\"]);\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var modal = React.useRef({});\n  var mountNodeRef = React.useRef(null);\n  var modalRef = React.useRef(null);\n  var handleRef = useForkRef(modalRef, ref);\n  var hasTransition = getHasTransition(props);\n\n  var getDoc = function getDoc() {\n    return ownerDocument(mountNodeRef.current);\n  };\n\n  var getModal = function getModal() {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n\n  var handleMounted = function handleMounted() {\n    manager.mount(getModal(), {\n      disableScrollLock: disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n\n  var handleOpen = useEventCallback(function () {\n    var resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  var isTopModal = React.useCallback(function () {\n    return manager.isTopModal(getModal());\n  }, [manager]);\n  var handlePortalRef = useEventCallback(function (node) {\n    mountNodeRef.current = node;\n\n    if (!node) {\n      return;\n    }\n\n    if (onRendered) {\n      onRendered();\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, true);\n    }\n  });\n  var handleClose = React.useCallback(function () {\n    manager.remove(getModal());\n  }, [manager]);\n  React.useEffect(function () {\n    return function () {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(function () {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n\n  var handleBackdropClick = function handleBackdropClick(event) {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviours like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n\n    if (onEscapeKeyDown) {\n      onEscapeKeyDown(event);\n    }\n\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n\n  var inlineStyle = styles(theme || {\n    zIndex: zIndex\n  });\n  var childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = children.props.tabIndex || '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n\n  return /*#__PURE__*/React.createElement(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: handleRef,\n    onKeyDown: handleKeyDown,\n    role: \"presentation\"\n  }, other, {\n    style: _extends({}, inlineStyle.root, !open && exited ? inlineStyle.hidden : {}, other.style)\n  }), hideBackdrop ? null : /*#__PURE__*/React.createElement(BackdropComponent, _extends({\n    open: open,\n    onClick: handleBackdropClick\n  }, BackdropProps)), /*#__PURE__*/React.createElement(TrapFocus, {\n    disableEnforceFocus: disableEnforceFocus,\n    disableAutoFocus: disableAutoFocus,\n    disableRestoreFocus: disableRestoreFocus,\n    getDoc: getDoc,\n    isEnabled: isTopModal,\n    open: open\n  }, /*#__PURE__*/React.cloneElement(children, childProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes = {\n  /**\r\n   * A backdrop component. This prop enables custom backdrop rendering.\r\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\r\n   * Props applied to the [`Backdrop`](/api/backdrop/) element.\r\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\r\n   * A single child content element.\r\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\r\n   * When set to true the Modal waits until a nested Transition is completed before closing.\r\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\r\n   * A HTML element, component instance, or function that returns either.\r\n   * The `container` will have the portal children appended to it.\r\n   *\r\n   * By default, it uses the body of the top-level document object,\r\n   * so it's simply `document.body` most of the time.\r\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.instanceOf(React.Component), PropTypes.func]),\n\n  /**\r\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\r\n   * replace it to the last focused element when it closes.\r\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\r\n   *\r\n   * Generally this should never be set to `true` as it makes the modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\r\n   * If `true`, clicking the backdrop will not fire `onClose`.\r\n   */\n  disableBackdropClick: deprecatedPropType(PropTypes.bool, 'Use the onClose prop with the `reason` argument to filter the `backdropClick` events.'),\n\n  /**\r\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\r\n   *\r\n   * Generally this should never be set to `true` as it makes the modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\r\n   * If `true`, hitting escape will not fire `onClose`.\r\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\r\n   * Disable the portal behavior.\r\n   * The children stay within it's parent DOM hierarchy.\r\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\r\n   * If `true`, the modal will not restore focus to previously focused element once\r\n   * modal is hidden.\r\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\r\n   * Disable the scroll lock behavior.\r\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\r\n   * If `true`, the backdrop is not rendered.\r\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\r\n   * Always keep the children in the DOM.\r\n   * This prop can be useful in SEO situation or\r\n   * when you want to maximize the responsiveness of the Modal.\r\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\r\n   * @ignore\r\n   */\n  manager: PropTypes.object,\n\n  /**\r\n   * Callback fired when the backdrop is clicked.\r\n   */\n  onBackdropClick: deprecatedPropType(PropTypes.func, 'Use the onClose prop with the `reason` argument to handle the `backdropClick` events.'),\n\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\r\n   */\n  onClose: PropTypes.func,\n\n  /**\r\n   * Callback fired when the escape key is pressed,\r\n   * `disableEscapeKeyDown` is false and the modal is in focus.\r\n   */\n  onEscapeKeyDown: deprecatedPropType(PropTypes.func, 'Use the onClose prop with the `reason` argument to handle the `escapeKeyDown` events.'),\n\n  /**\r\n   * Callback fired once the children has been mounted into the `container`.\r\n   * It signals that the `open={true}` prop took effect.\r\n   *\r\n   * This prop will be removed in v5, the ref can be used instead.\r\n   */\n  onRendered: deprecatedPropType(PropTypes.func, 'Use the ref instead.'),\n\n  /**\r\n   * If `true`, the modal is open.\r\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default Modal;"],"sourceRoot":""}