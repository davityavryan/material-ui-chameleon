{"version":3,"sources":["webpack://material-ui-chameleon-docs/./node_modules/@material-ui/core/esm/ListItem/ListItem.js"],"names":[],"mappings":"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","file":"js/vendors/material-ui/core/listitem.5547b0d6fd84273b23aa.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport * as ReactDOM from 'react-dom';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n    root: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      position: 'relative',\n      textDecoration: 'none',\n      width: '100%',\n      boxSizing: 'border-box',\n      textAlign: 'left',\n      paddingTop: 8,\n      paddingBottom: 8,\n      '&$focusVisible': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$disabled': {\n        opacity: 0.5\n      }\n    },\n\n    /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n    container: {\n      position: 'relative'\n    },\n\n    /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */\n    focusVisible: {},\n\n    /* Styles applied to the `component` element if dense. */\n    dense: {\n      paddingTop: 4,\n      paddingBottom: 4\n    },\n\n    /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      alignItems: 'flex-start'\n    },\n\n    /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the inner `component` element if `divider={true}`. */\n    divider: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider),\n      backgroundClip: 'padding-box'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the inner `component` element if `button={true}`. */\n    button: {\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n    secondaryAction: {\n      // Add some space to avoid collision as `ListItemSecondaryAction`\n      // is absolutely positioned.\n      paddingRight: 48\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {}\n  };\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\r\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\r\n */\n\nvar ListItem = /*#__PURE__*/React.forwardRef(function ListItem(props, ref) {\n  var _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'center' : _props$alignItems,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      _props$button = props.button,\n      button = _props$button === void 0 ? false : _props$button,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      componentProp = props.component,\n      _props$ContainerCompo = props.ContainerComponent,\n      ContainerComponent = _props$ContainerCompo === void 0 ? 'li' : _props$ContainerCompo,\n      _props$ContainerProps = props.ContainerProps;\n  _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;\n\n  var ContainerClassName = _props$ContainerProps.className,\n      ContainerProps = _objectWithoutProperties(_props$ContainerProps, [\"className\"]),\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$divider = props.divider,\n      divider = _props$divider === void 0 ? false : _props$divider,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  var context = React.useContext(ListContext);\n  var childContext = {\n    dense: dense || context.dense || false,\n    alignItems: alignItems\n  };\n  var listItemRef = React.useRef(null);\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('Material-UI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  var children = React.Children.toArray(childrenProp);\n  var hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n\n  var componentProps = _extends({\n    className: clsx(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== \"center\" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),\n    disabled: disabled\n  }, other);\n\n  var Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(ListContext.Provider, {\n      value: childContext\n    }, /*#__PURE__*/React.createElement(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps), /*#__PURE__*/React.createElement(Component, componentProps, children), children.pop()));\n  }\n\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: handleRef\n  }, componentProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes = {\n  /**\r\n   * Defines the `align-items` style property.\r\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center']),\n\n  /**\r\n   * If `true`, the list item will be focused during the first mount.\r\n   * Focus will also be triggered if the value changes from false to true.\r\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\r\n   * If `true`, the list item will be a button (using `ButtonBase`). Props intended\r\n   * for `ButtonBase` can then be applied to `ListItem`.\r\n   */\n  button: PropTypes.bool,\n\n  /**\r\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\r\n   * be the last child.\r\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    var secondaryActionIndex = -1;\n\n    for (var i = children.length - 1; i >= 0; i -= 1) {\n      var child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('Material-UI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.\r\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\r\n   * The container component used when a `ListItemSecondaryAction` is the last child.\r\n   */\n  ContainerComponent: PropTypes.elementType,\n\n  /**\r\n   * Props applied to the container component if used.\r\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\r\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\r\n   */\n  dense: PropTypes.bool,\n\n  /**\r\n   * If `true`, the list item will be disabled.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * If `true`, the left and right padding is removed.\r\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\r\n   * If `true`, a 1px light border is added to the bottom of the list item.\r\n   */\n  divider: PropTypes.bool,\n\n  /**\r\n   * @ignore\r\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\r\n   * Use to apply selected styling.\r\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);"],"sourceRoot":""}