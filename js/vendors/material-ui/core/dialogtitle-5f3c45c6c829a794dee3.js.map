{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/DialogTitle/index.js","webpack:///./node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js"],"names":["styles","root","margin","padding","flex","DialogTitle","React","forwardRef","props","ref","children","classes","className","_props$disableTypogra","disableTypography","other","createElement","Typography","component","variant","name"],"mappings":"2OAAA,iB,uHCAA,cACA,UACA,UAEA,GADA,QACA,SACA,WACA,WACWA,EAAS,CAElBC,KAAM,CACJC,OAAQ,EACRC,QAAS,YACTC,KAAM,a,WAGV,IAAIC,EAAcC,UAAMC,YAAW,SAAqBC,EAAOC,GAC7D,IAAIC,EAAWF,EAAME,SACjBC,EAAUH,EAAMG,QAChBC,EAAYJ,EAAMI,UAClBC,EAAwBL,EAAMM,kBAC9BA,OAA8C,IAA1BD,GAA2CA,EAC/DE,GAAQ,aAAyBP,EAAO,CAAC,WAAY,UAAW,YAAa,sBAEjF,OAAOF,UAAMU,cAAc,OAAO,aAAS,CACzCJ,WAAW,aAAKD,EAAQV,KAAMW,GAC9BH,IAAKA,GACJM,GAAQD,EAAoBJ,EAAWJ,UAAMU,cAAcC,UAAY,CACxEC,UAAW,KACXC,QAAS,MACRT,O,GAyBU,aAAWV,EAAQ,CAChCoB,KAAM,kBADO,CAEZf,G","file":"js/vendors/material-ui/core/dialogtitle-5f3c45c6c829a794dee3.js","sourcesContent":["export { default } from './DialogTitle';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);"],"sourceRoot":""}