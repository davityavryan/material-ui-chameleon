{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Modal/ModalManager.js","webpack:///./node_modules/@material-ui/core/esm/Modal/index.js","webpack:///./node_modules/@material-ui/core/esm/Modal/Modal.js","webpack:///./node_modules/@material-ui/core/esm/Modal/TrapFocus.js","webpack:///./node_modules/@material-ui/core/esm/Modal/SimpleBackdrop.js"],"names":["ariaHidden","node","show","setAttribute","removeAttribute","getPaddingRight","parseInt","window","getComputedStyle","ariaHiddenSiblings","container","mountNode","currentNode","nodesToExclude","arguments","length","undefined","blacklist","concat","blacklistTagNames","forEach","call","children","nodeType","indexOf","tagName","findIndexOf","containerInfo","callback","idx","some","item","index","handleContainer","props","fixedNodes","restoreStyle","restorePaddings","disableScrollLock","overflowing","doc","body","innerWidth","documentElement","clientWidth","scrollHeight","clientHeight","isOverflowing","parent","parentElement","scrollContainer","nodeName","push","value","style","overflow","key","el","scrollbarSize","paddingRight","querySelectorAll","i","removeProperty","_ref","setProperty","ModalManager","this","modals","containers","modal","modalIndex","modalRef","hiddenSiblingNodes","hiddenSiblings","getAttribute","getHiddenSiblings","containerIndex","restore","splice","nextTop","defaultManager","styles","theme","root","position","zIndex","right","bottom","top","left","hidden","visibility","React","forwardRef","inProps","ref","useTheme","getThemeProps","name","_props$BackdropCompon","BackdropComponent","SimpleBackdrop","BackdropProps","_props$closeAfterTran","closeAfterTransition","_props$disableAutoFoc","disableAutoFocus","_props$disableBackdro","disableBackdropClick","_props$disableEnforce","disableEnforceFocus","_props$disableEscapeK","disableEscapeKeyDown","_props$disablePortal","disablePortal","_props$disableRestore","disableRestoreFocus","_props$disableScrollL","_props$hideBackdrop","hideBackdrop","_props$keepMounted","keepMounted","_props$manager","manager","onBackdropClick","onClose","onEscapeKeyDown","onRendered","open","other","_React$useState","useState","exited","setExited","useRef","mountNodeRef","handleRef","hasTransition","hasOwnProperty","getHasTransition","getDoc","current","getModal","handleMounted","mount","scrollTop","handleOpen","resolvedContainer","ReactDOM","findDOMNode","getContainer","add","isTopModal","useCallback","handlePortalRef","handleClose","remove","useEffect","inlineStyle","childProps","tabIndex","onEnter","onExited","createElement","Portal","onKeyDown","event","stopPropagation","role","onClick","target","currentTarget","TrapFocus","isEnabled","cloneElement","ignoreNextEnforceFocus","sentinelStart","sentinelEnd","nodeToRestore","rootRef","handleOwnRef","instance","useMemo","activeElement","contains","hasAttribute","focus","contain","loopFocus","keyCode","shiftKey","addEventListener","interval","setInterval","clearInterval","removeEventListener","Fragment","backgroundColor","WebkitTapHighlightColor","touchAction","invisible","_props$invisible"],"mappings":"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","file":"js/vendors/material-ui/core/modal-7bf81777131ffcb0d60f.js","sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport getScrollbarSize from '../utils/getScrollbarSize';\nimport ownerDocument from '../utils/ownerDocument';\nimport ownerWindow from '../utils/ownerWindow'; // Is a vertical scrollbar displayed?\n\nfunction isOverflowing(container) {\n  var doc = ownerDocument(container);\n\n  if (doc.body === container) {\n    return ownerWindow(doc).innerWidth > doc.documentElement.clientWidth;\n  }\n\n  return container.scrollHeight > container.clientHeight;\n}\n\nexport function ariaHidden(node, show) {\n  if (show) {\n    node.setAttribute('aria-hidden', 'true');\n  } else {\n    node.removeAttribute('aria-hidden');\n  }\n}\n\nfunction getPaddingRight(node) {\n  return parseInt(window.getComputedStyle(node)['padding-right'], 10) || 0;\n}\n\nfunction ariaHiddenSiblings(container, mountNode, currentNode) {\n  var nodesToExclude = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var show = arguments.length > 4 ? arguments[4] : undefined;\n  var blacklist = [mountNode, currentNode].concat(_toConsumableArray(nodesToExclude));\n  var blacklistTagNames = ['TEMPLATE', 'SCRIPT', 'STYLE'];\n  [].forEach.call(container.children, function (node) {\n    if (node.nodeType === 1 && blacklist.indexOf(node) === -1 && blacklistTagNames.indexOf(node.tagName) === -1) {\n      ariaHidden(node, show);\n    }\n  });\n}\n\nfunction findIndexOf(containerInfo, callback) {\n  var idx = -1;\n  containerInfo.some(function (item, index) {\n    if (callback(item)) {\n      idx = index;\n      return true;\n    }\n\n    return false;\n  });\n  return idx;\n}\n\nfunction handleContainer(containerInfo, props) {\n  var restoreStyle = [];\n  var restorePaddings = [];\n  var container = containerInfo.container;\n  var fixedNodes;\n\n  if (!props.disableScrollLock) {\n    var overflowing = isOverflowing(container); // Improve Gatsby support\n    // https://css-tricks.com/snippets/css/force-vertical-scrollbar/\n\n    var parent = container.parentElement;\n    var scrollContainer = parent.nodeName === 'HTML' ? parent : container;\n    restoreStyle.push({\n      value: scrollContainer.style.overflow,\n      key: 'overflow',\n      el: scrollContainer\n    }); // Block the scroll even if no scrollbar is visible to account for mobile keyboard\n    // screensize shrink.\n\n    scrollContainer.style.overflow = 'hidden';\n\n    if (overflowing) {\n      var scrollbarSize = getScrollbarSize();\n      restoreStyle.push({\n        value: container.style.paddingRight,\n        key: 'padding-right',\n        el: container\n      }); // Use computed style, here to get the real padding to add our scrollbar width.\n\n      container.style['padding-right'] = \"\".concat(getPaddingRight(container) + scrollbarSize, \"px\"); // .mui-fixed is a global helper.\n\n      fixedNodes = ownerDocument(container).querySelectorAll('.mui-fixed');\n      [].forEach.call(fixedNodes, function (node) {\n        restorePaddings.push(node.style.paddingRight);\n        node.style.paddingRight = \"\".concat(getPaddingRight(node) + scrollbarSize, \"px\");\n      });\n    }\n  }\n\n  var restore = function restore() {\n    if (fixedNodes) {\n      [].forEach.call(fixedNodes, function (node, i) {\n        if (restorePaddings[i]) {\n          node.style.paddingRight = restorePaddings[i];\n        } else {\n          node.style.removeProperty('padding-right');\n        }\n      });\n    }\n\n    restoreStyle.forEach(function (_ref) {\n      var value = _ref.value,\n          el = _ref.el,\n          key = _ref.key;\n\n      if (value) {\n        el.style.setProperty(key, value);\n      } else {\n        el.style.removeProperty(key);\n      }\n    });\n  };\n\n  return restore;\n}\n\nfunction getHiddenSiblings(container) {\n  var hiddenSiblings = [];\n  [].forEach.call(container.children, function (node) {\n    if (node.getAttribute && node.getAttribute('aria-hidden') === 'true') {\n      hiddenSiblings.push(node);\n    }\n  });\n  return hiddenSiblings;\n}\n/**\n * @ignore - do not document.\n *\n * Proper state management for containers and the modals in those containers.\n * Simplified, but inspired by react-overlay's ModalManager class.\n * Used by the Modal to ensure proper styling of containers.\n */\n\n\nvar ModalManager =\n/*#__PURE__*/\nfunction () {\n  function ModalManager() {\n    _classCallCheck(this, ModalManager);\n\n    // this.modals[modalIndex] = modal\n    this.modals = []; // this.containers[containerIndex] = {\n    //   modals: [],\n    //   container,\n    //   restore: null,\n    // }\n\n    this.containers = [];\n  }\n\n  _createClass(ModalManager, [{\n    key: \"add\",\n    value: function add(modal, container) {\n      var modalIndex = this.modals.indexOf(modal);\n\n      if (modalIndex !== -1) {\n        return modalIndex;\n      }\n\n      modalIndex = this.modals.length;\n      this.modals.push(modal); // If the modal we are adding is already in the DOM.\n\n      if (modal.modalRef) {\n        ariaHidden(modal.modalRef, false);\n      }\n\n      var hiddenSiblingNodes = getHiddenSiblings(container);\n      ariaHiddenSiblings(container, modal.mountNode, modal.modalRef, hiddenSiblingNodes, true);\n      var containerIndex = findIndexOf(this.containers, function (item) {\n        return item.container === container;\n      });\n\n      if (containerIndex !== -1) {\n        this.containers[containerIndex].modals.push(modal);\n        return modalIndex;\n      }\n\n      this.containers.push({\n        modals: [modal],\n        container: container,\n        restore: null,\n        hiddenSiblingNodes: hiddenSiblingNodes\n      });\n      return modalIndex;\n    }\n  }, {\n    key: \"mount\",\n    value: function mount(modal, props) {\n      var containerIndex = findIndexOf(this.containers, function (item) {\n        return item.modals.indexOf(modal) !== -1;\n      });\n      var containerInfo = this.containers[containerIndex];\n\n      if (!containerInfo.restore) {\n        containerInfo.restore = handleContainer(containerInfo, props);\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(modal) {\n      var modalIndex = this.modals.indexOf(modal);\n\n      if (modalIndex === -1) {\n        return modalIndex;\n      }\n\n      var containerIndex = findIndexOf(this.containers, function (item) {\n        return item.modals.indexOf(modal) !== -1;\n      });\n      var containerInfo = this.containers[containerIndex];\n      containerInfo.modals.splice(containerInfo.modals.indexOf(modal), 1);\n      this.modals.splice(modalIndex, 1); // If that was the last modal in a container, clean up the container.\n\n      if (containerInfo.modals.length === 0) {\n        // The modal might be closed before it had the chance to be mounted in the DOM.\n        if (containerInfo.restore) {\n          containerInfo.restore();\n        }\n\n        if (modal.modalRef) {\n          // In case the modal wasn't in the DOM yet.\n          ariaHidden(modal.modalRef, true);\n        }\n\n        ariaHiddenSiblings(containerInfo.container, modal.mountNode, modal.modalRef, containerInfo.hiddenSiblingNodes, false);\n        this.containers.splice(containerIndex, 1);\n      } else {\n        // Otherwise make sure the next top modal is visible to a screen reader.\n        var nextTop = containerInfo.modals[containerInfo.modals.length - 1]; // as soon as a modal is adding its modalRef is undefined. it can't set\n        // aria-hidden because the dom element doesn't exist either\n        // when modal was unmounted before modalRef gets null\n\n        if (nextTop.modalRef) {\n          ariaHidden(nextTop.modalRef, false);\n        }\n      }\n\n      return modalIndex;\n    }\n  }, {\n    key: \"isTopModal\",\n    value: function isTopModal(modal) {\n      return this.modals.length > 0 && this.modals[this.modals.length - 1] === modal;\n    }\n  }]);\n\n  return ModalManager;\n}();\n\nexport { ModalManager as default };","export { default } from './Modal';\nexport { default as ModalManager } from './ModalManager';","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { getThemeProps, useTheme } from '@material-ui/styles';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport Portal from '../Portal';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport zIndex from '../styles/zIndex';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport TrapFocus from './TrapFocus';\nimport SimpleBackdrop from './SimpleBackdrop';\n\nfunction getContainer(container) {\n  container = typeof container === 'function' ? container() : container;\n  return ReactDOM.findDOMNode(container);\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\n\nvar defaultManager = new ModalManager();\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'fixed',\n      zIndex: theme.zIndex.modal,\n      right: 0,\n      bottom: 0,\n      top: 0,\n      left: 0\n    },\n\n    /* Styles applied to the root element if the `Modal` has exited. */\n    hidden: {\n      visibility: 'hidden'\n    }\n  };\n};\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/api/dialog/)\n * - [Drawer](/api/drawer/)\n * - [Menu](/api/menu/)\n * - [Popover](/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nvar Modal = React.forwardRef(function Modal(inProps, ref) {\n  var theme = useTheme();\n  var props = getThemeProps({\n    name: 'MuiModal',\n    props: _extends({}, inProps),\n    theme: theme\n  });\n\n  var _props$BackdropCompon = props.BackdropComponent,\n      BackdropComponent = _props$BackdropCompon === void 0 ? SimpleBackdrop : _props$BackdropCompon,\n      BackdropProps = props.BackdropProps,\n      children = props.children,\n      _props$closeAfterTran = props.closeAfterTransition,\n      closeAfterTransition = _props$closeAfterTran === void 0 ? false : _props$closeAfterTran,\n      container = props.container,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableBackdro = props.disableBackdropClick,\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      _props$disableScrollL = props.disableScrollLock,\n      disableScrollLock = _props$disableScrollL === void 0 ? false : _props$disableScrollL,\n      _props$hideBackdrop = props.hideBackdrop,\n      hideBackdrop = _props$hideBackdrop === void 0 ? false : _props$hideBackdrop,\n      _props$keepMounted = props.keepMounted,\n      keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted,\n      _props$manager = props.manager,\n      manager = _props$manager === void 0 ? defaultManager : _props$manager,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onEscapeKeyDown = props.onEscapeKeyDown,\n      onRendered = props.onRendered,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"BackdropComponent\", \"BackdropProps\", \"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableBackdropClick\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onEscapeKeyDown\", \"onRendered\", \"open\"]);\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var modal = React.useRef({});\n  var mountNodeRef = React.useRef(null);\n  var modalRef = React.useRef(null);\n  var handleRef = useForkRef(modalRef, ref);\n  var hasTransition = getHasTransition(props);\n\n  var getDoc = function getDoc() {\n    return ownerDocument(mountNodeRef.current);\n  };\n\n  var getModal = function getModal() {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n\n  var handleMounted = function handleMounted() {\n    manager.mount(getModal(), {\n      disableScrollLock: disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n\n  var handleOpen = useEventCallback(function () {\n    var resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  var isTopModal = React.useCallback(function () {\n    return manager.isTopModal(getModal());\n  }, [manager]);\n  var handlePortalRef = useEventCallback(function (node) {\n    mountNodeRef.current = node;\n\n    if (!node) {\n      return;\n    }\n\n    if (onRendered) {\n      onRendered();\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, true);\n    }\n  });\n  var handleClose = React.useCallback(function () {\n    manager.remove(getModal());\n  }, [manager]);\n  React.useEffect(function () {\n    return function () {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(function () {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n\n  var handleBackdropClick = function handleBackdropClick(event) {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // We don't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviours like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    } // Swallow the event, in case someone is listening for the escape key on the body.\n\n\n    event.stopPropagation();\n\n    if (onEscapeKeyDown) {\n      onEscapeKeyDown(event);\n    }\n\n    if (!disableEscapeKeyDown && onClose) {\n      onClose(event, 'escapeKeyDown');\n    }\n  };\n\n  var inlineStyle = styles(theme || {\n    zIndex: zIndex\n  });\n  var childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = children.props.tabIndex || '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n\n  return React.createElement(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal\n  }, React.createElement(\"div\", _extends({\n    ref: handleRef,\n    onKeyDown: handleKeyDown,\n    role: \"presentation\"\n  }, other, {\n    style: _extends({}, inlineStyle.root, {}, !open && exited ? inlineStyle.hidden : {}, {}, other.style)\n  }), hideBackdrop ? null : React.createElement(BackdropComponent, _extends({\n    open: open,\n    onClick: handleBackdropClick\n  }, BackdropProps)), React.createElement(TrapFocus, {\n    disableEnforceFocus: disableEnforceFocus,\n    disableAutoFocus: disableAutoFocus,\n    disableRestoreFocus: disableRestoreFocus,\n    getDoc: getDoc,\n    isEnabled: isTopModal,\n    open: open\n  }, React.cloneElement(children, childProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes = {\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Backdrop`](/api/backdrop/) element.\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * A node, component instance, or function that returns either.\n   * The `container` will have the portal children appended to it.\n   */\n  container: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, clicking the backdrop will not fire any callback.\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire any callback.\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  manager: PropTypes.object,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be:`\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableEscapeKeyDown` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired once the children has been mounted into the `container`.\n   * It signals that the `open={true}` prop took effect.\n   *\n   * This prop will be deprecated and removed in v5, the ref can be used instead.\n   */\n  onRendered: PropTypes.func,\n\n  /**\n   * If `true`, the modal is open.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default Modal;","/* eslint-disable consistent-return, jsx-a11y/no-noninteractive-tabindex */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport useForkRef from '../utils/useForkRef';\n/**\n * @ignore - internal component.\n */\n\nfunction TrapFocus(props) {\n  var children = props.children,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      getDoc = props.getDoc,\n      isEnabled = props.isEnabled,\n      open = props.open;\n  var ignoreNextEnforceFocus = React.useRef();\n  var sentinelStart = React.useRef(null);\n  var sentinelEnd = React.useRef(null);\n  var nodeToRestore = React.useRef();\n  var rootRef = React.useRef(null); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    rootRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(children.ref, handleOwnRef); // ⚠️ You may rely on React.useMemo as a performance optimization, not as a semantic guarantee.\n  // https://reactjs.org/docs/hooks-reference.html#usememo\n\n  React.useMemo(function () {\n    if (!open || typeof window === 'undefined') {\n      return;\n    }\n\n    nodeToRestore.current = getDoc().activeElement;\n  }, [open]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  React.useEffect(function () {\n    if (!open) {\n      return;\n    }\n\n    var doc = ownerDocument(rootRef.current); // We might render an empty child.\n\n    if (!disableAutoFocus && rootRef.current && !rootRef.current.contains(doc.activeElement)) {\n      if (!rootRef.current.hasAttribute('tabIndex')) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(['Material-UI: the modal content node does not accept focus.', 'For the benefit of assistive technologies, ' + 'the tabIndex of the node is being set to \"-1\".'].join('\\n'));\n        }\n\n        rootRef.current.setAttribute('tabIndex', -1);\n      }\n\n      rootRef.current.focus();\n    }\n\n    var contain = function contain() {\n      if (disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {\n        ignoreNextEnforceFocus.current = false;\n        return;\n      }\n\n      if (rootRef.current && !rootRef.current.contains(doc.activeElement)) {\n        rootRef.current.focus();\n      }\n    };\n\n    var loopFocus = function loopFocus(event) {\n      // 9 = Tab\n      if (disableEnforceFocus || !isEnabled() || event.keyCode !== 9) {\n        return;\n      } // Make sure the next tab starts from the right place.\n\n\n      if (doc.activeElement === rootRef.current) {\n        // We need to ignore the next contain as\n        // it will try to move the focus back to the rootRef element.\n        ignoreNextEnforceFocus.current = true;\n\n        if (event.shiftKey) {\n          sentinelEnd.current.focus();\n        } else {\n          sentinelStart.current.focus();\n        }\n      }\n    };\n\n    doc.addEventListener('focus', contain, true);\n    doc.addEventListener('keydown', loopFocus, true); // With Edge, Safari and Firefox, no focus related events are fired when the focused area stops being a focused area\n    // e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=559561.\n    //\n    // The whatwg spec defines how the browser should behave but does not explicitly mention any events:\n    // https://html.spec.whatwg.org/multipage/interaction.html#focus-fixup-rule.\n\n    var interval = setInterval(function () {\n      contain();\n    }, 50);\n    return function () {\n      clearInterval(interval);\n      doc.removeEventListener('focus', contain, true);\n      doc.removeEventListener('keydown', loopFocus, true); // restoreLastFocus()\n\n      if (!disableRestoreFocus) {\n        // In IE 11 it is possible for document.activeElement to be null resulting\n        // in nodeToRestore.current being null.\n        // Not all elements in IE 11 have a focus method.\n        // Once IE 11 support is dropped the focus() call can be unconditional.\n        if (nodeToRestore.current && nodeToRestore.current.focus) {\n          nodeToRestore.current.focus();\n        }\n\n        nodeToRestore.current = null;\n      }\n    };\n  }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelStart,\n    \"data-test\": \"sentinelStart\"\n  }), React.cloneElement(children, {\n    ref: handleRef\n  }), React.createElement(\"div\", {\n    tabIndex: 0,\n    ref: sentinelEnd,\n    \"data-test\": \"sentinelEnd\"\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? TrapFocus.propTypes = {\n  /**\n   * A single child content element.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Return the document to consider.\n   * We use it to implement the restore focus between different browser documents.\n   */\n  getDoc: PropTypes.func.isRequired,\n\n  /**\n   * Do we still want to enforce the focus?\n   * This prop helps nesting TrapFocus elements.\n   */\n  isEnabled: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, the modal is open.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\n/*\n\nIn the future, we should be able to replace TrapFocus with:\nhttps://github.com/facebook/react/blob/master/packages/react-events/docs/FocusScope.md\n\n```jsx\nimport FocusScope from 'react-dom/FocusScope';\n\nfunction TrapFocus(props) {\n  const {\n    children\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableRestoreFocus = false,\n    open,\n  } = props;\n\n  if (!open) {\n    return children;\n  }\n\n  return (\n    <FocusScope\n      autoFocus={!disableAutoFocus}\n      contain={!disableEnforceFocus}\n      restoreFocus={!disableRestoreFocus}\n    >\n      {children}\n    </FocusScope>\n  );\n}\n```\n\n*/\n\nexport default TrapFocus;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    zIndex: -1,\n    position: 'fixed',\n    right: 0,\n    bottom: 0,\n    top: 0,\n    left: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    // Remove grey highlight\n    WebkitTapHighlightColor: 'transparent',\n    // Disable scroll capabilities.\n    touchAction: 'none'\n  },\n\n  /* Styles applied to the root element if `invisible={true}`. */\n  invisible: {\n    backgroundColor: 'transparent'\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SimpleBackdrop = React.forwardRef(function SimpleBackdrop(props, ref) {\n  var _props$invisible = props.invisible,\n      invisible = _props$invisible === void 0 ? false : _props$invisible,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"invisible\", \"open\"]);\n\n  return open ? React.createElement(\"div\", _extends({\n    \"aria-hidden\": true,\n    ref: ref\n  }, other, {\n    style: _extends({}, styles.root, {}, invisible ? styles.invisible : {}, {}, other.style)\n  })) : null;\n});\nprocess.env.NODE_ENV !== \"production\" ? SimpleBackdrop.propTypes = {\n  /**\n   * If `true`, the backdrop is invisible.\n   * It can be used when rendering a popover or a custom select component.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is open.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default SimpleBackdrop;"],"sourceRoot":""}