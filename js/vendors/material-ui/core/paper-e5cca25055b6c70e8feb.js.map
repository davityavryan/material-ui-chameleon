{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Paper/Paper.js","webpack:///./node_modules/@material-ui/core/esm/Paper/index.js"],"names":["styles","theme","elevations","shadows","forEach","shadow","index","concat","boxShadow","root","backgroundColor","palette","background","paper","color","text","primary","transition","transitions","create","rounded","borderRadius","shape","Paper","React","forwardRef","props","ref","classes","className","_props$component","component","Component","_props$square","square","_props$elevation","elevation","other","createElement","name"],"mappings":"iLAAA,cACA,UACA,UAEA,GADA,QACA,UACA,WAEWA,GADX,SACoB,SAAgBC,GAClC,IAAIC,EAAa,GAMjB,OALAD,EAAME,QAAQC,SAAQ,SAAUC,EAAQC,GACtCJ,EAAW,YAAYK,OAAOD,IAAU,CACtCE,UAAWH,OAGR,aAAS,CAEdI,KAAM,CACJC,gBAAiBT,EAAMU,QAAQC,WAAWC,MAC1CC,MAAOb,EAAMU,QAAQI,KAAKC,QAC1BC,WAAYhB,EAAMiB,YAAYC,OAAO,eAIvCC,QAAS,CACPC,aAAcpB,EAAMqB,MAAMD,eAE3BnB,K,WAEL,IAAIqB,EAAQC,UAAMC,YAAW,SAAeC,EAAOC,GACjD,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAmBJ,EAAMK,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAgBP,EAAMQ,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAmBT,EAAMU,UACzBA,OAAiC,IAArBD,EAA8B,EAAIA,EAC9CE,GAAQ,aAAyBX,EAAO,CAAC,UAAW,YAAa,YAAa,SAAU,cAW5F,OAAOF,UAAMc,cAAcN,GAAW,aAAS,CAC7CH,WAAW,aAAKD,EAAQnB,KAAMmB,EAAQ,YAAYrB,OAAO6B,IAAaP,GAAYK,GAAUN,EAAQR,SACpGO,IAAKA,GACJU,O,GAoCU,aAAWrC,EAAQ,CAChCuC,KAAM,YADO,CAEZhB,G,6LCzFH","file":"js/vendors/material-ui/core/paper-e5cca25055b6c70e8feb.js","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport useTheme from '../styles/useTheme';\nexport var styles = function styles(theme) {\n  var elevations = {};\n  theme.shadows.forEach(function (shadow, index) {\n    elevations[\"elevation\".concat(index)] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    }\n  }, elevations);\n};\nvar Paper = React.forwardRef(function Paper(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 1 : _props$elevation,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var theme = useTheme();\n\n    if (!theme.shadows[elevation]) {\n      console.error(\"Material-UI: this elevation `\".concat(elevation, \"` is not implemented.\"));\n    }\n  }\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[\"elevation\".concat(elevation)], className, !square && classes.rounded),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   */\n  elevation: PropTypes.number,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);","export { default } from './Paper';"],"sourceRoot":""}