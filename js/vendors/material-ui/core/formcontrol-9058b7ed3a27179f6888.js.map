{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/FormControl/formControlState.js","webpack:///./node_modules/@material-ui/core/esm/FormControl/useFormControl.js","webpack:///./node_modules/@material-ui/core/esm/FormControl/index.js","webpack:///./node_modules/@material-ui/core/esm/FormControl/FormControl.js","webpack:///./node_modules/@material-ui/core/esm/FormControl/FormControlContext.js"],"names":["_ref","props","states","muiFormControl","reduce","acc","state","React","useContext","FormControlContext","styles","root","display","flexDirection","position","minWidth","padding","margin","border","verticalAlign","marginNormal","marginTop","marginBottom","marginDense","fullWidth","width","FormControl","forwardRef","ref","children","classes","className","_props$color","color","_props$component","component","Component","_props$disabled","disabled","_props$error","error","_props$fullWidth","visuallyFocused","focused","_props$hiddenLabel","hiddenLabel","_props$margin","_props$required","required","size","_props$variant","variant","other","_React$useState","useState","initialAdornedStart","Children","forEach","child","input","isAdornedStart","adornedStart","setAdornedStart","_React$useState2","initialFilled","isFilled","filled","setFilled","_React$useState3","_focused","setFocused","undefined","onFilled","useCallback","childContext","onBlur","onEmpty","onFocus","registerEffect","createElement","Provider","value","concat","name","createContext"],"mappings":"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","file":"js/vendors/material-ui/core/formcontrol-9058b7ed3a27179f6888.js","sourcesContent":["export default function formControlState(_ref) {\n  var props = _ref.props,\n      states = _ref.states,\n      muiFormControl = _ref.muiFormControl;\n  return states.reduce(function (acc, state) {\n    acc[state] = props[state];\n\n    if (muiFormControl) {\n      if (typeof props[state] === 'undefined') {\n        acc[state] = muiFormControl[state];\n      }\n    }\n\n    return acc;\n  }, {});\n}","import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","export { default } from './FormControl';\nexport { default as useFormControl } from './useFormControl';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    flexDirection: 'column',\n    position: 'relative',\n    // Reset fieldset default style.\n    minWidth: 0,\n    padding: 0,\n    margin: 0,\n    border: 0,\n    verticalAlign: 'top' // Fix alignment issue on Safari.\n\n  },\n\n  /* Styles applied to the root element if `margin=\"normal\"`. */\n  marginNormal: {\n    marginTop: 16,\n    marginBottom: 8\n  },\n\n  /* Styles applied to the root element if `margin=\"dense\"`. */\n  marginDense: {\n    marginTop: 8,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%'\n  }\n};\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/components/text-fields/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️Only one input can be used within a FormControl.\n */\n\nvar FormControl = React.forwardRef(function FormControl(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      visuallyFocused = props.focused,\n      _props$hiddenLabel = props.hiddenLabel,\n      hiddenLabel = _props$hiddenLabel === void 0 ? false : _props$hiddenLabel,\n      _props$margin = props.margin,\n      margin = _props$margin === void 0 ? 'none' : _props$margin,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      size = props.size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"fullWidth\", \"focused\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"]);\n\n  var _React$useState = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        var input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  }),\n      adornedStart = _React$useState[0],\n      setAdornedStart = _React$useState[1];\n\n  var _React$useState2 = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  }),\n      filled = _React$useState2[0],\n      setFilled = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _focused = _React$useState3[0],\n      setFocused = _React$useState3[1];\n\n  var focused = visuallyFocused !== undefined ? visuallyFocused : _focused;\n\n  if (disabled && focused) {\n    setFocused(false);\n  }\n\n  var registerEffect;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var registeredInput = React.useRef(false);\n\n    registerEffect = function registerEffect() {\n      if (registeredInput.current) {\n        console.error(['Material-UI: there are multiple InputBase components inside a FormControl.', 'This is not supported. It might cause infinite rendering loops.', 'Only use one InputBase.'].join('\\n'));\n      }\n\n      registeredInput.current = true;\n      return function () {\n        registeredInput.current = false;\n      };\n    };\n  }\n\n  var onFilled = React.useCallback(function () {\n    setFilled(true);\n  }, []);\n  var onEmpty = React.useCallback(function () {\n    setFilled(false);\n  }, []);\n  var childContext = {\n    adornedStart: adornedStart,\n    setAdornedStart: setAdornedStart,\n    color: color,\n    disabled: disabled,\n    error: error,\n    filled: filled,\n    focused: focused,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    margin: (size === 'small' ? 'dense' : undefined) || margin,\n    onBlur: function onBlur() {\n      setFocused(false);\n    },\n    onEmpty: onEmpty,\n    onFilled: onFilled,\n    onFocus: function onFocus() {\n      setFocused(true);\n    },\n    registerEffect: registerEffect,\n    required: required,\n    variant: variant\n  };\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, margin !== 'none' && classes[\"margin\".concat(capitalize(margin))], fullWidth && classes.fullWidth),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes = {\n  /**\n   * The contents of the form control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the component will be displayed in focused state.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the component will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['none', 'dense', 'normal']),\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControl'\n})(FormControl);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar FormControlContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\n\nexport function useFormControl() {\n  return React.useContext(FormControlContext);\n}\nexport default FormControlContext;"],"sourceRoot":""}