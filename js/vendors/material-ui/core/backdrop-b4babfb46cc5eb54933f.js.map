{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Backdrop/index.js","webpack:///./node_modules/@material-ui/core/esm/Backdrop/Backdrop.js"],"names":["styles","root","zIndex","position","display","alignItems","justifyContent","right","bottom","top","left","backgroundColor","WebkitTapHighlightColor","touchAction","invisible","Backdrop","React","forwardRef","props","ref","children","classes","className","_props$invisible","open","transitionDuration","other","createElement","Fade","in","timeout","name"],"mappings":"2OAAA,iB,uHCAA,cACA,UACA,UAEA,GADA,QACA,SACA,WACA,YACWA,EAAS,CAElBC,KAAM,CAEJC,QAAS,EACTC,SAAU,QACVC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,MAAO,EACPC,OAAQ,EACRC,IAAK,EACLC,KAAM,EACNC,gBAAiB,qBACjBC,wBAAyB,cAEzBC,YAAa,QAIfC,UAAW,CACTH,gBAAiB,gB,WAGrB,IAAII,EAAWC,UAAMC,YAAW,SAAkBC,EAAOC,GACvD,IAAIC,EAAWF,EAAME,SACjBC,EAAUH,EAAMG,QAChBC,EAAYJ,EAAMI,UAClBC,EAAmBL,EAAMJ,UACzBA,OAAiC,IAArBS,GAAsCA,EAClDC,EAAON,EAAMM,KACbC,EAAqBP,EAAMO,mBAC3BC,GAAQ,aAAyBR,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,OAAQ,uBAEtG,OAAOF,UAAMW,cAAcC,WAAM,aAAS,CACxCC,GAAIL,EACJM,QAASL,GACRC,GAAQV,UAAMW,cAAc,MAAO,CACpCL,WAAW,aAAKD,EAAQpB,KAAMqB,EAAWR,GAAaO,EAAQP,WAC9D,eAAe,EACfK,IAAKA,GACJC,O,GA6CU,aAAWpB,EAAQ,CAChC+B,KAAM,eADO,CAEZhB,G","file":"js/vendors/material-ui/core/backdrop-b4babfb46cc5eb54933f.js","sourcesContent":["export { default } from './Backdrop';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Fade from '../Fade';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    // Improve scrollable dialog support.\n    zIndex: -1,\n    position: 'fixed',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    right: 0,\n    bottom: 0,\n    top: 0,\n    left: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    WebkitTapHighlightColor: 'transparent',\n    // Disable scroll capabilities.\n    touchAction: 'none'\n  },\n\n  /* Styles applied to the root element if `invisible={true}`. */\n  invisible: {\n    backgroundColor: 'transparent'\n  }\n};\nvar Backdrop = React.forwardRef(function Backdrop(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$invisible = props.invisible,\n      invisible = _props$invisible === void 0 ? false : _props$invisible,\n      open = props.open,\n      transitionDuration = props.transitionDuration,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"invisible\", \"open\", \"transitionDuration\"]);\n\n  return React.createElement(Fade, _extends({\n    in: open,\n    timeout: transitionDuration\n  }, other), React.createElement(\"div\", {\n    className: clsx(classes.root, className, invisible && classes.invisible),\n    \"aria-hidden\": true,\n    ref: ref\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Backdrop.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the backdrop is invisible.\n   * It can be used when rendering a popover or a custom select component.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBackdrop'\n})(Backdrop);"],"sourceRoot":""}