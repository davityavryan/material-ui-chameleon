{"version":3,"sources":["webpack://material-ui-chameleon-docs/./node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js"],"names":[],"mappings":"+NAOW,EAAS,CAElB,KAAM,CACJ,OAAQ,EACR,QAAS,YACT,KAAM,aAGN,EAA2B,aAAiB,SAAqB,EAAO,EAAK,CAC/E,GAAI,GAAW,EAAM,SACjB,EAAU,EAAM,QAChB,EAAY,EAAM,UAClB,EAAwB,EAAM,kBAC9B,EAAoB,IAA0B,OAAS,GAAQ,EAC/D,EAAQ,QAAyB,EAAO,CAAC,WAAY,UAAW,YAAa,sBAEjF,MAAoB,iBAAoB,MAAO,QAAS,CACtD,UAAW,cAAK,EAAQ,KAAM,GAC9B,OACC,GAAQ,EAAoB,EAAwB,gBAAoB,IAAY,CACrF,UAAW,KACX,QAAS,MACR,MA8BL,QAAe,QAAW,EAAQ,CAChC,KAAM,mBACL","file":"js/vendors/material-ui/core/dialogtitle.88a2f41d9222852afde1.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * If `true`, the children won't be wrapped by a typography component.\r\n   * For instance, this can be useful to render an h4 instead of the default h2.\r\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);"],"sourceRoot":""}