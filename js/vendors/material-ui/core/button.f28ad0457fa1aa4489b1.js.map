{"version":3,"sources":["webpack://material-ui-chameleon-docs/./node_modules/@material-ui/core/esm/Button/Button.js"],"names":[],"mappings":"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","file":"js/vendors/material-ui/core/button.f28ad0457fa1aa4489b1.js","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(alpha(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(alpha(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = /*#__PURE__*/React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the button.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The color of the component. It supports those theme colors that make sense for this component.\r\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\r\n   * If `true`, the button will be disabled.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * If `true`, no elevation is used.\r\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\r\n   * If `true`, the  keyboard focus ripple will be disabled.\r\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\r\n   * If `true`, the ripple effect will be disabled.\r\n   *\r\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\r\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\r\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\r\n   * Element placed after the children.\r\n   */\n  endIcon: PropTypes.node,\n\n  /**\r\n   * @ignore\r\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\r\n   * If `true`, the button will take up the full width of its container.\r\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\r\n   * The URL to link to when the button is clicked.\r\n   * If defined, an `a` element will be used as the root node.\r\n   */\n  href: PropTypes.string,\n\n  /**\r\n   * The size of the button.\r\n   * `small` is equivalent to the dense button styling.\r\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\r\n   * Element placed before the children.\r\n   */\n  startIcon: PropTypes.node,\n\n  /**\r\n   * @ignore\r\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),\n\n  /**\r\n   * The variant to use.\r\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);"],"sourceRoot":""}