{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/utils/setRef.js","webpack:///./node_modules/@material-ui/core/esm/utils/debounce.js","webpack:///./node_modules/@material-ui/core/esm/utils/ownerWindow.js","webpack:///./node_modules/@material-ui/core/esm/utils/createChainedFunction.js","webpack:///./node_modules/@material-ui/core/esm/utils/focusVisible.js","webpack:///./node_modules/@material-ui/core/esm/utils/useForkRef.js","webpack:///./node_modules/@material-ui/core/esm/utils/capitalize.js","webpack:///./node_modules/@material-ui/core/esm/utils/isMuiElement.js","webpack:///./node_modules/@material-ui/core/esm/utils/ownerDocument.js","webpack:///./node_modules/@material-ui/core/esm/utils/getScrollbarSize.js","webpack:///./node_modules/@material-ui/core/esm/utils/useEventCallback.js"],"names":["ref","value","current","func","timeout","wait","arguments","length","undefined","debounced","_len","args","Array","_key","that","this","clearTimeout","setTimeout","apply","clear","node","defaultView","window","funcs","reduce","acc","_len2","_key2","ownerDocument","removeEventListener","handleKeyDown","handlePointerDown","handleVisibilityChange","isFocusVisible","onBlurVisible","handleBlurVisible","React","useCallback","instance","ReactDOM","findDOMNode","addEventListener","hadKeyboardEvent","hadFocusVisibleRecently","hadFocusVisibleRecentlyTimeout","inputTypesWhitelist","text","search","url","tel","email","password","number","date","month","week","time","datetime","event","metaKey","altKey","ctrlKey","visibilityState","type","tagName","target","matches","error","readOnly","isContentEditable","refA","refB","useMemo","refValue","string","process","charAt","toUpperCase","slice","element","muiNames","isValidElement","indexOf","muiName","document","scrollDiv","createElement","style","width","height","position","top","overflow","body","appendChild","scrollbarSize","offsetWidth","clientWidth","removeChild","fn","useRef","useEnhancedEffect","useLayoutEffect","useEffect"],"mappings":"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","file":"js/vendors/material-ui/core/utils-f077a7ca635df1b93099.js","sourcesContent":["// TODO: Make it private only in v5\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","// Corresponds to 10 frames at 60 Hz.\n// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.\nexport default function debounce(func) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 166;\n  var timeout;\n\n  function debounced() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    // eslint-disable-next-line consistent-this\n    var that = this;\n\n    var later = function later() {\n      func.apply(that, args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  }\n\n  debounced.clear = function () {\n    clearTimeout(timeout);\n  };\n\n  return debounced;\n}","import ownerDocument from './ownerDocument';\n\nfunction ownerWindow(node) {\n  var doc = ownerDocument(node);\n  return doc.defaultView || window;\n}\n\nexport default ownerWindow;","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nexport default function createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.reduce(function (acc, func) {\n    if (func == null) {\n      return acc;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof func !== 'function') {\n        console.error('Material-UI: invalid Argument Type, must only provide functions, undefined, or null.');\n      }\n    }\n\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      acc.apply(this, args);\n      func.apply(this, args);\n    };\n  }, function () {});\n}","// based on https://github.com/WICG/focus-visible/blob/v4.1.5/src/focus-visible.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nvar hadKeyboardEvent = true;\nvar hadFocusVisibleRecently = false;\nvar hadFocusVisibleRecentlyTimeout = null;\nvar inputTypesWhitelist = {\n  text: true,\n  search: true,\n  url: true,\n  tel: true,\n  email: true,\n  password: true,\n  number: true,\n  date: true,\n  month: true,\n  week: true,\n  time: true,\n  datetime: true,\n  'datetime-local': true\n};\n/**\n * Computes whether the given element should automatically trigger the\n * `focus-visible` class being added, i.e. whether it should always match\n * `:focus-visible` when focused.\n * @param {Element} node\n * @return {boolean}\n */\n\nfunction focusTriggersKeyboardModality(node) {\n  var type = node.type,\n      tagName = node.tagName;\n\n  if (tagName === 'INPUT' && inputTypesWhitelist[type] && !node.readOnly) {\n    return true;\n  }\n\n  if (tagName === 'TEXTAREA' && !node.readOnly) {\n    return true;\n  }\n\n  if (node.isContentEditable) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * Keep track of our keyboard modality state with `hadKeyboardEvent`.\n * If the most recent user interaction was via the keyboard;\n * and the key press did not include a meta, alt/option, or control key;\n * then the modality is keyboard. Otherwise, the modality is not keyboard.\n * @param {KeyboardEvent} event\n */\n\n\nfunction handleKeyDown(event) {\n  if (event.metaKey || event.altKey || event.ctrlKey) {\n    return;\n  }\n\n  hadKeyboardEvent = true;\n}\n/**\n * If at any point a user clicks with a pointing device, ensure that we change\n * the modality away from keyboard.\n * This avoids the situation where a user presses a key on an already focused\n * element, and then clicks on a different element, focusing it with a\n * pointing device, while we still think we're in keyboard modality.\n */\n\n\nfunction handlePointerDown() {\n  hadKeyboardEvent = false;\n}\n\nfunction handleVisibilityChange() {\n  if (this.visibilityState === 'hidden') {\n    // If the tab becomes active again, the browser will handle calling focus\n    // on the element (Safari actually calls it twice).\n    // If this tab change caused a blur on an element with focus-visible,\n    // re-apply the class when the user switches back to the tab.\n    if (hadFocusVisibleRecently) {\n      hadKeyboardEvent = true;\n    }\n  }\n}\n\nfunction prepare(ownerDocument) {\n  ownerDocument.addEventListener('keydown', handleKeyDown, true);\n  ownerDocument.addEventListener('mousedown', handlePointerDown, true);\n  ownerDocument.addEventListener('pointerdown', handlePointerDown, true);\n  ownerDocument.addEventListener('touchstart', handlePointerDown, true);\n  ownerDocument.addEventListener('visibilitychange', handleVisibilityChange, true);\n}\n\nexport function teardown(ownerDocument) {\n  ownerDocument.removeEventListener('keydown', handleKeyDown, true);\n  ownerDocument.removeEventListener('mousedown', handlePointerDown, true);\n  ownerDocument.removeEventListener('pointerdown', handlePointerDown, true);\n  ownerDocument.removeEventListener('touchstart', handlePointerDown, true);\n  ownerDocument.removeEventListener('visibilitychange', handleVisibilityChange, true);\n}\n\nfunction isFocusVisible(event) {\n  var target = event.target;\n\n  try {\n    return target.matches(':focus-visible');\n  } catch (error) {} // browsers not implementing :focus-visible will throw a SyntaxError\n  // we use our own heuristic for those browsers\n  // rethrow might be better if it's not the expected error but do we really\n  // want to crash if focus-visible malfunctioned?\n  // no need for validFocusTarget check. the user does that by attaching it to\n  // focusable events only\n\n\n  return hadKeyboardEvent || focusTriggersKeyboardModality(target);\n}\n/**\n * Should be called if a blur event is fired on a focus-visible element\n */\n\n\nfunction handleBlurVisible() {\n  // To detect a tab/window switch, we look for a blur event followed\n  // rapidly by a visibility change.\n  // If we don't see a visibility change within 100ms, it's probably a\n  // regular focus change.\n  hadFocusVisibleRecently = true;\n  window.clearTimeout(hadFocusVisibleRecentlyTimeout);\n  hadFocusVisibleRecentlyTimeout = window.setTimeout(function () {\n    hadFocusVisibleRecently = false;\n  }, 100);\n}\n\nexport function useIsFocusVisible() {\n  var ref = React.useCallback(function (instance) {\n    var node = ReactDOM.findDOMNode(instance);\n\n    if (node != null) {\n      prepare(node.ownerDocument);\n    }\n  }, []);\n  return {\n    isFocusVisible: isFocusVisible,\n    onBlurVisible: handleBlurVisible,\n    ref: ref\n  };\n}","import React from 'react';\nimport setRef from './setRef';\nexport default function useForkRef(refA, refB) {\n  /**\n   * This will create a new function if the ref props change and are defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior\n   */\n  return React.useMemo(function () {\n    if (refA == null && refB == null) {\n      return null;\n    }\n\n    return function (refValue) {\n      setRef(refA, refValue);\n      setRef(refB, refValue);\n    };\n  }, [refA, refB]);\n}","// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word a the sentence.\n// We only handle the first word.\nexport default function capitalize(string) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof string !== 'string') {\n      throw new Error('Material-UI: capitalize(string) expects a string argument.');\n    }\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","import React from 'react';\nexport default function isMuiElement(element, muiNames) {\n  return React.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;\n}","function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}\n\nexport default ownerDocument;","// A change of the browser zoom change the scrollbar size.\n// Credit https://github.com/twbs/bootstrap/blob/3ffe3a5d82f6f561b82ff78d82b32a7d14aed558/js/src/modal.js#L512-L519\nfunction getScrollbarSize() {\n  var scrollDiv = document.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.top = '-9999px';\n  scrollDiv.style.overflow = 'scroll';\n  document.body.appendChild(scrollDiv);\n  var scrollbarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  document.body.removeChild(scrollDiv);\n  return scrollbarSize;\n}\n\nexport default getScrollbarSize;","import React from 'react';\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n/**\n * https://github.com/facebook/react/issues/14099#issuecomment-440013892\n *\n * @param {function} fn\n */\n\nexport default function useEventCallback(fn) {\n  var ref = React.useRef(fn);\n  useEnhancedEffect(function () {\n    ref.current = fn;\n  });\n  return React.useCallback(function () {\n    return (0, ref.current).apply(void 0, arguments);\n  }, []);\n}"],"sourceRoot":""}