{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/ButtonBase/ButtonBase.js","webpack:///./node_modules/@material-ui/core/esm/ButtonBase/TouchRipple.js","webpack:///./node_modules/@material-ui/core/esm/ButtonBase/Ripple.js","webpack:///./node_modules/@material-ui/core/esm/ButtonBase/index.js"],"names":["styles","root","display","alignItems","justifyContent","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","textDecoration","color","borderStyle","pointerEvents","disabled","focusVisible","ButtonBase","React","forwardRef","props","ref","action","buttonRefProp","buttonRef","_props$centerRipple","centerRipple","children","classes","className","_props$component","component","_props$disabled","_props$disableRipple","disableRipple","_props$disableTouchRi","disableTouchRipple","_props$focusRipple","focusRipple","focusVisibleClassName","onBlur","onClick","onFocus","onFocusVisible","onKeyDown","onKeyUp","onMouseDown","onMouseLeave","onMouseUp","onTouchEnd","onTouchMove","onTouchStart","onDragLeave","_props$tabIndex","tabIndex","TouchRippleProps","_props$type","type","other","useRef","rippleRef","_React$useState","useState","setFocusVisible","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","useRippleHandler","rippleAction","eventCallback","skipRippleAction","arguments","length","undefined","event","current","useImperativeHandle","focus","useEffect","pulsate","handleMouseDown","handleDragLeave","handleMouseUp","handleMouseLeave","preventDefault","handleTouchStart","handleTouchEnd","handleTouchMove","handleBlur","handleFocus","currentTarget","isNonNativeButton","button","ReactDOM","findDOMNode","tagName","href","keydownRef","handleKeyDown","key","persist","stop","start","target","handleKeyUp","defaultPrevented","ComponentProp","buttonProps","role","handleUserRef","handleOwnRef","handleRef","createElement","NoSsr","TouchRipple","center","name","theme","overflow","zIndex","top","right","bottom","left","ripple","opacity","rippleVisible","transform","animation","concat","transitions","easing","easeInOut","ripplePulsate","animationDuration","duration","shorter","child","width","height","childLeaving","childPulsate","_props$center","centerProp","ripples","setRipples","nextKey","rippleCallback","ignoringMouseDown","startTimer","startTimerCommit","container","clearTimeout","startCommit","useCallback","params","rippleX","rippleY","rippleSize","cb","oldRipples","Ripple","timeout","options","_options$pulsate","_options$center","_options$fakeElement","fakeElement","element","rect","getBoundingClientRect","clientX","clientY","touches","Math","round","sqrt","pow","sizeX","max","abs","clientWidth","sizeY","clientHeight","setTimeout","slice","TransitionGroup","exit","Component","flip","memo","muiName","useEnhancedEffect","window","useLayoutEffect","_props$pulsate","inProp","in","_props$onExited","onExited","leaving","setLeaving","rippleClassName","rippleStyles","childClassName","handleExited","timeoutId","style"],"mappings":"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","file":"js/vendors/material-ui/core/buttonbase-5bc8f1d594796d7ba013.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef, refType } from '@material-ui/utils';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport withStyles from '../styles/withStyles';\nimport NoSsr from '../NoSsr';\nimport { useIsFocusVisible } from '../utils/focusVisible';\nimport TouchRipple from './TouchRipple';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    textDecoration: 'none',\n    // So we take precedent over the style of a native <a /> element.\n    color: 'inherit',\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$disabled': {\n      pointerEvents: 'none',\n      // Disable link interactions\n      cursor: 'default'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Pseudo-class applied to the root element if keyboard focused. */\n  focusVisible: {}\n};\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\n\nvar ButtonBase = React.forwardRef(function ButtonBase(props, ref) {\n  var action = props.action,\n      buttonRefProp = props.buttonRef,\n      _props$centerRipple = props.centerRipple,\n      centerRipple = _props$centerRipple === void 0 ? false : _props$centerRipple,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableRipple = props.disableRipple,\n      disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n      _props$disableTouchRi = props.disableTouchRipple,\n      disableTouchRipple = _props$disableTouchRi === void 0 ? false : _props$disableTouchRi,\n      _props$focusRipple = props.focusRipple,\n      focusRipple = _props$focusRipple === void 0 ? false : _props$focusRipple,\n      focusVisibleClassName = props.focusVisibleClassName,\n      onBlur = props.onBlur,\n      onClick = props.onClick,\n      onFocus = props.onFocus,\n      onFocusVisible = props.onFocusVisible,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      onMouseDown = props.onMouseDown,\n      onMouseLeave = props.onMouseLeave,\n      onMouseUp = props.onMouseUp,\n      onTouchEnd = props.onTouchEnd,\n      onTouchMove = props.onTouchMove,\n      onTouchStart = props.onTouchStart,\n      onDragLeave = props.onDragLeave,\n      _props$tabIndex = props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex,\n      TouchRippleProps = props.TouchRippleProps,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      other = _objectWithoutProperties(props, [\"action\", \"buttonRef\", \"centerRipple\", \"children\", \"classes\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"onBlur\", \"onClick\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"onDragLeave\", \"tabIndex\", \"TouchRippleProps\", \"type\"]);\n\n  var buttonRef = React.useRef(null);\n\n  function getButtonNode() {\n    // #StrictMode ready\n    return ReactDOM.findDOMNode(buttonRef.current);\n  }\n\n  var rippleRef = React.useRef(null);\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  React.useImperativeHandle(action, function () {\n    return {\n      focusVisible: function focusVisible() {\n        setFocusVisible(true);\n        buttonRef.current.focus();\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (focusVisible && focusRipple && !disableRipple) {\n      rippleRef.current.pulsate();\n    }\n  }, [disableRipple, focusRipple, focusVisible]);\n\n  function useRippleHandler(rippleAction, eventCallback) {\n    var skipRippleAction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : disableTouchRipple;\n    return useEventCallback(function (event) {\n      if (eventCallback) {\n        eventCallback(event);\n      }\n\n      var ignore = skipRippleAction;\n\n      if (!ignore && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n\n      return true;\n    });\n  }\n\n  var handleMouseDown = useRippleHandler('start', onMouseDown);\n  var handleDragLeave = useRippleHandler('stop', onDragLeave);\n  var handleMouseUp = useRippleHandler('stop', onMouseUp);\n  var handleMouseLeave = useRippleHandler('stop', function (event) {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n  });\n  var handleTouchStart = useRippleHandler('start', onTouchStart);\n  var handleTouchEnd = useRippleHandler('stop', onTouchEnd);\n  var handleTouchMove = useRippleHandler('stop', onTouchMove);\n  var handleBlur = useRippleHandler('stop', function (event) {\n    if (focusVisible) {\n      onBlurVisible(event);\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  }, false);\n  var handleFocus = useEventCallback(function (event) {\n    if (disabled) {\n      return;\n    } // Fix for https://github.com/facebook/react/issues/7769\n\n\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n\n      if (onFocusVisible) {\n        onFocusVisible(event);\n      }\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  });\n\n  var isNonNativeButton = function isNonNativeButton() {\n    var button = getButtonNode();\n    return component && component !== 'button' && !(button.tagName === 'A' && button.href);\n  };\n  /**\n   * IE 11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */\n\n\n  var keydownRef = React.useRef(false);\n  var handleKeyDown = useEventCallback(function (event) {\n    // Check if key is already down to avoid repeats being counted as multiple activations\n    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      event.persist();\n      rippleRef.current.stop(event, function () {\n        rippleRef.current.start(event);\n      });\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter') {\n      event.preventDefault();\n\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  var handleKeyUp = useEventCallback(function (event) {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      event.persist();\n      rippleRef.current.stop(event, function () {\n        rippleRef.current.pulsate(event);\n      });\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {\n      event.preventDefault();\n\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  var ComponentProp = component;\n\n  if (ComponentProp === 'button' && other.href) {\n    ComponentProp = 'a';\n  }\n\n  var buttonProps = {};\n\n  if (ComponentProp === 'button') {\n    buttonProps.type = type;\n    buttonProps.disabled = disabled;\n  } else {\n    if (ComponentProp !== 'a' || !other.href) {\n      buttonProps.role = 'button';\n    }\n\n    buttonProps['aria-disabled'] = disabled;\n  }\n\n  var handleUserRef = useForkRef(buttonRefProp, ref);\n  var handleOwnRef = useForkRef(focusVisibleRef, buttonRef);\n  var handleRef = useForkRef(handleUserRef, handleOwnRef);\n  return React.createElement(ComponentProp, _extends({\n    className: clsx(classes.root, className, focusVisible && [classes.focusVisible, focusVisibleClassName], disabled && classes.disabled),\n    onBlur: handleBlur,\n    onClick: onClick,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onMouseDown: handleMouseDown,\n    onMouseLeave: handleMouseLeave,\n    onMouseUp: handleMouseUp,\n    onDragLeave: handleDragLeave,\n    onTouchEnd: handleTouchEnd,\n    onTouchMove: handleTouchMove,\n    onTouchStart: handleTouchStart,\n    ref: handleRef,\n    tabIndex: disabled ? -1 : tabIndex\n  }, buttonProps, other), children, !disableRipple && !disabled ? React.createElement(NoSsr, null, React.createElement(TouchRipple, _extends({\n    ref: rippleRef,\n    center: centerRipple\n  }, TouchRippleProps))) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes = {\n  /**\n   * A ref for imperative actions.\n   * It currently only supports `focusVisible()` action.\n   */\n  action: refType,\n\n  /**\n   * @ignore\n   *\n   * Use that prop to pass a ref to the native button component.\n   * @deprecated Use `ref` instead.\n   */\n  buttonRef: refType,\n\n  /**\n   * If `true`, the ripples will be centered.\n   * They won't start at the cursor interaction position.\n   */\n  centerRipple: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * If `true`, the base button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the touch ripple effect will be disabled.\n   */\n  disableTouchRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   * `disableRipple` must also be `false`.\n   */\n  focusRipple: PropTypes.bool,\n\n  /**\n   * This prop can help a person know which element has the keyboard focus.\n   * The class name will be applied when the element gain the focus through a keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onDragLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Props applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n\n  /**\n   * Used to control the button's purpose.\n   * This prop passes the value to the `type` attribute of the native button component.\n   */\n  type: PropTypes.oneOf(['submit', 'reset', 'button'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButtonBase'\n})(ButtonBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup } from 'react-transition-group';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Ripple from './Ripple';\nvar DURATION = 550;\nexport var DELAY_RIPPLE = 80;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      zIndex: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit'\n    },\n\n    /* Styles applied to the internal `Ripple` components `ripple` class. */\n    ripple: {\n      opacity: 0,\n      position: 'absolute'\n    },\n\n    /* Styles applied to the internal `Ripple` components `rippleVisible` class. */\n    rippleVisible: {\n      opacity: 0.3,\n      transform: 'scale(1)',\n      animation: \"$enter \".concat(DURATION, \"ms \").concat(theme.transitions.easing.easeInOut)\n    },\n\n    /* Styles applied to the internal `Ripple` components `ripplePulsate` class. */\n    ripplePulsate: {\n      animationDuration: \"\".concat(theme.transitions.duration.shorter, \"ms\")\n    },\n\n    /* Styles applied to the internal `Ripple` components `child` class. */\n    child: {\n      opacity: 1,\n      display: 'block',\n      width: '100%',\n      height: '100%',\n      borderRadius: '50%',\n      backgroundColor: 'currentColor'\n    },\n\n    /* Styles applied to the internal `Ripple` components `childLeaving` class. */\n    childLeaving: {\n      opacity: 0,\n      animation: \"$exit \".concat(DURATION, \"ms \").concat(theme.transitions.easing.easeInOut)\n    },\n\n    /* Styles applied to the internal `Ripple` components `childPulsate` class. */\n    childPulsate: {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      animation: \"$pulsate 2500ms \".concat(theme.transitions.easing.easeInOut, \" 200ms infinite\")\n    },\n    '@keyframes enter': {\n      '0%': {\n        transform: 'scale(0)',\n        opacity: 0.1\n      },\n      '100%': {\n        transform: 'scale(1)',\n        opacity: 0.3\n      }\n    },\n    '@keyframes exit': {\n      '0%': {\n        opacity: 1\n      },\n      '100%': {\n        opacity: 0\n      }\n    },\n    '@keyframes pulsate': {\n      '0%': {\n        transform: 'scale(1)'\n      },\n      '50%': {\n        transform: 'scale(0.92)'\n      },\n      '100%': {\n        transform: 'scale(1)'\n      }\n    }\n  };\n};\n/**\n * @ignore - internal component.\n *\n * TODO v5: Make private\n */\n\nvar TouchRipple = React.forwardRef(function TouchRipple(props, ref) {\n  var _props$center = props.center,\n      centerProp = _props$center === void 0 ? false : _props$center,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"center\", \"classes\", \"className\"]);\n\n  var _React$useState = React.useState([]),\n      ripples = _React$useState[0],\n      setRipples = _React$useState[1];\n\n  var nextKey = React.useRef(0);\n  var rippleCallback = React.useRef(null);\n  React.useEffect(function () {\n    if (rippleCallback.current) {\n      rippleCallback.current();\n      rippleCallback.current = null;\n    }\n  }, [ripples]); // Used to filter out mouse emulated events on mobile.\n\n  var ignoringMouseDown = React.useRef(false); // We use a timer in order to only show the ripples for touch \"click\" like events.\n  // We don't want to display the ripple for touch scroll events.\n\n  var startTimer = React.useRef(null); // This is the hook called once the previous timeout is ready.\n\n  var startTimerCommit = React.useRef(null);\n  var container = React.useRef(null);\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(startTimer.current);\n    };\n  }, []);\n  var startCommit = React.useCallback(function (params) {\n    var pulsate = params.pulsate,\n        rippleX = params.rippleX,\n        rippleY = params.rippleY,\n        rippleSize = params.rippleSize,\n        cb = params.cb;\n    setRipples(function (oldRipples) {\n      return [].concat(_toConsumableArray(oldRipples), [React.createElement(Ripple, {\n        key: nextKey.current,\n        classes: classes,\n        timeout: DURATION,\n        pulsate: pulsate,\n        rippleX: rippleX,\n        rippleY: rippleY,\n        rippleSize: rippleSize\n      })]);\n    });\n    nextKey.current += 1;\n    rippleCallback.current = cb;\n  }, [classes]);\n  var start = React.useCallback(function () {\n    var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var cb = arguments.length > 2 ? arguments[2] : undefined;\n    var _options$pulsate = options.pulsate,\n        pulsate = _options$pulsate === void 0 ? false : _options$pulsate,\n        _options$center = options.center,\n        center = _options$center === void 0 ? centerProp || options.pulsate : _options$center,\n        _options$fakeElement = options.fakeElement,\n        fakeElement = _options$fakeElement === void 0 ? false : _options$fakeElement;\n\n    if (event.type === 'mousedown' && ignoringMouseDown.current) {\n      ignoringMouseDown.current = false;\n      return;\n    }\n\n    if (event.type === 'touchstart') {\n      ignoringMouseDown.current = true;\n    }\n\n    var element = fakeElement ? null : container.current;\n    var rect = element ? element.getBoundingClientRect() : {\n      width: 0,\n      height: 0,\n      left: 0,\n      top: 0\n    }; // Get the size of the ripple\n\n    var rippleX;\n    var rippleY;\n    var rippleSize;\n\n    if (center || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {\n      rippleX = Math.round(rect.width / 2);\n      rippleY = Math.round(rect.height / 2);\n    } else {\n      var clientX = event.clientX ? event.clientX : event.touches[0].clientX;\n      var clientY = event.clientY ? event.clientY : event.touches[0].clientY;\n      rippleX = Math.round(clientX - rect.left);\n      rippleY = Math.round(clientY - rect.top);\n    }\n\n    if (center) {\n      rippleSize = Math.sqrt((2 * Math.pow(rect.width, 2) + Math.pow(rect.height, 2)) / 3); // For some reason the animation is broken on Mobile Chrome if the size if even.\n\n      if (rippleSize % 2 === 0) {\n        rippleSize += 1;\n      }\n    } else {\n      var sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;\n      var sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;\n      rippleSize = Math.sqrt(Math.pow(sizeX, 2) + Math.pow(sizeY, 2));\n    } // Touche devices\n\n\n    if (event.touches) {\n      // Prepare the ripple effect.\n      startTimerCommit.current = function () {\n        startCommit({\n          pulsate: pulsate,\n          rippleX: rippleX,\n          rippleY: rippleY,\n          rippleSize: rippleSize,\n          cb: cb\n        });\n      }; // Delay the execution of the ripple effect.\n\n\n      startTimer.current = setTimeout(function () {\n        if (startTimerCommit.current) {\n          startTimerCommit.current();\n          startTimerCommit.current = null;\n        }\n      }, DELAY_RIPPLE); // We have to make a tradeoff with this value.\n    } else {\n      startCommit({\n        pulsate: pulsate,\n        rippleX: rippleX,\n        rippleY: rippleY,\n        rippleSize: rippleSize,\n        cb: cb\n      });\n    }\n  }, [centerProp, startCommit]);\n  var pulsate = React.useCallback(function () {\n    start({}, {\n      pulsate: true\n    });\n  }, [start]);\n  var stop = React.useCallback(function (event, cb) {\n    clearTimeout(startTimer.current); // The touch interaction occurs too quickly.\n    // We still want to show ripple effect.\n\n    if (event.type === 'touchend' && startTimerCommit.current) {\n      event.persist();\n      startTimerCommit.current();\n      startTimerCommit.current = null;\n      startTimer.current = setTimeout(function () {\n        stop(event, cb);\n      });\n      return;\n    }\n\n    startTimerCommit.current = null;\n    setRipples(function (oldRipples) {\n      if (oldRipples.length > 0) {\n        return oldRipples.slice(1);\n      }\n\n      return oldRipples;\n    });\n    rippleCallback.current = cb;\n  }, []);\n  React.useImperativeHandle(ref, function () {\n    return {\n      pulsate: pulsate,\n      start: start,\n      stop: stop\n    };\n  }, [pulsate, start, stop]);\n  return React.createElement(\"span\", _extends({\n    className: clsx(classes.root, className),\n    ref: container\n  }, other), React.createElement(TransitionGroup, {\n    component: null,\n    exit: true\n  }, ripples));\n}); // TODO cleanup after https://github.com/reactjs/react-docgen/pull/378 is released\n\nfunction withMuiName(Component) {\n  Component.muiName = 'MuiTouchRipple';\n  return Component;\n}\n\nprocess.env.NODE_ENV !== \"production\" ? TouchRipple.propTypes = {\n  /**\n   * If `true`, the ripple starts at the center of the component\n   * rather than at the point of interaction.\n   */\n  center: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiTouchRipple'\n})(withMuiName(React.memo(TouchRipple)));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport useEventCallback from '../utils/useEventCallback';\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * @ignore - internal component.\n */\n\nfunction Ripple(props) {\n  var classes = props.classes,\n      _props$pulsate = props.pulsate,\n      pulsate = _props$pulsate === void 0 ? false : _props$pulsate,\n      rippleX = props.rippleX,\n      rippleY = props.rippleY,\n      rippleSize = props.rippleSize,\n      inProp = props.in,\n      _props$onExited = props.onExited,\n      onExited = _props$onExited === void 0 ? function () {} : _props$onExited,\n      timeout = props.timeout;\n\n  var _React$useState = React.useState(false),\n      leaving = _React$useState[0],\n      setLeaving = _React$useState[1];\n\n  var rippleClassName = clsx(classes.ripple, classes.rippleVisible, pulsate && classes.ripplePulsate);\n  var rippleStyles = {\n    width: rippleSize,\n    height: rippleSize,\n    top: -(rippleSize / 2) + rippleY,\n    left: -(rippleSize / 2) + rippleX\n  };\n  var childClassName = clsx(classes.child, leaving && classes.childLeaving, pulsate && classes.childPulsate);\n  var handleExited = useEventCallback(onExited); // Ripple is used for user feedback (e.g. click or press) so we want to apply styles with the highest priority\n\n  useEnhancedEffect(function () {\n    if (!inProp) {\n      // react-transition-group#onExit\n      setLeaving(true); // react-transition-group#onExited\n\n      var timeoutId = setTimeout(handleExited, timeout);\n      return function () {\n        clearTimeout(timeoutId);\n      };\n    }\n\n    return undefined;\n  }, [handleExited, inProp, timeout]);\n  return React.createElement(\"span\", {\n    className: rippleClassName,\n    style: rippleStyles\n  }, React.createElement(\"span\", {\n    className: childClassName\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Ripple.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.\n   */\n  pulsate: PropTypes.bool,\n\n  /**\n   * Diameter of the ripple.\n   */\n  rippleSize: PropTypes.number,\n\n  /**\n   * Horizontal position of the ripple center.\n   */\n  rippleX: PropTypes.number,\n\n  /**\n   * Vertical position of the ripple center.\n   */\n  rippleY: PropTypes.number,\n\n  /**\n   * exit delay\n   */\n  timeout: PropTypes.number.isRequired\n} : void 0;\nexport default Ripple;","export { default } from './ButtonBase';"],"sourceRoot":""}