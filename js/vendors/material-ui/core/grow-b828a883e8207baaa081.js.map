{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Grow/index.js","webpack:///./node_modules/@material-ui/core/esm/Grow/Grow.js"],"names":["getScale","value","concat","Math","pow","styles","entering","opacity","transform","entered","Grow","React","forwardRef","props","ref","children","inProp","in","onEnter","onExit","style","_props$timeout","timeout","other","timer","useRef","autoTimeout","handleRef","theme","useEffect","clearTimeout","current","createElement","Transition","appear","node","isAppearing","reflow","duration","_getTransitionProps","getTransitionProps","mode","transitionDuration","delay","transitions","getAutoHeightDuration","clientHeight","transition","create","join","_getTransitionProps2","addEndListener","_","next","setTimeout","state","childProps","cloneElement","visibility","undefined","muiSupportAuto"],"mappings":"2OAAA,iB,8GCAA,cACA,UACA,UAEA,GADA,QACA,OACA,WACA,QACA,WAEA,SAASA,EAASC,GAChB,MAAO,SAASC,OAAOD,EAAO,MAAMC,OAAOC,KAAKC,IAAIH,EAAO,GAAI,KAGjE,IAAII,EAAS,CACXC,SAAU,CACRC,QAAS,EACTC,UAAWR,EAAS,IAEtBS,QAAS,CACPF,QAAS,EACTC,UAAW,SASXE,EAAOC,UAAMC,YAAW,SAAcC,EAAOC,GAC/C,IAAIC,EAAWF,EAAME,SACjBC,EAASH,EAAMI,GACfC,EAAUL,EAAMK,QAChBC,EAASN,EAAMM,OACfC,EAAQP,EAAMO,MACdC,EAAiBR,EAAMS,QACvBA,OAA6B,IAAnBD,EAA4B,OAASA,EAC/CE,GAAQ,aAAyBV,EAAO,CAAC,WAAY,KAAM,UAAW,SAAU,QAAS,YAEzFW,EAAQb,UAAMc,SACdC,EAAcf,UAAMc,SACpBE,GAAY,aAAWZ,EAASD,IAAKA,GACrCc,GAAQ,eAiFZ,OALAjB,UAAMkB,WAAU,WACd,OAAO,WACLC,aAAaN,EAAMO,YAEpB,IACIpB,UAAMqB,cAAcC,cAAY,aAAS,CAC9CC,QAAQ,EACRjB,GAAID,EACJE,QAlFgB,SAAqBiB,EAAMC,IAC3C,IAAAC,QAAOF,GAEP,IASIG,EATAC,GAAsB,IAAAC,oBAAmB,CAC3CpB,MAAOA,EACPE,QAASA,GACR,CACDmB,KAAM,UAEJC,EAAqBH,EAAoBD,SACzCK,EAAQJ,EAAoBI,MAIhB,SAAZrB,GACFgB,EAAWV,EAAMgB,YAAYC,sBAAsBV,EAAKW,cACxDpB,EAAYK,QAAUO,GAEtBA,EAAWI,EAGbP,EAAKf,MAAM2B,WAAa,CAACnB,EAAMgB,YAAYI,OAAO,UAAW,CAC3DV,SAAUA,EACVK,MAAOA,IACLf,EAAMgB,YAAYI,OAAO,YAAa,CACxCV,SAAqB,KAAXA,EACVK,MAAOA,KACLM,KAAK,KAEL/B,GACFA,EAAQiB,EAAMC,IAqDhBjB,OAjDe,SAAoBgB,GACnC,IASIG,EATAY,GAAuB,IAAAV,oBAAmB,CAC5CpB,MAAOA,EACPE,QAASA,GACR,CACDmB,KAAM,SAEJC,EAAqBQ,EAAqBZ,SAC1CK,EAAQO,EAAqBP,MAIjB,SAAZrB,GACFgB,EAAWV,EAAMgB,YAAYC,sBAAsBV,EAAKW,cACxDpB,EAAYK,QAAUO,GAEtBA,EAAWI,EAGbP,EAAKf,MAAM2B,WAAa,CAACnB,EAAMgB,YAAYI,OAAO,UAAW,CAC3DV,SAAUA,EACVK,MAAOA,IACLf,EAAMgB,YAAYI,OAAO,YAAa,CACxCV,SAAqB,KAAXA,EACVK,MAAOA,GAAoB,KAAXL,KACdW,KAAK,KACTd,EAAKf,MAAMb,QAAU,IACrB4B,EAAKf,MAAMZ,UAAYR,EAAS,KAE5BmB,GACFA,EAAOgB,IAoBTgB,eAhBmB,SAAwBC,EAAGC,GAC9B,SAAZ/B,IACFE,EAAMO,QAAUuB,WAAWD,EAAM3B,EAAYK,SAAW,KAe1DT,QAAqB,SAAZA,EAAqB,KAAOA,GACpCC,IAAQ,SAAUgC,EAAOC,GAC1B,OAAO7C,UAAM8C,aAAa1C,GAAU,aAAS,CAC3CK,OAAO,aAAS,CACdb,QAAS,EACTC,UAAWR,EAAS,KACpB0D,WAAsB,WAAVH,GAAuBvC,OAAoB2C,EAAX,UAC3CtD,EAAOkD,GAAQ,GAAInC,EAAO,GAAIL,EAASF,MAAMO,OAChDN,IAAKa,GACJ6B,UAwCP9C,EAAKkD,gBAAiB,E,MACPlD,E","file":"js/vendors/material-ui/core/grow-b828a883e8207baaa081.js","sourcesContent":["export { default } from './Grow';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport useTheme from '../styles/useTheme';\nimport { reflow, getTransitionProps } from '../transitions/utils';\nimport useForkRef from '../utils/useForkRef';\n\nfunction getScale(value) {\n  return \"scale(\".concat(value, \", \").concat(Math.pow(value, 2), \")\");\n}\n\nvar styles = {\n  entering: {\n    opacity: 1,\n    transform: getScale(1)\n  },\n  entered: {\n    opacity: 1,\n    transform: 'none'\n  }\n};\n/**\n * The Grow transition is used by the [Tooltip](/components/tooltips/) and\n * [Popover](/components/popover/) components.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Grow = React.forwardRef(function Grow(props, ref) {\n  var children = props.children,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onExit = props.onExit,\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? 'auto' : _props$timeout,\n      other = _objectWithoutProperties(props, [\"children\", \"in\", \"onEnter\", \"onExit\", \"style\", \"timeout\"]);\n\n  var timer = React.useRef();\n  var autoTimeout = React.useRef();\n  var handleRef = useForkRef(children.ref, ref);\n  var theme = useTheme();\n\n  var handleEnter = function handleEnter(node, isAppearing) {\n    reflow(node); // So the animation always start from the start.\n\n    var _getTransitionProps = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'enter'\n    }),\n        transitionDuration = _getTransitionProps.duration,\n        delay = _getTransitionProps.delay;\n\n    var duration;\n\n    if (timeout === 'auto') {\n      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);\n      autoTimeout.current = duration;\n    } else {\n      duration = transitionDuration;\n    }\n\n    node.style.transition = [theme.transitions.create('opacity', {\n      duration: duration,\n      delay: delay\n    }), theme.transitions.create('transform', {\n      duration: duration * 0.666,\n      delay: delay\n    })].join(',');\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  var handleExit = function handleExit(node) {\n    var _getTransitionProps2 = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'exit'\n    }),\n        transitionDuration = _getTransitionProps2.duration,\n        delay = _getTransitionProps2.delay;\n\n    var duration;\n\n    if (timeout === 'auto') {\n      duration = theme.transitions.getAutoHeightDuration(node.clientHeight);\n      autoTimeout.current = duration;\n    } else {\n      duration = transitionDuration;\n    }\n\n    node.style.transition = [theme.transitions.create('opacity', {\n      duration: duration,\n      delay: delay\n    }), theme.transitions.create('transform', {\n      duration: duration * 0.666,\n      delay: delay || duration * 0.333\n    })].join(',');\n    node.style.opacity = '0';\n    node.style.transform = getScale(0.75);\n\n    if (onExit) {\n      onExit(node);\n    }\n  };\n\n  var addEndListener = function addEndListener(_, next) {\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTimeout.current || 0);\n    }\n  };\n\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  return React.createElement(Transition, _extends({\n    appear: true,\n    in: inProp,\n    onEnter: handleEnter,\n    onExit: handleExit,\n    addEndListener: addEndListener,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other), function (state, childProps) {\n    return React.cloneElement(children, _extends({\n      style: _extends({\n        opacity: 0,\n        transform: getScale(0.75),\n        visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n      }, styles[state], {}, style, {}, children.props.style),\n      ref: handleRef\n    }, childProps));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grow.propTypes = {\n  /**\n   * A single child content element.\n   */\n  children: PropTypes.element,\n\n  /**\n   * If `true`, show the component; triggers the enter or exit animation.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  }), PropTypes.oneOf(['auto'])])\n} : void 0;\nGrow.muiSupportAuto = true;\nexport default Grow;"],"sourceRoot":""}