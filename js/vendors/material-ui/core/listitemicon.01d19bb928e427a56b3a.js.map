{"version":3,"sources":["webpack://material-ui-chameleon-docs/./node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js"],"names":[],"mappings":"+NAOW,EAAS,SAAgB,EAAO,CACzC,MAAO,CAEL,KAAM,CACJ,SAAU,GACV,MAAO,EAAM,QAAQ,OAAO,OAC5B,WAAY,EACZ,QAAS,eAIX,oBAAqB,CACnB,UAAW,KAQb,EAA4B,aAAiB,SAAsB,EAAO,EAAK,CACjF,GAAI,GAAU,EAAM,QAChB,EAAY,EAAM,UAClB,EAAQ,QAAyB,EAAO,CAAC,UAAW,cAEpD,EAAU,aAAiB,KAC/B,MAAoB,iBAAoB,MAAO,QAAS,CACtD,UAAW,cAAK,EAAQ,KAAM,EAAW,EAAQ,aAAe,cAAgB,EAAQ,qBACxF,OACC,MAyBL,QAAe,QAAW,EAAQ,CAChC,KAAM,oBACL","file":"js/vendors/material-ui/core/listitemicon.01d19bb928e427a56b3a.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\r\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\r\n */\n\nvar ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component, normally `Icon`, `SvgIcon`,\r\n   * or a `@material-ui/icons` SVG icon element.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);"],"sourceRoot":""}