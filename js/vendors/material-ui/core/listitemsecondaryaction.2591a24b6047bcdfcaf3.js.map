{"version":3,"sources":["webpack://material-ui-chameleon-docs/./node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js"],"names":[],"mappings":"oNAMW,EAAS,CAElB,KAAM,CACJ,SAAU,WACV,MAAO,GACP,IAAK,MACL,UAAW,qBAOX,EAAuC,aAAiB,SAAiC,EAAO,EAAK,CACvG,GAAI,GAAU,EAAM,QAChB,EAAY,EAAM,UAClB,EAAQ,QAAyB,EAAO,CAAC,UAAW,cAExD,MAAoB,iBAAoB,MAAO,QAAS,CACtD,UAAW,cAAK,EAAQ,KAAM,GAC9B,OACC,MAwBL,EAAwB,QAAU,0BAClC,QAAe,QAAW,EAAQ,CAChC,KAAM,+BACL","file":"js/vendors/material-ui/core/listitemsecondaryaction.2591a24b6047bcdfcaf3.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = /*#__PURE__*/React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);"],"sourceRoot":""}