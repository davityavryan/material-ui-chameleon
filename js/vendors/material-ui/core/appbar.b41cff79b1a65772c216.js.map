{"version":3,"sources":["webpack://material-ui-chameleon-docs/./node_modules/@material-ui/core/esm/AppBar/AppBar.js"],"names":[],"mappings":"yOAQW,EAAS,SAAgB,EAAO,CACzC,GAAI,GAAyB,EAAM,QAAQ,OAAS,QAAU,EAAM,QAAQ,KAAK,KAAO,EAAM,QAAQ,KAAK,KAC3G,MAAO,CAEL,KAAM,CACJ,QAAS,OACT,cAAe,SACf,MAAO,OACP,UAAW,aAEX,OAAQ,EAAM,OAAO,OACrB,WAAY,GAId,cAAe,CACb,SAAU,QACV,IAAK,EACL,KAAM,OACN,MAAO,EACP,eAAgB,CAEd,SAAU,aAKd,iBAAkB,CAChB,SAAU,WACV,IAAK,EACL,KAAM,OACN,MAAO,GAIT,eAAgB,CAEd,SAAU,SACV,IAAK,EACL,KAAM,OACN,MAAO,GAIT,eAAgB,CACd,SAAU,UAIZ,iBAAkB,CAChB,SAAU,YAIZ,aAAc,CACZ,gBAAiB,EACjB,MAAO,EAAM,QAAQ,gBAAgB,IAIvC,aAAc,CACZ,gBAAiB,EAAM,QAAQ,QAAQ,KACvC,MAAO,EAAM,QAAQ,QAAQ,cAI/B,eAAgB,CACd,gBAAiB,EAAM,QAAQ,UAAU,KACzC,MAAO,EAAM,QAAQ,UAAU,cAIjC,aAAc,CACZ,MAAO,WAIT,iBAAkB,CAChB,gBAAiB,cACjB,MAAO,aAIT,EAAsB,aAAiB,SAAgB,EAAO,EAAK,CACrE,GAAI,GAAU,EAAM,QAChB,EAAY,EAAM,UAClB,EAAe,EAAM,MACrB,EAAQ,IAAiB,OAAS,UAAY,EAC9C,EAAkB,EAAM,SACxB,EAAW,IAAoB,OAAS,QAAU,EAClD,EAAQ,QAAyB,EAAO,CAAC,UAAW,YAAa,QAAS,aAE9E,MAAoB,iBAAoB,IAAO,QAAS,CACtD,OAAQ,GACR,UAAW,SACX,UAAW,EACX,UAAW,QAAK,EAAQ,KAAM,EAAQ,WAAW,OAAO,QAAW,KAAa,EAAQ,QAAQ,OAAO,QAAW,KAAU,EAAW,IAAa,SAAW,aAC/J,OACC,MAoCL,QAAe,QAAW,EAAQ,CAChC,KAAM,cACL","file":"js/vendors/material-ui/core/appbar.b41cff79b1a65772c216.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Paper from '../Paper';\nexport var styles = function styles(theme) {\n  var backgroundColorDefault = theme.palette.type === 'light' ? theme.palette.grey[100] : theme.palette.grey[900];\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%',\n      boxSizing: 'border-box',\n      // Prevent padding issue with the Modal and fixed positioned AppBar.\n      zIndex: theme.zIndex.appBar,\n      flexShrink: 0\n    },\n\n    /* Styles applied to the root element if `position=\"fixed\"`. */\n    positionFixed: {\n      position: 'fixed',\n      top: 0,\n      left: 'auto',\n      right: 0,\n      '@media print': {\n        // Prevent the app bar to be visible on each printed page.\n        position: 'absolute'\n      }\n    },\n\n    /* Styles applied to the root element if `position=\"absolute\"`. */\n    positionAbsolute: {\n      position: 'absolute',\n      top: 0,\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the root element if `position=\"sticky\"`. */\n    positionSticky: {\n      // ⚠️ sticky is not supported by IE 11.\n      position: 'sticky',\n      top: 0,\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the root element if `position=\"static\"`. */\n    positionStatic: {\n      position: 'static'\n    },\n\n    /* Styles applied to the root element if `position=\"relative\"`. */\n    positionRelative: {\n      position: 'relative'\n    },\n\n    /* Styles applied to the root element if `color=\"default\"`. */\n    colorDefault: {\n      backgroundColor: backgroundColorDefault,\n      color: theme.palette.getContrastText(backgroundColorDefault)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"transparent\"`. */\n    colorTransparent: {\n      backgroundColor: 'transparent',\n      color: 'inherit'\n    }\n  };\n};\nvar AppBar = /*#__PURE__*/React.forwardRef(function AppBar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$position = props.position,\n      position = _props$position === void 0 ? 'fixed' : _props$position,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"position\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    square: true,\n    component: \"header\",\n    elevation: 4,\n    className: clsx(classes.root, classes[\"position\".concat(capitalize(position))], classes[\"color\".concat(capitalize(color))], className, position === 'fixed' && 'mui-fixed'),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AppBar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary', 'transparent']),\n\n  /**\n   * The positioning type. The behavior of the different options is described\n   * [in the MDN web docs](https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning).\n   * Note: `sticky` is not universally supported and will fall back to `static` when unavailable.\n   */\n  position: PropTypes.oneOf(['absolute', 'fixed', 'relative', 'static', 'sticky'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAppBar'\n})(AppBar);"],"sourceRoot":""}