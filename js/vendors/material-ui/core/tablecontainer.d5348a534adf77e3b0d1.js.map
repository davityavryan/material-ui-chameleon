{"version":3,"sources":["webpack://material-ui-chameleon-docs/./node_modules/@material-ui/core/esm/TableContainer/TableContainer.js"],"names":[],"mappings":"oNAMW,EAAS,CAElB,KAAM,CACJ,MAAO,OACP,UAAW,SAGX,EAA8B,aAAiB,SAAwB,EAAO,EAAK,CACrF,GAAI,GAAU,EAAM,QAChB,EAAY,EAAM,UAClB,EAAmB,EAAM,UACzB,EAAY,IAAqB,OAAS,MAAQ,EAClD,EAAQ,QAAyB,EAAO,CAAC,UAAW,YAAa,cAErE,MAAoB,iBAAoB,EAAW,QAAS,CAC1D,MACA,UAAW,cAAK,EAAQ,KAAM,IAC7B,MA2BL,QAAe,QAAW,EAAQ,CAChC,KAAM,sBACL","file":"js/vendors/material-ui/core/tablecontainer.d5348a534adf77e3b0d1.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    width: '100%',\n    overflowX: 'auto'\n  }\n};\nvar TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes = {\n  /**\n   * The table itself, normally `<Table />`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableContainer'\n})(TableContainer);"],"sourceRoot":""}