{"version":3,"sources":["webpack://material-ui-chameleon-docs/./node_modules/@material-ui/core/esm/Slide/Slide.js"],"names":[],"mappings":"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","file":"js/vendors/material-ui/core/slide.6e787c05414179a7948b.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport debounce from '../utils/debounce';\nimport { Transition } from 'react-transition-group';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport useForkRef from '../utils/useForkRef';\nimport useTheme from '../styles/useTheme';\nimport { duration } from '../styles/transitions';\nimport { reflow, getTransitionProps } from '../transitions/utils'; // Translate the node so he can't be seen on the screen.\n// Later, we gonna translate back the node to his original location\n// with `none`.`\n\nfunction getTranslateValue(direction, node) {\n  var rect = node.getBoundingClientRect();\n  var transform;\n\n  if (node.fakeTransform) {\n    transform = node.fakeTransform;\n  } else {\n    var computedStyle = window.getComputedStyle(node);\n    transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');\n  }\n\n  var offsetX = 0;\n  var offsetY = 0;\n\n  if (transform && transform !== 'none' && typeof transform === 'string') {\n    var transformValues = transform.split('(')[1].split(')')[0].split(',');\n    offsetX = parseInt(transformValues[4], 10);\n    offsetY = parseInt(transformValues[5], 10);\n  }\n\n  if (direction === 'left') {\n    return \"translateX(\".concat(window.innerWidth, \"px) translateX(\").concat(offsetX - rect.left, \"px)\");\n  }\n\n  if (direction === 'right') {\n    return \"translateX(-\".concat(rect.left + rect.width - offsetX, \"px)\");\n  }\n\n  if (direction === 'up') {\n    return \"translateY(\".concat(window.innerHeight, \"px) translateY(\").concat(offsetY - rect.top, \"px)\");\n  } // direction === 'down'\n\n\n  return \"translateY(-\".concat(rect.top + rect.height - offsetY, \"px)\");\n}\n\nexport function setTranslateValue(direction, node) {\n  var transform = getTranslateValue(direction, node);\n\n  if (transform) {\n    node.style.webkitTransform = transform;\n    node.style.transform = transform;\n  }\n}\nvar defaultTimeout = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\r\n * The Slide transition is used by the [Drawer](/components/drawers/) component.\r\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\r\n */\n\nvar Slide = /*#__PURE__*/React.forwardRef(function Slide(props, ref) {\n  var children = props.children,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'down' : _props$direction,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? defaultTimeout : _props$timeout,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Transition : _props$TransitionComp,\n      other = _objectWithoutProperties(props, [\"children\", \"direction\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  var theme = useTheme();\n  var childrenRef = React.useRef(null);\n  /**\r\n   * used in cloneElement(children, { ref: handleRef })\r\n   */\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    childrenRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRefIntermediary = useForkRef(children.ref, handleOwnRef);\n  var handleRef = useForkRef(handleRefIntermediary, ref);\n\n  var normalizedTransitionCallback = function normalizedTransitionCallback(callback) {\n    return function (isAppearing) {\n      if (callback) {\n        // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n        if (isAppearing === undefined) {\n          callback(childrenRef.current);\n        } else {\n          callback(childrenRef.current, isAppearing);\n        }\n      }\n    };\n  };\n\n  var handleEnter = normalizedTransitionCallback(function (node, isAppearing) {\n    setTranslateValue(direction, node);\n    reflow(node);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  var handleEntering = normalizedTransitionCallback(function (node, isAppearing) {\n    var transitionProps = getTransitionProps({\n      timeout: timeout,\n      style: style\n    }, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.easeOut\n    }));\n    node.style.transition = theme.transitions.create('transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.easeOut\n    }));\n    node.style.webkitTransform = 'none';\n    node.style.transform = 'none';\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  var handleEntered = normalizedTransitionCallback(onEntered);\n  var handleExiting = normalizedTransitionCallback(onExiting);\n  var handleExit = normalizedTransitionCallback(function (node) {\n    var transitionProps = getTransitionProps({\n      timeout: timeout,\n      style: style\n    }, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.sharp\n    }));\n    node.style.transition = theme.transitions.create('transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.sharp\n    }));\n    setTranslateValue(direction, node);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  var handleExited = normalizedTransitionCallback(function (node) {\n    // No need for transitions when the component is hidden\n    node.style.webkitTransition = '';\n    node.style.transition = '';\n\n    if (onExited) {\n      onExited(node);\n    }\n  });\n  var updatePosition = React.useCallback(function () {\n    if (childrenRef.current) {\n      setTranslateValue(direction, childrenRef.current);\n    }\n  }, [direction]);\n  React.useEffect(function () {\n    // Skip configuration where the position is screen size invariant.\n    if (inProp || direction === 'down' || direction === 'right') {\n      return undefined;\n    }\n\n    var handleResize = debounce(function () {\n      if (childrenRef.current) {\n        setTranslateValue(direction, childrenRef.current);\n      }\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [direction, inProp]);\n  React.useEffect(function () {\n    if (!inProp) {\n      // We need to update the position of the drawer when the direction change and\n      // when it's hidden.\n      updatePosition();\n    }\n  }, [inProp, updatePosition]);\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    nodeRef: childrenRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    appear: true,\n    in: inProp,\n    timeout: timeout\n  }, other), function (state, childProps) {\n    return /*#__PURE__*/React.cloneElement(children, _extends({\n      ref: handleRef,\n      style: _extends({\n        visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n      }, style, children.props.style)\n    }, childProps));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Slide.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * A single child content element.\r\n   */\n  children: elementAcceptingRef,\n\n  /**\r\n   * Direction the child node will enter from.\r\n   */\n  direction: PropTypes.oneOf(['down', 'left', 'right', 'up']),\n\n  /**\r\n   * If `true`, show the component; triggers the enter or exit animation.\r\n   */\n  in: PropTypes.bool,\n\n  /**\r\n   * @ignore\r\n   */\n  onEnter: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onEntered: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onEntering: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onExit: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onExited: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onExiting: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  style: PropTypes.object,\n\n  /**\r\n   * The duration for the transition, in milliseconds.\r\n   * You may specify a single timeout for all transitions, or individually with an object.\r\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default Slide;"],"sourceRoot":""}