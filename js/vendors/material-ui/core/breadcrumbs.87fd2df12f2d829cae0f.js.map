{"version":3,"sources":["webpack://material-ui-chameleon-docs/./node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","webpack://material-ui-chameleon-docs/./node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js"],"names":[],"mappings":"0QASI,EAAS,SAAgB,EAAO,CAClC,MAAO,CACL,KAAM,CACJ,QAAS,OACT,WAAY,EAAM,QAAQ,IAC1B,YAAa,EAAM,QAAQ,IAC3B,gBAAiB,EAAM,QAAQ,KAAK,KACpC,MAAO,EAAM,QAAQ,KAAK,KAC1B,aAAc,EACd,OAAQ,UACR,mBAAoB,CAClB,gBAAiB,EAAM,QAAQ,KAAK,MAEtC,WAAY,CACV,UAAW,EAAM,QAAQ,GACzB,gBAAiB,SAAU,EAAM,QAAQ,KAAK,KAAM,OAGxD,KAAM,CACJ,MAAO,GACP,OAAQ,MASd,WAA6B,EAAO,CAClC,GAAI,GAAU,EAAM,QAChB,EAAQ,QAAyB,EAAO,CAAC,YAE7C,MAAoB,iBAAoB,IAAY,QAAS,CAC3D,UAAW,KACX,UAAW,EAAQ,KACnB,YAAa,IACZ,GAAqB,gBAAoB,IAAe,CACzD,UAAW,EAAQ,QAUvB,QAAe,QAAW,EAAQ,CAChC,KAAM,+BACL,GCjDI,GAAI,GAAS,CAElB,KAAM,GAGN,GAAI,CACF,QAAS,OACT,SAAU,OACV,WAAY,SACZ,QAAS,EACT,OAAQ,EACR,UAAW,QAIb,GAAI,GAGJ,UAAW,CACT,QAAS,OACT,WAAY,OACZ,WAAY,EACZ,YAAa,IAIjB,WAA0B,EAAO,EAAW,EAAW,CACrD,MAAO,GAAM,OAAO,SAAU,EAAK,EAAS,EAAO,CACjD,MAAI,GAAQ,EAAM,OAAS,EACzB,EAAM,EAAI,OAAO,EAAsB,gBAAoB,KAAM,CAC/D,cAAe,GACf,IAAK,aAAa,OAAO,GACzB,aACC,IAEH,EAAI,KAAK,GAGJ,GACN,IAGL,GAAI,GAA2B,aAAiB,SAAqB,EAAO,EAAK,CAC/E,GAAI,GAAW,EAAM,SACjB,EAAU,EAAM,QAChB,EAAY,EAAM,UAClB,EAAmB,EAAM,UACzB,EAAY,IAAqB,OAAS,MAAQ,EAClD,EAAoB,EAAM,WAC1B,EAAa,IAAsB,OAAS,YAAc,EAC1D,EAAwB,EAAM,mBAC9B,EAAqB,IAA0B,OAAS,EAAI,EAC5D,EAAwB,EAAM,oBAC9B,EAAsB,IAA0B,OAAS,EAAI,EAC7D,EAAkB,EAAM,SACxB,EAAW,IAAoB,OAAS,EAAI,EAC5C,EAAmB,EAAM,UACzB,EAAY,IAAqB,OAAS,IAAM,EAChD,EAAQ,QAAyB,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,aAAc,qBAAsB,sBAAuB,WAAY,cAEjK,EAAkB,WAAe,IACjC,EAAW,EAAgB,GAC3B,EAAc,EAAgB,GAE9B,EAA4B,SAAmC,EAAU,CAC3E,GAAI,GAAoB,SAA2B,EAAO,CACxD,EAAY,IAGZ,GAAI,GAAY,EAAM,cAAc,WAAW,cAAc,6BAEzD,GACF,EAAU,SAMd,MAAI,GAAsB,GAAsB,EAAS,OAKhD,EAGF,GAAG,OAAO,QAAmB,EAAS,MAAM,EAAG,IAAuB,CAAc,gBAAoB,EAAqB,CAClI,aAAc,EACd,IAAK,WACL,QAAS,KACN,QAAmB,EAAS,MAAM,EAAS,OAAS,EAAoB,EAAS,WAGpF,EAAW,mBAAuB,GAAU,OAAO,SAAU,EAAO,CAOtE,MAAoB,kBAAqB,KACxC,IAAI,SAAU,EAAO,EAAO,CAC7B,MAAoB,iBAAoB,KAAM,CAC5C,UAAW,EAAQ,GACnB,IAAK,SAAS,OAAO,IACpB,KAEL,MAAoB,iBAAoB,IAAY,QAAS,CAC3D,MACA,UAAW,EACX,MAAO,gBACP,UAAW,cAAK,EAAQ,KAAM,IAC7B,GAAqB,gBAAoB,KAAM,CAChD,UAAW,EAAQ,IAClB,EAAiB,GAAY,GAAY,EAAS,QAAU,EAAW,EAAW,EAA0B,GAAW,EAAQ,UAAW,OA6D/I,QAAe,QAAW,EAAQ,CAChC,KAAM,mBACL","file":"js/vendors/material-ui/core/breadcrumbs.87fd2df12f2d829cae0f.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);"],"sourceRoot":""}