{"version":3,"sources":["webpack://material-ui-chameleon-docs/./node_modules/@material-ui/core/esm/Switch/Switch.js"],"names":[],"mappings":"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","file":"js/vendors/material-ui/core/switch.29c5457f722558607169.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);"],"sourceRoot":""}