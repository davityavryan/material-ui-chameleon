{"version":3,"sources":["webpack:///./node_modules/jss-plugin-global/dist/jss-plugin-global.esm.js"],"names":["at","GlobalContainerRule","key","styles","options","selector","this","type","rules","isProcessed","RuleList","_extends","parent","add","process","_proto","prototype","getRule","name","get","addRule","style","rule","jss","plugins","onProcessRule","indexOf","toString","GlobalPrefixedRule","substr","length","createRule","separatorRegExp","addScope","scope","parts","split","scoped","i","trim","jssGlobal","onCreateRule","sheet","handleNestedGlobalContainerRule","prop","handlePrefixedGlobalRule"],"mappings":"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","file":"js/vendors/jss-plugin-global.2d52ab34f2b059865490.js","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport { RuleList } from 'jss';\n\nvar at = '@global';\nvar atPrefix = '@global ';\n\nvar GlobalContainerRule =\n/*#__PURE__*/\nfunction () {\n  function GlobalContainerRule(key, styles, options) {\n    this.type = 'global';\n    this.at = at;\n    this.rules = void 0;\n    this.options = void 0;\n    this.key = void 0;\n    this.isProcessed = false;\n    this.key = key;\n    this.options = options;\n    this.rules = new RuleList(_extends({}, options, {\n      parent: this\n    }));\n\n    for (var selector in styles) {\n      this.rules.add(selector, styles[selector]);\n    }\n\n    this.rules.process();\n  }\n  /**\n   * Get a rule.\n   */\n\n\n  var _proto = GlobalContainerRule.prototype;\n\n  _proto.getRule = function getRule(name) {\n    return this.rules.get(name);\n  }\n  /**\n   * Create and register rule, run plugins.\n   */\n  ;\n\n  _proto.addRule = function addRule(name, style, options) {\n    var rule = this.rules.add(name, style, options);\n    this.options.jss.plugins.onProcessRule(rule);\n    return rule;\n  }\n  /**\n   * Get index of a rule.\n   */\n  ;\n\n  _proto.indexOf = function indexOf(rule) {\n    return this.rules.indexOf(rule);\n  }\n  /**\n   * Generates a CSS string.\n   */\n  ;\n\n  _proto.toString = function toString() {\n    return this.rules.toString();\n  };\n\n  return GlobalContainerRule;\n}();\n\nvar GlobalPrefixedRule =\n/*#__PURE__*/\nfunction () {\n  function GlobalPrefixedRule(key, style, options) {\n    this.type = 'global';\n    this.at = at;\n    this.options = void 0;\n    this.rule = void 0;\n    this.isProcessed = false;\n    this.key = void 0;\n    this.key = key;\n    this.options = options;\n    var selector = key.substr(atPrefix.length);\n    this.rule = options.jss.createRule(selector, style, _extends({}, options, {\n      parent: this\n    }));\n  }\n\n  var _proto2 = GlobalPrefixedRule.prototype;\n\n  _proto2.toString = function toString(options) {\n    return this.rule ? this.rule.toString(options) : '';\n  };\n\n  return GlobalPrefixedRule;\n}();\n\nvar separatorRegExp = /\\s*,\\s*/g;\n\nfunction addScope(selector, scope) {\n  var parts = selector.split(separatorRegExp);\n  var scoped = '';\n\n  for (var i = 0; i < parts.length; i++) {\n    scoped += scope + \" \" + parts[i].trim();\n    if (parts[i + 1]) scoped += ', ';\n  }\n\n  return scoped;\n}\n\nfunction handleNestedGlobalContainerRule(rule) {\n  var options = rule.options,\n      style = rule.style;\n  var rules = style ? style[at] : null;\n  if (!rules) return;\n\n  for (var name in rules) {\n    options.sheet.addRule(name, rules[name], _extends({}, options, {\n      selector: addScope(name, rule.selector)\n    }));\n  }\n\n  delete style[at];\n}\n\nfunction handlePrefixedGlobalRule(rule) {\n  var options = rule.options,\n      style = rule.style;\n\n  for (var prop in style) {\n    if (prop[0] !== '@' || prop.substr(0, at.length) !== at) continue;\n    var selector = addScope(prop.substr(at.length), rule.selector);\n    options.sheet.addRule(selector, style[prop], _extends({}, options, {\n      selector: selector\n    }));\n    delete style[prop];\n  }\n}\n/**\n * Convert nested rules to separate, remove them from original styles.\n *\n * @param {Rule} rule\n * @api public\n */\n\n\nfunction jssGlobal() {\n  function onCreateRule(name, styles, options) {\n    if (!name) return null;\n\n    if (name === at) {\n      return new GlobalContainerRule(name, styles, options);\n    }\n\n    if (name[0] === '@' && name.substr(0, atPrefix.length) === atPrefix) {\n      return new GlobalPrefixedRule(name, styles, options);\n    }\n\n    var parent = options.parent;\n\n    if (parent) {\n      if (parent.type === 'global' || parent.options.parent && parent.options.parent.type === 'global') {\n        options.scoped = false;\n      }\n    }\n\n    if (options.scoped === false) {\n      options.selector = name;\n    }\n\n    return null;\n  }\n\n  function onProcessRule(rule) {\n    if (rule.type !== 'style') return;\n    handleNestedGlobalContainerRule(rule);\n    handlePrefixedGlobalRule(rule);\n  }\n\n  return {\n    onCreateRule: onCreateRule,\n    onProcessRule: onProcessRule\n  };\n}\n\nexport default jssGlobal;\n"],"sourceRoot":""}