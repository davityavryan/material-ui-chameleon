{"version":3,"sources":["webpack://material-ui-chameleon-gh-pages/./node_modules/history/esm/history.js"],"names":[],"mappings":"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","file":"js/vendors/history.5bb59d22b9f1aa568413.js","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport resolvePathname from 'resolve-pathname';\nimport valueEqual from 'value-equal';\nimport warning from 'tiny-warning';\nimport invariant from 'tiny-invariant';\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n}\nfunction stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n}\nfunction hasBasename(path, prefix) {\n  return path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && '/?#'.indexOf(path.charAt(prefix.length)) !== -1;\n}\nfunction stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n}\nfunction stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n}\nfunction parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n  var hashIndex = pathname.indexOf('#');\n\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n}\nfunction createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n  var path = pathname || '/';\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : \"?\" + search;\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : \"#\" + hash;\n  return path;\n}\n\nfunction createLocation(path, state, key, currentLocation) {\n  var location;\n\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  try {\n    location.pathname = decodeURI(location.pathname);\n  } catch (e) {\n    if (e instanceof URIError) {\n      throw new URIError('Pathname \"' + location.pathname + '\" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');\n    } else {\n      throw e;\n    }\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  return location;\n}\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);\n}\n\nfunction createTransitionManager() {\n  var prompt = null;\n\n  function setPrompt(nextPrompt) {\n    process.env.NODE_ENV !== \"production\" ? warning(prompt == null, 'A history supports only one prompt at a time') : void 0;\n    prompt = nextPrompt;\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  }\n\n  function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : void 0;\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  }\n\n  var listeners = [];\n\n  function appendListener(fn) {\n    var isActive = true;\n\n    function listener() {\n      if (isActive) fn.apply(void 0, arguments);\n    }\n\n    listeners.push(listener);\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function notifyListeners() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(void 0, args);\n    });\n  }\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction getConfirmation(message, callback) {\n  callback(window.confirm(message)); // eslint-disable-line no-alert\n}\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = window.navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n  return window.history && 'pushState' in window.history;\n}\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\n\nfunction supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n}\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n}\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\n\nfunction isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n}\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nfunction getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n}\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\n\n\nfunction createBrowserHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Browser history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canUseHistory = supportsHistory();\n  var needsHashChangeListener = !supportsPopStateOnHashChange();\n  var _props = props,\n      _props$forceRefresh = _props.forceRefresh,\n      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var path = pathname + search + hash;\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path, state, key);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if (isExtraneousPopstateEvent(event)) return;\n    handlePop(getDOMLocation(event.state));\n  }\n\n  function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  }\n\n  var forceNextPop = false;\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in sessionStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  }\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key]; // Public interface\n\n  function createHref(location) {\n    return basename + createPath(location);\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.pushState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex + 1);\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : void 0;\n        window.location.href = href;\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.replaceState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : void 0;\n        window.location.replace(href);\n      }\n    });\n  }\n\n  function go(n) {\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nvar HashChangeEvent$1 = 'hashchange';\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\n\nfunction stripHash(url) {\n  var hashIndex = url.indexOf('#');\n  return hashIndex === -1 ? url : url.slice(0, hashIndex);\n}\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n}\n\nfunction pushHashPath(path) {\n  window.location.hash = path;\n}\n\nfunction replaceHashPath(path) {\n  window.location.replace(stripHash(window.location.href) + '#' + path);\n}\n\nfunction createHashHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Hash history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n  var _props = props,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$hashType = _props.hashType,\n      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n  function getDOMLocation() {\n    var path = decodePath(getHashPath());\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  function locationsAreEqual$$1(a, b) {\n    return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash;\n  }\n\n  function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n      if (!forceNextPop && locationsAreEqual$$1(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n      handlePop(location);\n    }\n  }\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(createPath(toLocation));\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  } // Ensure the hash is encoded properly before doing anything else.\n\n\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n  var initialLocation = getDOMLocation();\n  var allPaths = [createPath(initialLocation)]; // Public interface\n\n  function createHref(location) {\n    var baseTag = document.querySelector('base');\n    var href = '';\n\n    if (baseTag && baseTag.getAttribute('href')) {\n      href = stripHash(window.location.href);\n    }\n\n    return href + '#' + encodePath(basename + createPath(location));\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot push state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n        var prevIndex = allPaths.lastIndexOf(createPath(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex + 1);\n        nextPaths.push(path);\n        allPaths = nextPaths;\n        setState({\n          action: action,\n          location: location\n        });\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : void 0;\n        setState();\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot replace state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(createPath(history.location));\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    process.env.NODE_ENV !== \"production\" ? warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(HashChangeEvent$1, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(HashChangeEvent$1, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n/**\n * Creates a history object that stores locations in memory.\n */\n\n\nfunction createMemoryHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      getUserConfirmation = _props.getUserConfirmation,\n      _props$initialEntries = _props.initialEntries,\n      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,\n      _props$initialIndex = _props.initialIndex,\n      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = history.entries.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());\n  }); // Public interface\n\n  var createHref = createPath;\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n      var nextEntries = history.entries.slice(0);\n\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      history.entries[history.index] = location;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  }\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    return transitionManager.setPrompt(prompt);\n  }\n\n  function listen(listener) {\n    return transitionManager.appendListener(listener);\n  }\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nexport { createBrowserHistory, createHashHistory, createMemoryHistory, createLocation, locationsAreEqual, parsePath, createPath };\n"],"sourceRoot":""}