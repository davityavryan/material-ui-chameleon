{"version":3,"sources":["webpack://material-ui-chameleon-docs/./node_modules/rifm/dist/rifm.esm.js"],"names":[],"mappings":"mLAGI,EAEJ,SAAU,EAAkB,CAC1B,QAAe,EAAM,GAErB,WAAc,EAAO,CACnB,GAAI,GAEJ,SAAQ,EAAiB,KAAK,KAAM,IAAU,KAC9C,EAAM,OAAS,KACf,EAAM,KAAO,GAEb,EAAM,cAAgB,SAAU,EAAK,CASnC,GAAI,GAAa,EAAM,MAAM,MACzB,EAAQ,EAAI,OAAO,MACnB,EAAQ,EAAI,OACZ,EAAK,EAAM,OAAS,EAAW,OAC/B,EAAM,EAAM,KAEZ,EAAO,IAAe,EAAM,MAAM,OAAO,GAE7C,EAAM,SAAS,CACb,QACA,MAAO,IACN,UAAY,CACb,GAAI,GAAiB,EAAM,eACvB,EAAS,EAAM,MAAM,QAAU,UAC/B,EAAS,EAAM,OAAO,EAAG,GAAgB,QAAQ,EAAQ,IAS7D,GARA,EAAM,OAAS,CACb,QACA,SACA,KACA,GAAI,GAAO,EACX,OAGE,EAAM,MAAM,SAAW,EAAM,MAAM,QAAQ,IAAe,GAAM,CAAC,EAAM,CAGzE,OAFI,GAAQ,GAEH,EAAI,EAAG,IAAM,EAAO,OAAQ,EAAE,EACrC,EAAQ,KAAK,IAAI,EAAO,EAAM,cAAc,QAAQ,EAAO,GAAG,cAAe,EAAQ,IAGvF,GAAI,GAAI,EAAM,OAAO,EAAQ,GAAG,QAAQ,EAAQ,IAAI,GACpD,EAAQ,EAAM,QAAQ,EAAG,EAAQ,GACjC,EAAQ,GAAK,EAAM,OAAO,EAAG,GAAS,EAAM,OAAO,EAAQ,GAG7D,GAAI,GAAK,EAAM,MAAM,OAAO,GAExB,IAAe,EACjB,EAAM,SAAS,CACb,UAGF,EAAM,MAAM,SAAS,MAK3B,EAAM,KAAO,SAAU,EAAK,CACtB,EAAI,OAAS,UACf,GAAM,KAAO,KAIjB,EAAM,KAAO,SAAU,EAAK,CACtB,EAAI,OAAS,UACf,GAAM,KAAO,KAIjB,EAAM,MAAQ,CACZ,MAAO,EAAM,MACb,MAAO,IAEF,EAGT,EAAK,yBAA2B,SAAkC,EAAO,EAAO,CAC9E,MAAO,CACL,MAAO,EAAM,MAAQ,EAAM,MAAQ,EAAM,MACzC,MAAO,KAIX,GAAI,GAAS,EAAK,UAElB,SAAO,OAAS,UAAkB,CAChC,GAAI,GAAgB,KAAK,cACrB,EAAQ,KAAK,MAAM,MACnB,EAAW,KAAK,MAAM,SAC1B,MAAO,GAAS,CACd,QACA,SAAU,KAKd,EAAO,qBAAuB,UAAgC,CAC5D,SAAS,oBAAoB,UAAW,KAAK,MAC7C,SAAS,oBAAoB,QAAS,KAAK,OAI7C,EAAO,kBAAoB,UAA6B,CACtD,SAAS,iBAAiB,UAAW,KAAK,MAC1C,SAAS,iBAAiB,QAAS,KAAK,OAG1C,EAAO,mBAAqB,UAA8B,CACxD,GAAI,GAAS,KAAK,OAElB,GAAI,EAAQ,CAIV,OAHI,GAAQ,KAAK,MAAM,MACnB,EAAQ,GAEH,EAAI,EAAG,IAAM,EAAO,OAAO,OAAQ,EAAE,EAC5C,EAAQ,KAAK,IAAI,EAAO,EAAM,cAAc,QAAQ,EAAO,OAAO,GAAG,cAAe,EAAQ,IAI9F,GAAI,KAAK,MAAM,SAAY,GAAO,IAAM,EAAO,KAAO,CAAC,EAAO,IAC5D,KAAO,EAAM,EAAQ,IAAO,MAAK,MAAM,QAAU,UAAU,KAAK,EAAM,EAAQ,KAC5E,GAAS,EAIb,EAAO,MAAM,eAAiB,EAAO,MAAM,aAAe,EAAQ,EAAK,GAAO,GAAK,EAAI,GAGzF,KAAK,OAAS,MAGT,GACP","file":"js/vendors/rifm.556fb584ebe566f8ea9c.js","sourcesContent":["import _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport { Component } from 'react';\n\nvar Rifm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Rifm, _React$Component);\n\n  function Rifm(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this._state = null;\n    _this._del = false;\n\n    _this._handleChange = function (evt) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (evt.target.type === 'number') {\n          console.error('Rifm does not support input type=number, use type=tel instead.');\n          return;\n        }\n      } // FUTURE: use evt.nativeEvent.inputType for del event, see comments at onkeydown\n\n\n      var stateValue = _this.state.value;\n      var value = evt.target.value;\n      var input = evt.target;\n      var op = value.length > stateValue.length;\n      var del = _this._del;\n\n      var noOp = stateValue === _this.props.format(value);\n\n      _this.setState({\n        value: value,\n        local: true\n      }, function () {\n        var selectionStart = input.selectionStart;\n        var refuse = _this.props.refuse || /[^\\d]+/g;\n        var before = value.substr(0, selectionStart).replace(refuse, '');\n        _this._state = {\n          input: input,\n          before: before,\n          op: op,\n          di: del && noOp,\n          del: del\n        };\n\n        if (_this.props.replace && _this.props.replace(stateValue) && op && !noOp) {\n          var start = -1;\n\n          for (var i = 0; i !== before.length; ++i) {\n            start = Math.max(start, value.toLowerCase().indexOf(before[i].toLowerCase(), start + 1));\n          }\n\n          var c = value.substr(start + 1).replace(refuse, '')[0];\n          start = value.indexOf(c, start + 1);\n          value = \"\" + value.substr(0, start) + value.substr(start + 1);\n        }\n\n        var fv = _this.props.format(value);\n\n        if (stateValue === fv) {\n          _this.setState({\n            value: value\n          });\n        } else {\n          _this.props.onChange(fv);\n        }\n      });\n    };\n\n    _this._hKD = function (evt) {\n      if (evt.code === 'Delete') {\n        _this._del = true;\n      }\n    };\n\n    _this._hKU = function (evt) {\n      if (evt.code === 'Delete') {\n        _this._del = false;\n      }\n    };\n\n    _this.state = {\n      value: props.value,\n      local: true\n    };\n    return _this;\n  }\n\n  Rifm.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n    return {\n      value: state.local ? state.value : props.value,\n      local: false\n    };\n  };\n\n  var _proto = Rifm.prototype;\n\n  _proto.render = function render() {\n    var _handleChange = this._handleChange,\n        value = this.state.value,\n        children = this.props.children;\n    return children({\n      value: value,\n      onChange: _handleChange\n    });\n  } // delete when  https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/inputType will be supported by all major browsers\n  ;\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    document.removeEventListener('keydown', this._hKD);\n    document.removeEventListener('keyup', this._hKU);\n  } // delete when  https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/inputType will be supported by all major browsers\n  ;\n\n  _proto.componentDidMount = function componentDidMount() {\n    document.addEventListener('keydown', this._hKD);\n    document.addEventListener('keyup', this._hKU);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _state = this._state;\n\n    if (_state) {\n      var value = this.state.value;\n      var start = -1;\n\n      for (var i = 0; i !== _state.before.length; ++i) {\n        start = Math.max(start, value.toLowerCase().indexOf(_state.before[i].toLowerCase(), start + 1));\n      } // format usually looks better without this\n\n\n      if (this.props.replace && (_state.op || _state.del && !_state.di)) {\n        while (value[start + 1] && (this.props.refuse || /[^\\d]+/).test(value[start + 1])) {\n          start += 1;\n        }\n      }\n\n      _state.input.selectionStart = _state.input.selectionEnd = start + 1 + (_state.di ? 1 : 0);\n    }\n\n    this._state = null;\n  };\n\n  return Rifm;\n}(Component);\n\nexport { Rifm };\n"],"sourceRoot":""}