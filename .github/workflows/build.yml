name: Build

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]

jobs:
    build:
        runs-on: ubuntu-20.04
        steps:
            -   uses: actions/checkout@v2

            -   name: Setup node
                uses: actions/setup-node@v2.1.5
                with:
                    node-version: '14'

            -   name: Cache node modules
                uses: actions/cache@v2
                id: cache-modules
                env:
                    cache-name: cache-node-${{ matrix.node }}-modules
                with:
                    path: |
                        ./node_modules
                        ~/.cache/Cypress
                    key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./yarn.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-build-${{ env.cache-name }}-

            -   name: Install dependencies
                if: steps.cache-modules.outputs.cache-hit != 'true'
                run: yarn install --prefer-offline --frozen-lockfile

            -   name: Install dependencies for gh-pages
                if: steps.cache-gh-pages-modules.outputs.cache-hit != 'true'
                run: yarn --cwd ./gh-pages install --prefer-offline --frozen-lockfile

            -   name: Build package
                run: yarn build

            -   name: Run tests
                env:
                    CYPRESS_WATCH_FOR_FILE_CHANGES: false
                    CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
                    GROUP_NAME: node v${{ matrix.node }}
                    BABEL_ENV: test
                run:
                    yarn start-server-and-test 'yarn demo:production' 4040 'yarn cy:run --record --parallel --ci-build-id
                    "${GITHUB_RUN_NUMBER}" --group "${GROUP_NAME}"'
